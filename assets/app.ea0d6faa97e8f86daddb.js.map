{"version":3,"sources":["webpack:///assets/app.ea0d6faa97e8f86daddb.js","webpack:///./src/app/app.js","webpack:///./src/app/vendor.styles.js","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/app.config.js","webpack:///./src/app/private.html","webpack:///./src/app/home/home-template.html","webpack:///./src/app/brokers/brokers.template.html","webpack:///./src/app/brokers/broker.template.html","webpack:///./src/app/asset-stats/asset-stats.template.html","webpack:///./src/app/asset-stats/asset-stats-2.template.html","webpack:///./src/app/asset-stats/asset-stat-spaces.template.html","webpack:///./src/app/asset-stats/tenants/asset-stat-tenants.template.html","webpack:///./src/app/asset-stats/asset-stat-stacking-plan.template.html","webpack:///./src/app/users/users.template.html","webpack:///./src/app/users/user.template.html","webpack:///./src/app/assets/assets.template.html","webpack:///./src/app/assets/asset.template.html","webpack:///./src/app/clients/clients.template.html","webpack:///./src/app/clients/client.template.html","webpack:///./src/app/public.html","webpack:///./src/app/login/login-template.html","webpack:///./src/app/registration/registration.template.html","webpack:///./src/app/errors/forbidden.template.html","webpack:///./src/app/errors/notfound.template.html","webpack:///./src/app/app.interceptors.js","webpack:///./src/app/app.run.js","webpack:///./src/app/messages.js","webpack:///./src/app/messages_en-us.js","webpack:///./src/app/messages_de-ge.js","webpack:///./src/app/app.localization.js","webpack:///./src/app/app.activitymonitor.js","webpack:///./src/app/services/services.js","webpack:///./src/app/services/auth-interceptor-service.js","webpack:///./src/app/services/configuration-service.js","webpack:///./src/app/services/dialog.service.js","webpack:///./src/app/services/notification-service.js","webpack:///./src/app/services/security-service.js","webpack:///./src/app/services/image.service.js","webpack:///./src/app/services/file.service.js","webpack:///./src/app/services/utils.service.js","webpack:///./src/app/services/compare.service.js","webpack:///./src/app/components/components.js","webpack:///./src/app/components/mainheader/mainheader.component.js","webpack:///./src/app/components/mainheader/mainheader.controller.js","webpack:///./src/app/components/mainheader/mainheader.template.html","webpack:///./src/app/components/sidebar/sidebar.component.js","webpack:///./src/app/components/sidebar/sidebar.controller.js","webpack:///./src/app/components/sidebar/sidebar.template.html","webpack:///./src/app/components/right-sidebar/right-sidebar.component.js","webpack:///./src/app/components/right-sidebar/right-sidebar.controller.js","webpack:///./src/app/components/right-sidebar/right-sidebar.template.html","webpack:///./src/app/components/navigation/navigation-create-items.component.js","webpack:///./src/app/components/navigation/navigation-create-items.controller.js","webpack:///./src/app/users/user-edit-modal.controller.js","webpack:///./src/app/constants.js","webpack:///./src/app/users/user-edit-modal.template.html","webpack:///./src/app/brokers/broker-edit-modal.controller.js","webpack:///./src/app/brokers/broker-edit-modal.template.html","webpack:///./src/app/assets/asset-edit-modal.controller.js","webpack:///./src/app/assets/asset-edit-modal.template.html","webpack:///./src/app/clients/client-edit-modal.controller.js","webpack:///./src/app/clients/client-edit-modal.template.html","webpack:///./src/app/components/navigation/navigation-create-items.template.html","webpack:///./src/app/components/imagegallery/imagegallery.component.js","webpack:///./src/app/components/imagegallery/imagegallery.controller.js","webpack:///./src/app/components/imagegallery/imagecropper.controller.js","webpack:///./src/app/components/imagegallery/imagecropper.template.html","webpack:///./src/app/components/imagegallery/imagegallery.template.html","webpack:///./src/app/components/imagegallery/imagecropper.component.js","webpack:///./src/app/components/attachements/attachements.component.js","webpack:///./src/app/components/attachements/attachements.controller.js","webpack:///./src/app/components/attachements/attachements.template.html","webpack:///./src/app/components/breadcrumbpanel/breadcrumbpanel.component.js","webpack:///./src/app/components/breadcrumbpanel/breadcrumbpanel.controller.js","webpack:///./src/app/components/breadcrumbpanel/breadcrumbpanel.template.html","webpack:///./src/app/components/space-description/space-description.component.js","webpack:///./src/app/components/space-description/space-description.controller.js","webpack:///./src/app/components/space-description/space-description.template.html","webpack:///./src/app/components/tenant-description/tenant-description.component.js","webpack:///./src/app/components/tenant-description/tenant-description.controller.js","webpack:///./src/app/components/tenant-description/tenant-description.template.html","webpack:///./src/app/components/body-blocker/body-blocker.component.js","webpack:///./src/app/components/body-blocker/body-blocker.controller.js","webpack:///./src/app/components/body-blocker/body-blocker.template.html","webpack:///./src/app/components/usermenu/usermenu.component.js","webpack:///./src/app/components/usermenu/usermenu.controller.js","webpack:///./src/app/components/usermenu/usermenu.template.html","webpack:///./src/app/components/actionmenu/actionmenu.component.js","webpack:///./src/app/components/actionmenu/actionmenu.controller.js","webpack:///./src/app/components/actionmenu/actionmenu.template.html","webpack:///./src/app/components/footer/footer.component.js","webpack:///./src/app/components/footer/footer.controller.js","webpack:///./src/app/components/footer/footer.template.html","webpack:///./src/app/services/storeadapter.service.js","webpack:///./src/app/components/panels/paneltools.directive.js","webpack:///./src/app/components/panels/paneltools.template.html","webpack:///./src/app/components/panels/animate.directive.js","webpack:///./src/app/components/alerts/sweet-alert.factory.js","webpack:///./src/app/home/home.js","webpack:///./src/app/home/home-controller.js","webpack:///./src/app/login/login.js","webpack:///./src/app/login/login-controller.js","webpack:///./src/app/brokers/brokers.js","webpack:///./src/app/brokers/brokers.controller.js","webpack:///./src/app/brokers/broker.controller.js","webpack:///./src/app/brokers/broker.resource.js","webpack:///./src/app/users/users.js","webpack:///./src/app/users/users.controller.js","webpack:///./src/app/users/user.controller.js","webpack:///./src/app/users/user-change-password-modal.controller.js","webpack:///./src/app/users/user-change-password-modal.template.html","webpack:///./src/app/users/user.resource.js","webpack:///./src/app/users/role.resource.js","webpack:///./src/app/users/broker.resource.js","webpack:///./src/app/users/locale.resource.js","webpack:///./src/app/assets/assets.js","webpack:///./src/app/assets/assets.controller.js","webpack:///./src/app/assets/asset.controller.js","webpack:///./src/app/assets/assetgallary.component.js","webpack:///./src/app/assets/floors/floor.component.js","webpack:///./src/app/assets/floors/floor.controller.js","webpack:///./src/app/assets/floors/floors-add-range-modal.controller.js","webpack:///./src/app/assets/floors/floors-add-range-modal.template.html","webpack:///./src/app/assets/floors/floor.template.html","webpack:///./src/app/assets/spaces/space.component.js","webpack:///./src/app/assets/spaces/space.controller.js","webpack:///./src/app/assets/spaces/space.template.html","webpack:///./src/app/assets/spaces/spaces.component.js","webpack:///./src/app/assets/spaces/spaces.controller.js","webpack:///./src/app/assets/spaces/spaces.template.html","webpack:///./src/app/assets/assetdocuments.component.js","webpack:///./src/app/assets/assetObjects/object.component.js","webpack:///./src/app/assets/assetObjects/object.controller.js","webpack:///./src/app/assets/assetObjects/asset-object-edit-modal.controller.js","webpack:///./src/app/assets/assetObjects/asset-object-edit-modal.template.html","webpack:///./src/app/assets/assetObjects/object.template.html","webpack:///./src/app/assets/asset.resource.js","webpack:///./src/app/assets/assetObjects/object.resource.js","webpack:///./src/app/assets/floors/floor.resource.js","webpack:///./src/app/assets/spaces/space.resource.js","webpack:///./src/app/asset-stats/asset-stats.js","webpack:///./src/app/asset-stats/asset-stats.controller.js","webpack:///./src/app/asset-stats/asset-stat-spaces.controller.js","webpack:///./src/app/asset-stats/spaces-filter-modal.controller.js","webpack:///./src/app/asset-stats/spaces-filter-modal.template.html","webpack:///./src/app/asset-stats/tenants/asset-stat-tenants.controller.js","webpack:///./src/app/asset-stats/tenants/tenants-filter-modal.controller.js","webpack:///./src/app/asset-stats/tenants/tenants-filter-modal.template.html","webpack:///./src/app/asset-stats/asset-stat-stacking-plan.resource.js","webpack:///./src/app/asset-stats/asset-stat-stacking-plan.controller.js","webpack:///./src/app/asset-stats/asset-stats.resource.js","webpack:///./src/app/asset-stats/asset-stat-spaces.resource.js","webpack:///./src/app/asset-stats/tenants/asset-stat-tenants.resource.js","webpack:///./src/app/clients/clients.js","webpack:///./src/app/clients/client.controller.js","webpack:///./src/app/clients/clients.controller.js","webpack:///./src/app/clients/client.resource.js","webpack:///./src/app/clients/representatives/representatives.component.js","webpack:///./src/app/clients/representatives/representatives.controller.js","webpack:///./src/app/clients/representatives/representatives.template.html","webpack:///./src/app/clients/representatives/representatives.resource.js","webpack:///./src/app/registration/registration.js","webpack:///./src/app/registration/registration.controller.js","webpack:///./src/app/registration/registration.resource.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_angular","_angular2","_angularSanitize","_angularUiRouter","_angularUiRouter2","_index","_index2","_angularActivityMonitor","_ngInfiniteScroll","_ngInfiniteScroll2","_app","_app2","_app3","_app4","_app5","_app6","_app7","_app8","_services","_services2","_components","_components2","_paneltools","_paneltools2","_animate","_animate2","_sweetAlert","_sweetAlert2","_home","_home2","_login","_login2","_brokers","_brokers2","_users","_users2","_assets","_assets2","_assetStats","_assetStats2","_clients","_clients2","_registration","_registration2","app","name","config","run","editableOptions","theme","directive","activate","factory","filter","number","abs","Math","pow","toFixed","constant","HomeView","UsersView","BrokersView","BrokerManage","AssetsView","AssetsManage","ClientsManage","webpackContext","req","webpackContextResolve","map","Error","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./uk","./uk.js","./uz","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","keys","Object","resolve","id","routing","$urlRouterProvider","$locationProvider","$stateProvider","Activities","html5Mode","enabled","requireBase","hashPrefix","otherwise","state","template","abstract","url","parent","controller","canDo","SecurityService","controllerAs","brokerObject","$stateParams","Broker","get","$promise","asset","Asset","assetId","currentUser","getUserInfo","userObject","User","assetObject","getFull","clientObject","Client","params","automatic","registrationObject","Registration","token","defineProperty","value","$inject","interceptors","$httpProvider","push","$","$rootScope","fillAuthData","Messages","_messages2","$on","_validation_engine2","initGroups","then","result","updateLocale","localeId","setBodySmall","window","outerWidth","addClass","removeClass","document","ready","bind","_messages","_validation_engine","call","messageId","locale","_messages_enUs","_messages_enUs2","_messages_deGe","_messages_deGe2","messages","confirmation","actions","administrator","broker","square.meter","validation.required","validation.email","validation.maxLength","validation.phone","validation.shortPassword","validation.passwordsNotMatch","country.germany","state.unknown","state.pending","state.active","state.archived","mainheader.settings.product","mainheader.settings.notification","mainheader.settings.account","mainheader.language","mainheader.signout","sidebar.brokers","sidebar.users","sidebar.assets","sidebar.clients","sidebar.spaces","sidebar.stackingplan","image.cropper.title","image.cropper.save","image.cropper.saving","image.cropper.cancel","image.cropper.addbutton","image.cropper.placeholder.empty","brokers.new","brokers.title","brokers.title.general","broker.info.title","brokers.name","brokers.address","brokers.state","brokers.message.deleted","brokers.message.created","brokers.message.updated","brokers.message.activated","brokers.placeholder.name","brokers.placeholder.address","brokers.save","brokers.cancel","brokers.create","brokers.saving","brokers.archive","brokers.archive.title","brokers.archive.confirmButton","brokers.archived","brokers.activate","brokers.activate.title","brokers.activate.confirmButton","brokers.edit","brokers.edit.title","brokers.create.title","brokers.projects","brokers.messages","brokers.views","brokers.additional.container","users.new","users.title","users.title.general","users.info.title","users.email","users.displayname","users.state","users.locale","users.broker","users.broker.help","users.role","users.role.help","users.message.created","users.message.updated","users.message.archived","users.message.activated","users.placeholder.email","users.placeholder.displayname","users.placeholder.currentPassword","users.placeholder.newPassword","users.placeholder.confirmPassword","users.images.add","users.invite","users.save","users.saving","users.cancel","users.create","users.archive","users.archive.title","users.archive.confirmButton","users.archived","users.activate","users.activate.title","users.activate.confirmButton","users.edit","users.edit.title","users.changePassword","users.create.title","users.projects","users.messages","users.views","users.additional.container","users.changePassord.title","users.currentPassword","users.newPassword","users.confirmPassword","users.changingPasswordBtn","users.changePasswordBtn","users.changePassword.failed","users.changePassword.success","assets.new","assets.add","assets.edit","assets.title","assets.title.address","assets.title.other","assets.name","assets.state","assets.address","assets.country","assets.city","assets.city.help","assets.street","assets.street.help","assets.building","assets.building.help","assets.brokerDatabaseRecordId","assets.brokerDatabaseRecordId.help","assets.brokerDatabaseRecordId.errorLength","assets.floorCount","assets.floors.label","assets.floors.configure","assets.floors.title","assets.floors.number","assets.floors.description","assets.floors.assetobject","assets.floors.addrange","assets.floors.addbutton","assets.floors.cancelbutton","assets.floors.range.modal.title","assets.floors.range.title","assets.floors.range.field","assets.floors.range.checkbox","assets.floors.range.checkbox.help","assets.floors.deleted","assets.floors.created","assets.floors.updated","assets.floors.delete.title","assets.floors.delete.confirmButton","assets.spaces.modal.title","assets.spaces.title","assets.spaces.unit","assets.spaces.office","assets.spaces.garageUnderground","assets.spaces.roofTerrace","assets.spaces.outerSurface","assets.spaces.warehouse","assets.spaces.handlesSurface","assets.spaces.gastronomy","assets.spaces.archive","assets.spaces.technicalRoom","assets.spaces.flat","assets.spaces.retail","assets.spaces.number","assets.spaces.type","assets.spaces.floor","assets.spaces.assetobject","assets.spaces.rentableArea","assets.spaces.marketingDescription","assets.spaces.notes","assets.spaces.minAskingPrice","assets.spaces.maxAskingPrice","assets.spaces.placeholder.number","assets.spaces.placeholder.rentableArea","assets.spaces.placeholder.marketingDescription","assets.spaces.placeholder.notes","assets.spaces.placeholder.minAskingPrice","assets.spaces.placeholder.maxAskingPrice","assets.spaces.saving","assets.spaces.save","assets.spaces.cancel","assets.spaces.add","assets.spaces.deleted","assets.spaces.created","assets.spaces.updated","assets.spaces.delete.title","assets.spaces.delete.confirmButton","assets.spaces.validation.maxAskingPrice","assets.spaces.availability","assets.spaces.asking_price","assets.spaces.tenant_name","assets.spaces.in_place_rent","assets.spaces.net_rent","assets.spaces.vat","assets.spaces.additional_cost","assets.spaces.total_rent","assets.spaces.status","assets.spaces.lease_start_date","assets.spaces.lease_end_date","assets.spaces.filter.title","assets.spaces.filter.all","assets.spaces.filter.vacant","assets.spaces.filter.occupied","assets.spaces.filter.in_1_month","assets.spaces.filter.in_3_month","assets.spaces.filter.in_6_month","assets.spaces.filter.in_1_year","assets.spaces.filter.custom_dates","assets.spaces.filter.status.title","assets.spaces.filter.extra","assets.spaces.filter.favorites","assets.spaces.filter.empty","assets.spaces.filter.unit","assets.spaces.filter.tower","assets.spaces.filter.towers","assets.spaces.filter.towers.placeholder","assets.spaces.filter.floor","assets.spaces.filter.floor_from","assets.spaces.filter.floor_to","assets.spaces.filter.rentable_area","assets.spaces.filter.rentable_area_from","assets.spaces.filter.rentable_area_to","assets.spaces.filter.type","assets.spaces.filter.asking_price","assets.spaces.filter.asking_price_from","assets.spaces.filter.asking_price_to","assets.spaces.filter.status","assets.spaces.filter.availability","assets.spaces.filter.available_from","assets.spaces.filter.immediately","assets.spaces.filter.in_place_rent","assets.spaces.filter.in_place_rent_from","assets.spaces.filter.in_place_rent_to","assets.spaces.filter.from","assets.spaces.filter.to","assets.spaces.filter.apply","assets.spaces.filter.cancel","assets.tenants.title","assets.tenants.name","assets.tenants.type","assets.tenants.contract_number","assets.tenants.total_area","assets.tenants.units","assets.tenants.towers","assets.tenants.floor","assets.tenants.area_in_unit","assets.tenants.in_place_rent","assets.tenants.net_rent","assets.tenants.vat","assets.tenants.additional_cost","assets.tenants.total_rent","assets.tenants.status","assets.tenants.lease_start_date","assets.tenants.lease_end_date","assets.tenants.filter.title","assets.tenants.filter.in_place","assets.tenants.filter.expired","assets.tenants.filter.within_1_month","assets.tenants.filter.within_3_month","assets.tenants.filter.within_6_month","assets.tenants.filter.within_1_year","assets.tenants.filter.custom_dates","assets.tenants.filter.quick.title","assets.tenants.filter.extra","assets.tenants.filter.favorites","assets.tenants.filter.empty","assets.tenants.filter.unit","assets.tenants.filter.tower","assets.tenants.filter.towers","assets.tenants.filter.towers.placeholder","assets.tenants.filter.industry","assets.tenants.filter.industry.placeholder","assets.tenants.filter.lease_date","assets.tenants.filter.lease_start_date","assets.tenants.filter.lease_end_date","assets.tenants.filter.tenant_name","assets.tenants.filter.size","assets.tenants.filter.total_rent","assets.tenants.filter.type","assets.tenants.filter.rentable_area","assets.tenants.filter.rentable_area_from","assets.tenants.filter.rentable_area_to","assets.tenants.filter.rent","assets.tenants.filter.from","assets.tenants.filter.to","assets.tenants.filter.this_month","assets.tenants.filter.last_month","assets.tenants.filter.this_year","assets.tenants.filter.last_year","assets.tenants.filter.datepicker.clear","assets.tenants.filter.apply","assets.tenants.filter.cancel","assets.gallery.header","assets.gallery.title","assets.gallery.add","assets.gallery.main","assets.gallery.message.added","assets.gallery.message.deleted","assets.broker","assets.broker.help","assets.notes","assets.notes.errorLength","assets.description","assets.message.archived","assets.message.activated","assets.message.created","assets.message.updated","assets.info","assets.info.general","assets.info.images","assets.placeholder.broker","assets.placeholder.name","assets.placeholder.country","assets.placeholder.city","assets.placeholder.street","assets.placeholder.building","assets.placeholder.brokerDatabaseRecordId","assets.placeholder.notes","assets.placeholder.description","assets.save","assets.cancel","assets.saving","assets.archive","assets.archive.title","assets.archive.confirmButton","assets.archived","assets.activate","assets.activate.title","assets.activate.confirmButton","assets.available.space","assets.occupancy","assets.total.rentable","assets.objects.title","assets.objects.name","assets.objects.isDisplayOnStackingPlan","assets.objects.add","assets.objects.message.deleted","assets.objects.message.created","assets.objects.message.updated","assets.objects.delete.title","assets.objects.delete.confirmButton","assets.objects.placeholder.name","assets.objects.create.name","assets.objects.save","assets.objects.cancel","assets.objects.saving","assets.objects.create.title","assets.objects.create.isDisplayOnStackingPlan","assets.objects.address","assets.objects.edit.title","assets.validation.countryRequired","assets.validation.cityRequired","assets.validation.streetRequired","assets.validation.buildingRequired","clients.new","clients.title","clients.name","clients.shortName","clients.shortName.formLabel","clients.industry","clients.address","clients.country","clients.info","clients.info.general","clients.info.representatives","clients.user","clients.notes","clients.state","clients.placeholder.name","clients.placeholder.shortName","clients.placeholder.notes","clients.placeholder.description","clients.save","clients.saving","clients.cancel","clients.message.archived","clients.message.created","clients.message.updated","clients.view.title","clients.view.notes","clients.archive.title","clients.archive.confirmButton","clients.archived","clients.activate","clients.activate.title","clients.activate.confirmButton","clients.edit","clients.edit.title","clients.create.title","clients.representatives.new","clients.representatives.title","clients.representatives.name","clients.representatives.email","clients.representatives.phone","clients.representatives.position","clients.representatives.message.deleted","clients.representatives.message.created","clients.representatives.message.updated","industry.technology","industry.media","industry.education","industry.trade","industry.government","industry.healthcare","industry.logistics","industry.consulting","industry.retail","industry.telco","industry.food","industry.finance","industry.residential","industry.travel","industry.wellness","industry.hr","industry.real-estate","industry.industrials","login.email","login.password","login.placeholder.email","login.placeholder.password","login.login","login.automatic.signout","stacking-plan.title","stacking-plan.empty","stacking-plan.space.details","stacking-plan.space.options","stacking-plan.space.deals","stacking-plan.view.actual","stacking-plan.view.normalized","stacking-plan.legend.vacant","stacking-plan.legend.lease.expiration","stacking-plan.expires","stacking-plan.expires.2","stacking-plan.unit","stacking-plan.nospaces","stacking.plan.details.lease.start","stacking.plan.details.lease.end","stacking.plan.details.cost.totalmonth","stacking.plan.details.cost.netrent","stacking.plan.details.cost.additional","stacking.plan.details.cost.other","stacking.plan.details.cost.vat","registration.username","registration.password","registration.confirmPassword","registration.displayName","registration.submit","registration.cancel","registration.saving","address.autoComplete","address.manually","address.streetAddress","address.postCode","address.country","address.city","address.street","address.placeholder.country","address.placeholder.city","address.placeholder.street","address.placeholder.streetAddress","address.placeholder.postCode","address.validation.countryRequired","LocaleId","activityMonitor","$state","ActivityMonitor","options","inactive","_authInterceptorService","_authInterceptorService2","_configurationService","_configurationService2","_dialog","_dialog2","_notificationService","_notificationService2","_securityService","_securityService2","_image","_image2","_file","_file2","_utils","_utils2","_compare","_compare2","angular","$q","location","localStorageService","service","_classCallCheck","instance","Constructor","TypeError","AuthInterceptorService","$location","_this","this","request","includes","access_token","headers","Authorization","requestError","rejection","reject","response","status","remove","pathname","href","responseError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","ConfigurationService","DialogService","msg","confirmAction","confirm","done","dialogResult","NotificationService","toaster","text","pop","type","body","timeout","position-class","$http","Role","notificationService","configurationService","authentication","Authentication","activities","userInfo","authData","set","userName","clear","reset","off","password","self","data","getClientId","deferred","defer","post","getApiBaseUrl","Content-Type","on","signOut","go","reload","err","promise","activityId","failedState","notLoggedInState","_this2","getActivities","indexOf","toUpperCase","_this3","method","roleId","role","UserInfo","email","displayName","brokerId","authenticated","username","roleName","ImageService","sourceImage","fileExt","width","height","postProcess","outputImage","Image","onload","canvas","createElement","ctx","getContext","clearRect","drawImage","src","toDataURL","getMIMEType","dataURI","byteString","split","atob","unescape","mimeString","ia","Uint8Array","charCodeAt","Blob","FileService","init","readSingleFile","file","readCompleted","reader","FileReader","f","evt","uploadedFile","filename","extension","toLowerCase","size","readAsDataURL","sourceFileArray","singleFileReadCallBack","readCompletedCallback","filesCount","readedFilesCount","destFileArray","readFile","fileIndex","e","UtilsService","s4","floor","random","toString","substring","city","street","building","streetAddress","integerPart","round","alignStatusLabelsLength","CompareObjectService","obj1","obj2","undefined","countryId","brokerDatabaseRecordId","description","notes","floorCount","res","compareSimpleAssets","images","compareImages","documents","compareDocuments","floors","compareFloors","spaces","compareSpaces","filePath","order","originalFileName","isMain","contentType","imageFile","documentFile","floorId","rentableArea","marketingDescription","compareSimpleSpaces","compareSimpleFloors","compareSimpleClients","representatives","compareRepresentatives","mobileNumber","officeNumber","_mainheader","_mainheader2","_sidebar","_sidebar2","_rightSidebar","_rightSidebar2","_navigationCreateItems","_navigationCreateItems2","_imagegallery","_imagegallery2","_imagecropper","_imagecropper2","_attachements","_attachements2","_breadcrumbpanel","_breadcrumbpanel2","_spaceDescription","_spaceDescription2","_tenantDescription","_tenantDescription2","_bodyBlocker","_bodyBlocker2","_usermenu","_usermenu2","_actionmenu","_actionmenu2","_footer","_footer2","component","_mainheaderTemplate","_mainheaderTemplate2","MainHeaderComponent","bindings","MainHeaderController","$scope","Locale","securityService","loadUserInfo","applyActivities","query","languages","item","currentLocaleId","updateUserLocale","toggleClass","loadBrokerInfo","brokerInfo","userId","update","homeAvailable","brokersAvailable","usersAvailable","assetsAvailable","_sidebarTemplate","_sidebarTemplate2","SidebarComponent","Sidebar","utils","event","toState","toParams","fromState","fromParams","resetSettings","updateMenu","blur","current","assetsViewAvailable","clientsAvailable","stateParams","assetsClientMenu","isAssetsClientMenu","globalClientMenu","states","l","_this4","assetAddress","generateAddress","showAssetPanel","_rightSidebarTemplate","_rightSidebarTemplate2","RightSidebarComponent","RightSidebar","$timeout","bodyCl","bodyBlockerCl","updateContent","close","content","visible","$broadcast","_navigationCreateItemsTemplate","_navigationCreateItemsTemplate2","NavigationCreateItemsComponent","_userEditModal","_userEditModal2","_userEditModalTemplate","_userEditModalTemplate2","_brokerEditModal","_brokerEditModal2","_brokerEditModalTemplate","_brokerEditModalTemplate2","_assetEditModal","_assetEditModal2","_assetEditModalTemplate","_assetEditModalTemplate2","_clientEditModal","_clientEditModal2","_clientEditModalTemplate","_clientEditModalTemplate2","NavigationCreateItemsController","$uibModal","addNewUser","open","addNewBroker","addNewSet","addNewClient","clientId","_constants","UserController","$uibModalInstance","StoreAdapter","storeAdapter","validationGroup","initForm","errorHandler","requestFailed","error","editMode","isSaveOperationDisable","user","emailSettings","placeholder","bindingOptions","disabled","emailValidationRules","validationRules","message","max","min","trim","displaynameSettings","displaynameValidationRules","rolesStore","createStore","load","roleSelectSettings","items","displayExpr","valueExpr","roleValidationRules","localesStore","console","log","localeSelectSettings","localeValidationRules","brokersStore","brokerSelectSettings","brokerValidationRules","validateAndSave","getGroupConfig","validate","isValid","saveInProgress","success","save","cancel","removeGroup","dismiss","_array_store","_array_store2","CONSTANTS","devExtremeStoreGenerator","values","store","forEach","display","assetStateStore","assetStateStorePlain","slice","userStateStore","brokerStateStore","countries","isoCode","countryStore","countryStorePlain","clientsStateStore","industry","clientsIndustryStore","clientsIndustryPlain","defaultAvailablePageSizes","defaultPageSize","defaultGridSettings","settings","allowColumnResizing","showBorders","showRowLines","paging","pageSize","pager","showPageSizeSelector","allowedPageSizes","showInfo","filterRow","grouping","contextMenuEnabled","groupPanel","JSON","parse","stringify","spaceTypes","spaceTypeStore","spaceTypeStorePlain","spaceStateStore","phonePattern","_constants2","BrokerEditController","addressValidationGroup","initAutocomplete","clearAddress","address","postCode","nameSettings","nameValidationRules","countrySettings","dataSource","countryValidationRules","onOptionChanged","setAutocompleteCountry","addressSettings","addressValidationRules","validationCallback","rule","citySettings","onChange","cityValidationRules","streetSettings","streetValidationRules","streetAddressSettings","streetAddressValidationRules","postCodeSettings","postCodeValidationRules","google","autocomplete","maps","places","Autocomplete","addListener","place","getPlace","citySet","streetSet","buildingSet","postCodeSet","address_components","Array","types","long_name","curCountryCode","country","setComponentRestrictions","AssetEditModalController","$parent","descriptionSettings","maxLength","descriptionValidationRules","validateAndSaveSettings","validation","addressValidation","create","ClientEditController","getDataInProgress","client","notesSettings","notesValidationRules","shortNameSettings","shortNameValidationRules","industryStore","industrySettings","industryValidationRules","industryId","byKey","dataItem","_imagegalleryTemplate","_imagegalleryTemplate2","ImageGalleryComponent","maxImageWidth","maxImageHeight","maxImageCount","readonly","imageAddCallback","imageDeleteCallback","sortingChangeCallback","_imagecropperTemplate","_imagecropperTemplate2","ImageGalleryController","fileService","imageService","initComponent","uniqueId","generateGuid","enableUpload","imageCount","addImageBtnConfig","icon","uploadImage","modal","viewPortType","checkImageLimit","image","createImage","imageData","raw","addImage","closed","$$phase","$root","$apply","updateImageOrder","deleteImage","splice","onImageSort","uniqueFileName","sortImage","sort","a","b","loadFiles","files","uploadFiles","singleFile","resizeImage","imageRaw","imageResizedCallback","imgWidth","imgHeight","addImageBtnClick","element","change","_croppie","_croppie2","ImageCropperController","Upload","$croppie","fileSelected","events","cropImage","val","setTimeout","click","format","getImageType","picFile","resp","zoom","el","getElementById","enableExif","viewport","boundary","mouseWheelZoom","showZoomer","enableOrientation","enforceBoundary","ImageCropperComponent","_attachementsTemplate","_attachementsTemplate2","AttachementsComponent","maxAttachementSize","maxAttachementCount","documentCreateCallback","documentAddCallback","documentDeleteCallback","AttachementsController","initList","documentsCount","editNotesValue","editDocumentBtnConfig","onClick","model","isEditMode","resetEditMode","deleteDocumentBtnConfig","deleteDocument","saveDocumentBtnConfig","cancelDocumentBtnConfig","editDocumentTxbConfig","editDocumentTxbValidationRules","checkFileLimit","createDocument","refreshList","fileData","resetEditNotesValue","modified","listDataSource","listOptions","dxList","_breadcrumbpanelTemplate","_breadcrumbpanelTemplate2","BreadcrumbPanelComponent","title","transclude","BreadcrumbPanel","_spaceDescriptionTemplate","_spaceDescriptionTemplate2","SpaceDescriptionComponent","context","SpaceDescription","uibDateParser","officeType","find","date","Date","_tenantDescriptionTemplate","_tenantDescriptionTemplate2","TenantDescriptionComponent","TenantDescription","selectedSpace","vatCosts","additionalCosts","Number","vatCost","additionalCost","uniqueTowers","space","towerId","typeId","spaceId","_bodyBlockerTemplate","_bodyBlockerTemplate2","BodyBlockerComponent","_usermenuTemplate","_usermenuTemplate2","UserMenuComponent","UserMenu","_actionmenuTemplate","_actionmenuTemplate2","ActionMenuComponent","ActionMenu","_footerTemplate","_footerTemplate2","FooterComponent","Footer","__webpack_provided_window_dot_jQuery","_jquery","_jquery2","_custom_store","_custom_store2","jqDeferred","Deferred","apply","jqPromise","resource","queryParams","handleError","loadOptions","extend","totalCount","catch","insert","delete","count","_paneltoolsTemplate","_paneltoolsTemplate2","PanelToolsDirective","restrict","scope","$element","showhide","hpanel","closest","footer","slideToggle","resize","closebox","AnimatePanelDirective","attrs","startAnimation","delay","start","effect","child","panel","panelsCount","animateTime","each","elm","rounded","css","$window","swal","arg1","arg2","arg3","isConfirm","warning","info","_homeController","_homeController2","HomeController","redirectTarget","_loginController","_loginController2","LoginController","signInData","SignInData","signIn","error_description","_broker","_broker2","_broker3","_broker4","jQuery","BrokersController","sweetAlert","stateStore","brokers","gridDataSource","gridSettings","columns","dataField","caption","sortOrder","filterOperations","selectedFilterOperation","cellTemplate","cellElement","cellInfo","ui-sref","displayValue","appendTo","lookup","alignment","container","dxButton","jQueryEvent","stopPropagation","assign","isArchived","activateBroker","archiveBroker","showCancelButton","cancelButtonText","confirmButtonColor","confirmButtonText","dxDataGrid","refresh","BrokerController","$filter","NgMap","getMap","marker","Marker","setMap","stylez","featureType","elementType","stylers","saturation","mapType","StyledMapType","mapTypes","setMapTypeId","setMapCoordinates","newAddress","newCountry","needToUpdateMap","archive","geocoder","Geocoder","geocode","setCenter","geometry","setPosition","$resource","isArray","_user","_user2","_user3","_user4","_role","_role2","_locale","_locale2","UsersController","initGrid","users","activateUser","archiveUser","_userChangePasswordModal","_userChangePasswordModal2","_userChangePasswordModalTemplate","_userChangePasswordModalTemplate2","roles","setRole","locales","setLocale","UserChangePasswordController","changePasswordModel","newPassword","confirmPassword","isModalChanged","comprasionTarget","isFormValid","newPasswordSettings","mode","newPasswordValidationRules","confirmPasswordSettings","confirmPasswordValidationRules","comparisonTarget","changePassword","_asset","_asset2","_assetgallary","_assetgallary2","_floor","_floor2","_space","_space2","_spaces","_spaces2","_assetdocuments","_assetdocuments2","_object","_object2","_asset3","_asset4","_object3","_object4","_floor3","_floor4","_space3","_space4","AssetsController","assets","editing","allowAdding","allowUpdate","allowDelete","texts","confirmDeleteMessage","activateAsset","archiveAsset","AssetController","mainImageUrl","updateDataSources","initiator","saveUpdates","updateImage","showBroker","selected","brokerDatabaseRecordIdValidation","notesValidation","resetImage","blob","dataURItoBlob","fd","FormData","forms","append","setImage","hasOwnProperty","$event","preventDefault","tab","currentTarget","getAttribute","AssetGalleryComponent","_floorTemplate","_floorTemplate2","FloorComponent","needUpdateDataSources","_floorsAddRangeModalController","_floorsAddRangeModalController2","_floorsAddRangeModalTemplate","_floorsAddRangeModalTemplate2","_data_source","FloorController","Floor","AssetObject","loadData","t","afterExecuteCallback","loadAssetObjects","loadFloors","objects","getByAssetId","isFloorFormVisible","isAddFloorRangeDisabled","dataGrid","beginUpdate","columnOption","assetObjectStore","option","endUpdate","refreshGrid","validateFloor","oldValue","newValue","assetObjectId","allowSorting","allowEditing","editRow","rowIndex","deleteFloor","editCellTemplate","saveEditData","updateFloor","cancelEditData","onRowValidating","getRowIndexByKey","oldData","newData","getCellElement","objectId","floorIdx","findIndex","addFloorRange","cnt","autoNumerate","createRange","autonumerate","temp","addRangeFloorCount","autoNumerateFloors","FloorsAddRangeModalController","initDataSource","floorRequest","floorRangeSettings","showSpinButtons","showClearButton","onValueChanged","floorRangeValidationRules","autoNumerateFloorSettings","assetObjectSelectSettings","assetObjectValidationRules","_spaceTemplate","_spaceTemplate2","SpaceComponent","listMode","_data_source2","SpaceController","Space","callback","floorStore","numberSettings","numberValidationRules","typeSelectSettings","typeValidationRules","rentableAreaSettings","rentableAreaValidationRules","floorSelectSettings","floorValidationRules","onSelectionChanged","selectedItem","dxSelectBox","repaint","marketingDescriptionSettings","marketingDescriptionValidationRules","minAskingPriceSettings","minAskingPriceValidationRules","maxAskingPrice","maxAskingPriceSettings","maxAskingPriceValidationRules","minAskingPrice","_spacesTemplate","_spacesTemplate2","SpacesComponent","SpacesController","loadSpaces","dataType","updateSpace","deleteSpace","spaceIdx","AssetDocumentsComponent","_objectTemplate","_objectTemplate2","AssetObjectComponent","_assetObjectEditModal","_assetObjectEditModal2","_assetObjectEditModalTemplate","_assetObjectEditModalTemplate2","AssetObjectController","editAssetObject","deleteAssetObject","assetObjectIdx","refreshData","towerObject","getById","AssetObjectEditController","tower","isDisplayOnStackingPlan","displaySettings","displayValidationRules","transformRequest","identity","getByAssetObjectId","_assetStatSpaces","_assetStatSpaces2","_assetStatTenants","_assetStatTenants2","_assetStatStackingPlan","_assetStatStackingPlan2","_assetStatStackingPlan3","_assetStatStackingPlan4","_assetStats3","_assetStats4","_assetStatSpaces3","_assetStatSpaces4","_assetStatTenants3","_assetStatTenants4","w","changeHeight","AssetStatsController","AssetStats","assetStats","isMore","page","loadedImages","loadedImagesCount","totalRowsCount","pageNumber","color","getPanelColor","assetsLength","concat","index","panelColors","_spacesFilterModal","_spacesFilterModal2","_spacesFilterModalTemplate","_spacesFilterModalTemplate2","_moment","_moment2","AssetStatSpacesController","AssetStatSpaces","AssetStatStackingPlan","selectSpaceRow","greedData","statuses","selectedStatus","customDateElement","daterangepicker","minDate","autoApply","ev","picker","customAvailableFrom","startDate","customAvailableTo","endDate","getParsedDate","gridUpdate","extraFilters","towers","sortType","sortDirection","getObjects","statsLabelsDisctionary","all","vacant","occupied","1_month","3_month","6_month","1_year","availableFrom","availableTo","inPlacePriceFrom","inPlacePriceTo","priceFrom","priceTo","areaFrom","areaTo","floorFrom","floorTo","add","search","st","agte","alte","apgte","aplte","ipgte","iplte","expgte","explte","fgte","flte","twr","ot","srt","ord","pg","ps","floorsMax","maxFloor","floorsMin","minFloor","disable_infinite_scrolling","updateStatusLabels","stats","load_more","setStartDate","setEndDate","showDateRangeSelector","focus","itemIndex","row","cl","contract","label","formatBadgeValue","SpacesFilterController","piecesPerRow","typesRows","j","jl","shift","fromValueChanged","from","to","toValueChanged","fromSelectorChanged","toSelectorChanged","price_from","price_to","area_from","area_to","floor_from","floor_to","in_place_rent_from","in_place_rent_to","available","office_types","office_types_ids","officeTypeToggleSelection","valueString","florFrom","florTo","_tenantsFilterModal","_tenantsFilterModal2","_tenantsFilterModalTemplate","_tenantsFilterModalTemplate2","AssetStatsTenantsController","AssetStatTenants","selectedTenant","opens","customExpirationFrom","customExpirationTo","in_place","expirationFrom","expirationTo","pricePerMeterFrom","pricePerMeterTo","contractStartDate","contractEndDate","industries","stgte","stlte","ind","uniqueSpacesTowers","towerName","_this5","getSpaceInfo","spaceTypeString","getOfficeType","spaceNumber","spaceArea","tenantName","leaseStartDate","startsAt","leaseEndDate","endsAt","expires","utc","diff","totalCosts","inPlaceRent","netRent","otherCosts","tenant","nodeName","_this6","_defineProperty","leaseDateStart","leaseDateEnd","lease_date","_ranges","pickerField","cancelLabel","autoUpdateInput","ranges","startOf","endOf","subtract","d","object","getObjectData","AssetStatStackingPlanController","viewHeight","onMouseDownOnScrollDriverEventHandler","onContentScrollEventHandler","onMouseMoveOnDocumentEventHandler","onMouseUpOnDocumentEventHandler","breadcrumbStates","path","isTabsLoadingState","noStackingPlan","tabs","isLoadingState","getFloorData","noStackingPlanMessage","clearScrollHandlers","legendYears","generateYearsList","scrollDriverBlockerEl","scrollDriverWrap","contentWrap","scrollDriverBlockerHeight","scrollDriverHeight","outerHeight","contentHeight","wrapperOffset","offset","top","scrollDriverTargetHeight","scrollDriverWrapHeight","initScrollHandlers","onMouseWheelOnScrollDriverEventHandler","hover","blockerInitialTop","blockerCurPosition","originalEvent","pageY","parseInt","curScroll","scrollTop","scrollInPercents","targetPositionForBlocker","position","positionInPercents","details","spaceType","maxFloorArea","totalFloorArea","getMaxOfFloorArea","floorWidth","view","_loop","spaceInPercents","leaseEndYearIndex","getLeaseEndYearIndex","weight","tenantId","floorOrder","setSizes","activeCl","viewType","currentYear","getFullYear","leaseEndYear","_client","_client2","_client3","_client4","_representatives","_representatives2","_representatives3","_representatives4","ClientController","ClientsController","dialogService","clients","selection","selectedItems","selectedClient","selectedRowsData","_representativesTemplate","_representativesTemplate2","RepresentativesComponent","RepresentativesController","Representative","rep","onInitialized","gridInstance","pattern","deleteRow","onRowInserting","onRowUpdating","onRowRemoving","addRow","phone","_registration3","_registration4","RegistrationController","validateGroup","passwordSettings","passwordValidationRules","displayNameSettings","displayNameValidationRules","saveSettingsBtnConfig","submit","cancelSettingsBtnConfig","$watch","isSaveOperationDisabled","$ctrl","login"],"mappings":"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IC,QAAQ,GAAK,IAC1CH,IAAMC,KAAKC,IAAI,GAAI,IAAMF,KAAOC,KAAKC,IAAI,GAAI,KAEpDH,QAAUA,OAASE,KAAKC,IAAI,GAAI,IAAIC,QAAQ,GAAK,KAE9CJ,WAKnBV,IAAIe,SAAS,cACTC,SAAU,uCACVC,UAAW,uCACXC,YAAa,uCACbC,aAAc,uCACdC,WAAY,uCACZC,aAAc,uCACdC,cAAe,0CDwzE,OAAQC,QAASC,qBAE/B,YE9TDA,qBAAA,KAGAA,oBAAA,KAGAA,oBAAA,KACAA,oBAAA,KAEAA,oBAAA,KAGAA,oBAAA,KAGAA,oBAAA,KAGAA,oBAAA,KAEAA,oBAAA,KAGAA,oBAAA,KAGAA,oBAAA,KAGAA,oBAAA,MF4TS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAET,IACS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAASF,OAAQC,QAASC,qBGrNhC,QAAAwE,gBAAAC,KACA,MAAAzE,qBAAA0E,sBAAAD,MAEA,QAAAC,uBAAAD,KACA,MAAAE,KAAAF,MAAA,WAAiC,SAAAG,OAAA,uBAAAH,IAAA,SA9NjC,GAAAE,MACAE,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,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","file":"assets/app.ea0d6faa97e8f86daddb.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(113);\n\t\n\t__webpack_require__(158);\n\t\n\t__webpack_require__(162);\n\t\n\t__webpack_require__(163);\n\t\n\t__webpack_require__(165);\n\t\n\tvar _angular = __webpack_require__(178);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _angularSanitize = __webpack_require__(180);\n\t\n\tvar _angularSanitize2 = _interopRequireDefault(_angularSanitize);\n\t\n\t__webpack_require__(182);\n\t\n\t__webpack_require__(184);\n\t\n\tvar _angularUiRouter = __webpack_require__(186);\n\t\n\tvar _angularUiRouter2 = _interopRequireDefault(_angularUiRouter);\n\t\n\tvar _index = __webpack_require__(187);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _angularActivityMonitor = __webpack_require__(189);\n\t\n\tvar _angularActivityMonitor2 = _interopRequireDefault(_angularActivityMonitor);\n\t\n\t__webpack_require__(190);\n\t\n\t__webpack_require__(192);\n\t\n\t__webpack_require__(193);\n\t\n\t__webpack_require__(195);\n\t\n\t__webpack_require__(306);\n\t\n\t__webpack_require__(307);\n\t\n\t__webpack_require__(308);\n\t\n\t__webpack_require__(317);\n\t\n\t__webpack_require__(319);\n\t\n\t__webpack_require__(320);\n\t\n\t__webpack_require__(322);\n\t\n\tvar _ngInfiniteScroll = __webpack_require__(323);\n\t\n\tvar _ngInfiniteScroll2 = _interopRequireDefault(_ngInfiniteScroll);\n\t\n\t__webpack_require__(324);\n\t\n\t__webpack_require__(430);\n\t\n\t__webpack_require__(474);\n\t\n\tvar _app = __webpack_require__(647);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tvar _app3 = __webpack_require__(668);\n\t\n\tvar _app4 = _interopRequireDefault(_app3);\n\t\n\tvar _app5 = __webpack_require__(669);\n\t\n\tvar _app6 = _interopRequireDefault(_app5);\n\t\n\tvar _app7 = __webpack_require__(674);\n\t\n\tvar _app8 = _interopRequireDefault(_app7);\n\t\n\tvar _services = __webpack_require__(675);\n\t\n\tvar _services2 = _interopRequireDefault(_services);\n\t\n\tvar _components = __webpack_require__(685);\n\t\n\tvar _components2 = _interopRequireDefault(_components);\n\t\n\t__webpack_require__(746);\n\t\n\tvar _paneltools = __webpack_require__(747);\n\t\n\tvar _paneltools2 = _interopRequireDefault(_paneltools);\n\t\n\tvar _animate = __webpack_require__(749);\n\t\n\tvar _animate2 = _interopRequireDefault(_animate);\n\t\n\tvar _sweetAlert = __webpack_require__(750);\n\t\n\tvar _sweetAlert2 = _interopRequireDefault(_sweetAlert);\n\t\n\tvar _home = __webpack_require__(751);\n\t\n\tvar _home2 = _interopRequireDefault(_home);\n\t\n\tvar _login = __webpack_require__(753);\n\t\n\tvar _login2 = _interopRequireDefault(_login);\n\t\n\tvar _brokers = __webpack_require__(755);\n\t\n\tvar _brokers2 = _interopRequireDefault(_brokers);\n\t\n\tvar _users = __webpack_require__(759);\n\t\n\tvar _users2 = _interopRequireDefault(_users);\n\t\n\tvar _assets = __webpack_require__(768);\n\t\n\tvar _assets2 = _interopRequireDefault(_assets);\n\t\n\tvar _assetStats = __webpack_require__(796);\n\t\n\tvar _assetStats2 = _interopRequireDefault(_assetStats);\n\t\n\tvar _clients = __webpack_require__(809);\n\t\n\tvar _clients2 = _interopRequireDefault(_clients);\n\t\n\tvar _registration = __webpack_require__(817);\n\t\n\tvar _registration2 = _interopRequireDefault(_registration);\n\t\n\t__webpack_require__(820);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// common directives\n\t// application styles\n\tvar app = _angular2.default.module('tower360', [_angularUiRouter2.default, 'dx', 'LocalStorageModule', _index2.default, 'ActivityMonitor', 'ngAnimate', 'ngOnload', 'xeditable', 'ui.bootstrap', 'ngMap', 'angularMoment', 'angular-ladda', 'ui.select', 'ngSanitize', _ngInfiniteScroll2.default,\n\t// common\n\t_services2.default.name, _components2.default.name, 'tower360.utils', // this should be converted to ES6 style\n\t\n\t// business\n\t_home2.default.name, _login2.default.name, _brokers2.default.name, _users2.default.name, _assets2.default.name, _assetStats2.default.name, _clients2.default.name, _registration2.default.name]);\n\t\n\t// business modules\n\t\n\t\n\t// common\n\t\n\t\n\tapp.config(_app2.default);\n\tapp.config(_app4.default);\n\tapp.run(_app6.default);\n\tapp.run(_app8.default);\n\tapp.run(['editableOptions', function (editableOptions) {\n\t    editableOptions.theme = 'bs3';\n\t}]);\n\t\n\tapp.directive('panelTools', _paneltools2.default.activate).directive('animatePanel', _animate2.default.activate).factory('sweetAlert', _sweetAlert2.default);\n\t\n\tapp.filter('shortNumber', function () {\n\t    return function (number) {\n\t        if (number) {\n\t            var abs = Math.abs(number);\n\t            if (abs >= Math.pow(10, 12)) {\n\t                // trillion\n\t                number = (number / Math.pow(10, 12)).toFixed(1) + \"T\";\n\t            } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n\t                // billion\n\t                number = (number / Math.pow(10, 9)).toFixed(1) + \"B\";\n\t            } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n\t                // million\n\t                number = (number / Math.pow(10, 6)).toFixed(1) + \"M\";\n\t            } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n\t                // thousand\n\t                number = (number / Math.pow(10, 3)).toFixed(1) + \"K\";\n\t            }\n\t            return number;\n\t        }\n\t    };\n\t});\n\t\n\tapp.constant('Activities', {\n\t    HomeView: '390E3425-970F-4DDF-9ED1-CC39B1F30E50',\n\t    UsersView: '7A1781A1-E26A-4993-8BC5-09EFAF9D5DE8',\n\t    BrokersView: '58B4A88A-6728-4DA3-9F3D-0546ABDB4560',\n\t    BrokerManage: '934871FF-A6DE-4B2C-B863-A378A4A414C8',\n\t    AssetsView: 'D8D389D1-F92A-40A8-ABE5-CC3639D3CFD6',\n\t    AssetsManage: 'AD46C0DF-7009-4EA3-91F6-01C4133FD38C',\n\t    ClientsManage: 'D00F82C9-A412-4010-833A-F78F0DFD10DD'\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(114);\n\t\n\t__webpack_require__(123);\n\t\n\t__webpack_require__(131);\n\t\n\t__webpack_require__(133);\n\t\n\t__webpack_require__(137);\n\t\n\t__webpack_require__(144);\n\t\n\t__webpack_require__(146);\n\t\n\t__webpack_require__(148);\n\t\n\t__webpack_require__(150);\n\t\n\t__webpack_require__(152);\n\t\n\t__webpack_require__(154);\n\t\n\t__webpack_require__(156);\n\n/***/ },\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */\n114,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */,\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./af\": 198,\n\t\t\"./af.js\": 198,\n\t\t\"./ar\": 199,\n\t\t\"./ar-dz\": 200,\n\t\t\"./ar-dz.js\": 200,\n\t\t\"./ar-ly\": 201,\n\t\t\"./ar-ly.js\": 201,\n\t\t\"./ar-ma\": 202,\n\t\t\"./ar-ma.js\": 202,\n\t\t\"./ar-sa\": 203,\n\t\t\"./ar-sa.js\": 203,\n\t\t\"./ar-tn\": 204,\n\t\t\"./ar-tn.js\": 204,\n\t\t\"./ar.js\": 199,\n\t\t\"./az\": 205,\n\t\t\"./az.js\": 205,\n\t\t\"./be\": 206,\n\t\t\"./be.js\": 206,\n\t\t\"./bg\": 207,\n\t\t\"./bg.js\": 207,\n\t\t\"./bn\": 208,\n\t\t\"./bn.js\": 208,\n\t\t\"./bo\": 209,\n\t\t\"./bo.js\": 209,\n\t\t\"./br\": 210,\n\t\t\"./br.js\": 210,\n\t\t\"./bs\": 211,\n\t\t\"./bs.js\": 211,\n\t\t\"./ca\": 212,\n\t\t\"./ca.js\": 212,\n\t\t\"./cs\": 213,\n\t\t\"./cs.js\": 213,\n\t\t\"./cv\": 214,\n\t\t\"./cv.js\": 214,\n\t\t\"./cy\": 215,\n\t\t\"./cy.js\": 215,\n\t\t\"./da\": 216,\n\t\t\"./da.js\": 216,\n\t\t\"./de\": 217,\n\t\t\"./de-at\": 218,\n\t\t\"./de-at.js\": 218,\n\t\t\"./de.js\": 217,\n\t\t\"./dv\": 219,\n\t\t\"./dv.js\": 219,\n\t\t\"./el\": 220,\n\t\t\"./el.js\": 220,\n\t\t\"./en-au\": 221,\n\t\t\"./en-au.js\": 221,\n\t\t\"./en-ca\": 222,\n\t\t\"./en-ca.js\": 222,\n\t\t\"./en-gb\": 223,\n\t\t\"./en-gb.js\": 223,\n\t\t\"./en-ie\": 224,\n\t\t\"./en-ie.js\": 224,\n\t\t\"./en-nz\": 225,\n\t\t\"./en-nz.js\": 225,\n\t\t\"./eo\": 226,\n\t\t\"./eo.js\": 226,\n\t\t\"./es\": 227,\n\t\t\"./es-do\": 228,\n\t\t\"./es-do.js\": 228,\n\t\t\"./es.js\": 227,\n\t\t\"./et\": 229,\n\t\t\"./et.js\": 229,\n\t\t\"./eu\": 230,\n\t\t\"./eu.js\": 230,\n\t\t\"./fa\": 231,\n\t\t\"./fa.js\": 231,\n\t\t\"./fi\": 232,\n\t\t\"./fi.js\": 232,\n\t\t\"./fo\": 233,\n\t\t\"./fo.js\": 233,\n\t\t\"./fr\": 234,\n\t\t\"./fr-ca\": 235,\n\t\t\"./fr-ca.js\": 235,\n\t\t\"./fr-ch\": 236,\n\t\t\"./fr-ch.js\": 236,\n\t\t\"./fr.js\": 234,\n\t\t\"./fy\": 237,\n\t\t\"./fy.js\": 237,\n\t\t\"./gd\": 238,\n\t\t\"./gd.js\": 238,\n\t\t\"./gl\": 239,\n\t\t\"./gl.js\": 239,\n\t\t\"./he\": 240,\n\t\t\"./he.js\": 240,\n\t\t\"./hi\": 241,\n\t\t\"./hi.js\": 241,\n\t\t\"./hr\": 242,\n\t\t\"./hr.js\": 242,\n\t\t\"./hu\": 243,\n\t\t\"./hu.js\": 243,\n\t\t\"./hy-am\": 244,\n\t\t\"./hy-am.js\": 244,\n\t\t\"./id\": 245,\n\t\t\"./id.js\": 245,\n\t\t\"./is\": 246,\n\t\t\"./is.js\": 246,\n\t\t\"./it\": 247,\n\t\t\"./it.js\": 247,\n\t\t\"./ja\": 248,\n\t\t\"./ja.js\": 248,\n\t\t\"./jv\": 249,\n\t\t\"./jv.js\": 249,\n\t\t\"./ka\": 250,\n\t\t\"./ka.js\": 250,\n\t\t\"./kk\": 251,\n\t\t\"./kk.js\": 251,\n\t\t\"./km\": 252,\n\t\t\"./km.js\": 252,\n\t\t\"./ko\": 253,\n\t\t\"./ko.js\": 253,\n\t\t\"./ky\": 254,\n\t\t\"./ky.js\": 254,\n\t\t\"./lb\": 255,\n\t\t\"./lb.js\": 255,\n\t\t\"./lo\": 256,\n\t\t\"./lo.js\": 256,\n\t\t\"./lt\": 257,\n\t\t\"./lt.js\": 257,\n\t\t\"./lv\": 258,\n\t\t\"./lv.js\": 258,\n\t\t\"./me\": 259,\n\t\t\"./me.js\": 259,\n\t\t\"./mi\": 260,\n\t\t\"./mi.js\": 260,\n\t\t\"./mk\": 261,\n\t\t\"./mk.js\": 261,\n\t\t\"./ml\": 262,\n\t\t\"./ml.js\": 262,\n\t\t\"./mr\": 263,\n\t\t\"./mr.js\": 263,\n\t\t\"./ms\": 264,\n\t\t\"./ms-my\": 265,\n\t\t\"./ms-my.js\": 265,\n\t\t\"./ms.js\": 264,\n\t\t\"./my\": 266,\n\t\t\"./my.js\": 266,\n\t\t\"./nb\": 267,\n\t\t\"./nb.js\": 267,\n\t\t\"./ne\": 268,\n\t\t\"./ne.js\": 268,\n\t\t\"./nl\": 269,\n\t\t\"./nl-be\": 270,\n\t\t\"./nl-be.js\": 270,\n\t\t\"./nl.js\": 269,\n\t\t\"./nn\": 271,\n\t\t\"./nn.js\": 271,\n\t\t\"./pa-in\": 272,\n\t\t\"./pa-in.js\": 272,\n\t\t\"./pl\": 273,\n\t\t\"./pl.js\": 273,\n\t\t\"./pt\": 274,\n\t\t\"./pt-br\": 275,\n\t\t\"./pt-br.js\": 275,\n\t\t\"./pt.js\": 274,\n\t\t\"./ro\": 276,\n\t\t\"./ro.js\": 276,\n\t\t\"./ru\": 277,\n\t\t\"./ru.js\": 277,\n\t\t\"./se\": 278,\n\t\t\"./se.js\": 278,\n\t\t\"./si\": 279,\n\t\t\"./si.js\": 279,\n\t\t\"./sk\": 280,\n\t\t\"./sk.js\": 280,\n\t\t\"./sl\": 281,\n\t\t\"./sl.js\": 281,\n\t\t\"./sq\": 282,\n\t\t\"./sq.js\": 282,\n\t\t\"./sr\": 283,\n\t\t\"./sr-cyrl\": 284,\n\t\t\"./sr-cyrl.js\": 284,\n\t\t\"./sr.js\": 283,\n\t\t\"./ss\": 285,\n\t\t\"./ss.js\": 285,\n\t\t\"./sv\": 286,\n\t\t\"./sv.js\": 286,\n\t\t\"./sw\": 287,\n\t\t\"./sw.js\": 287,\n\t\t\"./ta\": 288,\n\t\t\"./ta.js\": 288,\n\t\t\"./te\": 289,\n\t\t\"./te.js\": 289,\n\t\t\"./tet\": 290,\n\t\t\"./tet.js\": 290,\n\t\t\"./th\": 291,\n\t\t\"./th.js\": 291,\n\t\t\"./tl-ph\": 292,\n\t\t\"./tl-ph.js\": 292,\n\t\t\"./tlh\": 293,\n\t\t\"./tlh.js\": 293,\n\t\t\"./tr\": 294,\n\t\t\"./tr.js\": 294,\n\t\t\"./tzl\": 295,\n\t\t\"./tzl.js\": 295,\n\t\t\"./tzm\": 296,\n\t\t\"./tzm-latn\": 297,\n\t\t\"./tzm-latn.js\": 297,\n\t\t\"./tzm.js\": 296,\n\t\t\"./uk\": 298,\n\t\t\"./uk.js\": 298,\n\t\t\"./uz\": 299,\n\t\t\"./uz.js\": 299,\n\t\t\"./vi\": 300,\n\t\t\"./vi.js\": 300,\n\t\t\"./x-pseudo\": 301,\n\t\t\"./x-pseudo.js\": 301,\n\t\t\"./yo\": 302,\n\t\t\"./yo.js\": 302,\n\t\t\"./zh-cn\": 303,\n\t\t\"./zh-cn.js\": 303,\n\t\t\"./zh-hk\": 304,\n\t\t\"./zh-hk.js\": 304,\n\t\t\"./zh-tw\": 305,\n\t\t\"./zh-tw.js\": 305\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 197;\n\n\n/***/ },\n/* 198 */,\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */,\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */,\n/* 229 */,\n/* 230 */,\n/* 231 */,\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */,\n/* 240 */,\n/* 241 */,\n/* 242 */,\n/* 243 */,\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */,\n/* 347 */,\n/* 348 */,\n/* 349 */,\n/* 350 */,\n/* 351 */,\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */,\n/* 388 */,\n/* 389 */,\n/* 390 */,\n/* 391 */,\n/* 392 */,\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */,\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */,\n/* 419 */,\n/* 420 */,\n/* 421 */,\n/* 422 */,\n/* 423 */,\n/* 424 */,\n/* 425 */,\n/* 426 */,\n/* 427 */,\n/* 428 */,\n/* 429 */,\n/* 430 */,\n/* 431 */,\n/* 432 */,\n/* 433 */,\n/* 434 */,\n/* 435 */,\n/* 436 */,\n/* 437 */,\n/* 438 */,\n/* 439 */,\n/* 440 */,\n/* 441 */,\n/* 442 */,\n/* 443 */,\n/* 444 */,\n/* 445 */,\n/* 446 */,\n/* 447 */,\n/* 448 */,\n/* 449 */,\n/* 450 */,\n/* 451 */,\n/* 452 */,\n/* 453 */,\n/* 454 */,\n/* 455 */,\n/* 456 */,\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */,\n/* 461 */,\n/* 462 */,\n/* 463 */,\n/* 464 */,\n/* 465 */,\n/* 466 */,\n/* 467 */,\n/* 468 */,\n/* 469 */,\n/* 470 */,\n/* 471 */,\n/* 472 */,\n/* 473 */,\n/* 474 */,\n/* 475 */,\n/* 476 */,\n/* 477 */,\n/* 478 */,\n/* 479 */,\n/* 480 */,\n/* 481 */,\n/* 482 */,\n/* 483 */,\n/* 484 */,\n/* 485 */,\n/* 486 */,\n/* 487 */,\n/* 488 */,\n/* 489 */,\n/* 490 */,\n/* 491 */,\n/* 492 */,\n/* 493 */,\n/* 494 */,\n/* 495 */,\n/* 496 */,\n/* 497 */,\n/* 498 */,\n/* 499 */,\n/* 500 */,\n/* 501 */,\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */,\n/* 506 */,\n/* 507 */,\n/* 508 */,\n/* 509 */,\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */,\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */,\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */,\n/* 529 */,\n/* 530 */,\n/* 531 */,\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */,\n/* 538 */,\n/* 539 */,\n/* 540 */,\n/* 541 */,\n/* 542 */,\n/* 543 */,\n/* 544 */,\n/* 545 */,\n/* 546 */,\n/* 547 */,\n/* 548 */,\n/* 549 */,\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */,\n/* 555 */,\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */,\n/* 562 */,\n/* 563 */,\n/* 564 */,\n/* 565 */,\n/* 566 */,\n/* 567 */,\n/* 568 */,\n/* 569 */,\n/* 570 */,\n/* 571 */,\n/* 572 */,\n/* 573 */,\n/* 574 */,\n/* 575 */,\n/* 576 */,\n/* 577 */,\n/* 578 */,\n/* 579 */,\n/* 580 */,\n/* 581 */,\n/* 582 */,\n/* 583 */,\n/* 584 */,\n/* 585 */,\n/* 586 */,\n/* 587 */,\n/* 588 */,\n/* 589 */,\n/* 590 */,\n/* 591 */,\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */,\n/* 603 */,\n/* 604 */,\n/* 605 */,\n/* 606 */,\n/* 607 */,\n/* 608 */,\n/* 609 */,\n/* 610 */,\n/* 611 */,\n/* 612 */,\n/* 613 */,\n/* 614 */,\n/* 615 */,\n/* 616 */,\n/* 617 */,\n/* 618 */,\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */,\n/* 624 */,\n/* 625 */,\n/* 626 */,\n/* 627 */,\n/* 628 */,\n/* 629 */,\n/* 630 */,\n/* 631 */,\n/* 632 */,\n/* 633 */,\n/* 634 */,\n/* 635 */,\n/* 636 */,\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */,\n/* 642 */,\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = routing;\n\trouting.$inject = ['$urlRouterProvider', '$locationProvider', '$stateProvider', 'Activities'];\n\t/*@ngInject*/\n\tfunction routing($urlRouterProvider, $locationProvider, $stateProvider, Activities) {\n\t    $locationProvider.html5Mode({\n\t        enabled: true,\n\t        requireBase: false\n\t    }).hashPrefix('!');\n\t\n\t    $urlRouterProvider.otherwise('/');\n\t\n\t    $stateProvider\n\t    // private part states\n\t    .state('private', {\n\t        template: __webpack_require__(648),\n\t        abstract: true\n\t    }).state('home', {\n\t        url: '/',\n\t        parent: 'private',\n\t        template: __webpack_require__(649),\n\t        controller: 'HomeController',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.HomeView, 'forbidden', 'login');\n\t            }]\n\t        }\n\t    }).state('brokers', {\n\t        url: '/brokers',\n\t        parent: 'private',\n\t        template: __webpack_require__(650),\n\t        controller: 'BrokersController',\n\t        controllerAs: 'ctrl',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.BrokersView, 'forbidden', 'login');\n\t            }]\n\t        }\n\t    }).state('broker', {\n\t        url: '/brokers/{id:int}',\n\t        parent: 'private',\n\t        template: __webpack_require__(651),\n\t        controller: 'BrokerController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            brokerObject: ['$stateParams', 'Broker', function ($stateParams, Broker) {\n\t                return Broker.get({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.BrokerManage, 'forbidden', 'login');\n\t            }]\n\t        }\n\t    }).state('asset-stats', {\n\t        url: '/asset-stats',\n\t        parent: 'private',\n\t        template: __webpack_require__(652),\n\t        controller: 'AssetStatsController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\n\t            }]\n\t        }\n\t    }).state('asset-stats-2', {\n\t        url: '/asset-stats2',\n\t        parent: 'private',\n\t        template: __webpack_require__(653),\n\t        controller: 'AssetStatsController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\n\t            }]\n\t        }\n\t    }).state('asset-stats-spaces', {\n\t        url: '/asset-stats/{id:int}/spaces',\n\t        parent: 'private',\n\t        template: __webpack_require__(654),\n\t        controller: 'AssetStatSpacesController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            asset: ['$stateParams', 'Asset', function ($stateParams, Asset) {\n\t                return Asset.get({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\n\t            }],\n\t            assetId: ['$stateParams', function ($stateParams) {\n\t                return $stateParams.id;\n\t            }]\n\t        }\n\t    }).state('asset-stats-tenants', {\n\t        url: '/asset-stats/{id:int}/tenants',\n\t        parent: 'private',\n\t        template: __webpack_require__(655),\n\t        controller: 'AssetStatTenantsController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            asset: ['$stateParams', 'Asset', function ($stateParams, Asset) {\n\t                return Asset.get({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\n\t            }],\n\t            assetId: ['$stateParams', function ($stateParams) {\n\t                return $stateParams.id;\n\t            }]\n\t        }\n\t    }).state('asset-stats-stacking-plan', {\n\t        url: '/asset-stats/{id:int}/stacking-plan',\n\t        parent: 'private',\n\t        template: __webpack_require__(656),\n\t        controller: 'AssetStatStackingPlanController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            asset: ['$stateParams', 'Asset', function ($stateParams, Asset) {\n\t                return Asset.get({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\n\t            }],\n\t            assetId: ['$stateParams', function ($stateParams) {\n\t                return $stateParams.id;\n\t            }]\n\t        }\n\t    }).state('users', {\n\t        url: '/users',\n\t        parent: 'private',\n\t        template: __webpack_require__(657),\n\t        controller: 'UsersController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.UsersView, 'forbidden', 'login');\n\t            }],\n\t            currentUser: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.getUserInfo();\n\t            }]\n\t        }\n\t    }).state('user', {\n\t        url: '/users/{id:int}',\n\t        parent: 'private',\n\t        template: __webpack_require__(658),\n\t        controller: 'UserController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            userObject: ['$stateParams', 'User', function ($stateParams, User) {\n\t                return User.get({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.UsersView, 'forbidden', 'login');\n\t            }],\n\t            currentUser: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.getUserInfo();\n\t            }]\n\t        }\n\t    }).state('assets', {\n\t        url: '/assets',\n\t        parent: 'private',\n\t        template: __webpack_require__(659),\n\t        controller: 'AssetsController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsManage, 'forbidden', 'login');\n\t            }],\n\t            currentUser: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.getUserInfo();\n\t            }]\n\t        }\n\t    }).state('asset', {\n\t        url: '/assets/{id:int}',\n\t        parent: 'private',\n\t        template: __webpack_require__(660),\n\t        controller: 'AssetController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            assetObject: ['$stateParams', 'Asset', function ($stateParams, Asset) {\n\t                return Asset.getFull({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.AssetsManage, 'forbidden', 'login');\n\t            }],\n\t            currentUser: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.getUserInfo();\n\t            }]\n\t        }\n\t    }).state('clients', {\n\t        url: '/clients',\n\t        parent: 'private',\n\t        template: __webpack_require__(661),\n\t        controller: 'ClientsController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.ClientsManage, 'forbidden', 'login');\n\t            }],\n\t            currentUser: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.getUserInfo();\n\t            }]\n\t        }\n\t    }).state('client', {\n\t        url: '/clients/{id:int}',\n\t        parent: 'private',\n\t        template: __webpack_require__(662),\n\t        controller: 'ClientController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            clientObject: ['$stateParams', 'Client', function ($stateParams, Client) {\n\t                return Client.getFull({ id: $stateParams.id }).$promise;\n\t            }],\n\t            canDo: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.canDo(Activities.ClientsManage, 'forbidden', 'login');\n\t            }],\n\t            currentUser: ['SecurityService', function (SecurityService) {\n\t                return SecurityService.getUserInfo();\n\t            }]\n\t        }\n\t    })\n\t    // public part states\n\t    .state('public', {\n\t        template: __webpack_require__(663),\n\t        abstract: true\n\t    }).state('login', {\n\t        url: '/login',\n\t        parent: 'public',\n\t        params: {\n\t            automatic: false\n\t        },\n\t        template: __webpack_require__(664),\n\t        controller: 'LoginController',\n\t        controllerAs: '$ctrl'\n\t    }).state('registration', {\n\t        url: '/registration/{token}',\n\t        template: __webpack_require__(665),\n\t        controller: 'RegistrationController',\n\t        controllerAs: '$ctrl',\n\t        resolve: {\n\t            registrationObject: ['$stateParams', 'Registration', function ($stateParams, Registration) {\n\t                return Registration.get({ token: $stateParams.token }).$promise;\n\t            }]\n\t        }\n\t    })\n\t    // error pages\n\t    .state('forbidden', {\n\t        url: '/forbidden',\n\t        template: __webpack_require__(666)\n\t    }).state('notfound', {\n\t        url: '/notfound',\n\t        template: __webpack_require__(667)\n\t    });\n\t}\n\n/***/ },\n/* 648 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<body class=\\\"page-index\\\">\\r\\n    <!-- page -->\\r\\n    <div class=\\\"page page-sidebar\\\">\\r\\n\\r\\n      <!-- navbar -->\\r\\n      <mainheader></mainheader>\\r\\n      <!-- /navbar -->\\r\\n\\r\\n      <!--sidebar-->\\r\\n      <aside id=\\\"left-sidebar\\\" class=\\\"region region-sidebar\\\">\\r\\n          <sidebar></sidebar>\\r\\n      </aside>\\r\\n      <!--/sidebar-->\\r\\n\\r\\n      <div id=\\\"wrapper\\\" class=\\\"page-wrapper\\\">\\r\\n        <!-- container -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n\\r\\n          <right-sidebar></right-sidebar>\\r\\n\\r\\n          <!-- content -->\\r\\n          <div id=\\\"content\\\" class=\\\"region region-content\\\">\\r\\n            <div ui-view class=\\\"main-content\\\"></div>\\r\\n          </div>\\r\\n          <!-- content -->\\r\\n\\r\\n        </div>\\r\\n        <!-- /container -->\\r\\n\\r\\n        <!-- footer -->\\r\\n        <footer id=\\\"footer\\\"></footer>\\r\\n        <!-- /footer -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <toaster-container toaster-options=\\\"{'position-class': 'toast-bottom-center'}\\\"></toaster-container>\\r\\n    <!-- /page -->\\r\\n    <!--<body-blocker></body-blocker>-->\\r\\n</body>\"\n\n/***/ },\n/* 649 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"hpanel\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <h2>Dashboard</h2>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 650 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'brokers', 'title': Messages('brokers.title') }]\\\" title=\\\"{{Messages('brokers.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'broker'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div dx-data-grid=\\\"ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 651 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'brokers', 'title': Messages('brokers.title') }, { 'title': $ctrl.brokerObject.name }]\\\" title=\\\"{{$ctrl.brokerObject.name}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"hpanel horange\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editBroker()\\\" title=\\\"{{Messages('brokers.edit')}}\\\"></i>\\r\\n                        <i class=\\\"fa btn btn-default btn-xs\\\" ng-class=\\\"isArchived ? 'fa-undo' : 'fa-trash-o'\\\" title=\\\"{{isArchived ? Messages('brokers.activate') : Messages('brokers.archive')}}\\\" ng-click=\\\"$ctrl.archiveTrigger()\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"broker-avatar\\\">\\r\\n                    <img alt=\\\"\\\" class=\\\"img-circle m-b m-t-md\\\" src=\\\"img/user.svg\\\" />\\r\\n                </div>\\r\\n                <h3 class=\\\"broker-name\\\">\\r\\n                    {{$ctrl.brokerObject.name}}\\r\\n                    <span ng-if=\\\"isArchived\\\" class=\\\"small archived-marker\\\">{{Messages('brokers.archived')}}</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"panel-footer\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"broker-stat\\\">\\r\\n                            <span>{{Messages('brokers.projects')}}: </span>\\r\\n                            <strong>200</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"broker-stat\\\">\\r\\n                            <span>{{Messages('brokers.messages')}}: </span>\\r\\n                            <strong>300</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"broker-stat\\\">\\r\\n                            <span>{{Messages('brokers.views')}}: </span>\\r\\n                            <strong>400</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <ng-map class=\\\"client-map\\\" center=\\\"52.520468, 13.407234\\\" zoom=\\\"11\\\" disable-default-u-i=\\\"true\\\" zoom-control=\\\"true\\\" scrollwheel=\\\"false\\\"></ng-map>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"fish-container\\\">\\r\\n                    <i class=\\\"edge\\\"></i>\\r\\n                    <span class=\\\"cont\\\">{{Messages('brokers.additional.container')}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 652 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') }]\\\" title=\\\"{{Messages('assets.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div class=\\\"block block-content content-items\\\">\\r\\n    <div class=\\\"row\\\" ng-repeat=\\\"row in $ctrl.assets\\\">\\r\\n        <div class=\\\"col-lg-3\\\" ng-repeat=\\\"item in row\\\" animate-panel child=\\\"asset-panel\\\">\\r\\n            <div class=\\\"asset-panel-2\\\">\\r\\n                <div ng-class=\\\"'hpanel ' + item.color\\\">\\r\\n                    <div class=\\\"panel-body\\\" ng-show=\\\"$ctrl.isShow($index)\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xs-5 column-image\\\">\\r\\n                                <div class=\\\"image\\\">\\r\\n                                    <img ng-src=\\\"{{(item.mainImageUrl? item.mainImageUrl: '../../img/building-placeholder.png')}}\\\" alt=\\\"{{item.name}}\\\" ng-onload=\\\"$ctrl.imageLoad()\\\"\\r\\n                                    />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-7 column-areas\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-12\\\">\\r\\n                                        <h3 class=\\\"text-success\\\">{{item.totalRentableArea | shortNumber}} m<sup>2</sup></h3>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <small class=\\\"stats-label\\\">Occupied</small>\\r\\n                                        <h5>{{item.occupancy | shortNumber}} m<sup>2</sup></h5>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <small class=\\\"stats-label\\\">Vacancy</small>\\r\\n                                        <h5>{{item.vacancy | shortNumber}} m<sup>2</sup></h5>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"progress full progress-small\\\">\\r\\n                                        <div ng-style=\\\"{'width': item.occupancy/item.totalRentableArea*100 + '%'}\\\" aria-valuemax=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuenow=\\\"{{item.occupancy/item.totalRentableArea*100}}\\\" role=\\\"progressbar\\\" class=\\\" progress-bar progress-bar-success\\\">\\r\\n                                            <span class=\\\"sr-only\\\">{{item.occupancy/item.totalRentableArea*100}}% Complete</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <h3>\\r\\n                            <a ui-sref=\\\"asset-stats-stacking-plan({id: item.id})\\\">\\r\\n                                {{item.name}}\\r\\n                            </a>\\r\\n                        </h3>\\r\\n                        <div class=\\\"small text-muted font-bold m-b-xs\\\">\\r\\n                            {{item.street}} {{item.streetAddress}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-footer contact-footer\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6 border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('clients.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">{{item.tenantsNumber}}</strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.spaces.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">{{item.spacesNumber}}</strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row page-loader-container\\\" ng-hide=\\\"$ctrl.loadedImages[$ctrl.page]\\\">\\r\\n        <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row text-right\\\">\\r\\n        <span ng-if=\\\"$ctrl.isMore\\\" class=\\\"animate-if\\\">\\r\\n            <button class=\\\"btn\\\" ng-click=\\\"$ctrl.loadMore()\\\">Load More...</button>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" ng-if=\\\"!$ctrl.assets || $ctrl.assetsLength === 0\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-1\\\">\\r\\n            No data.\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 653 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') }]\\\" title=\\\"{{Messages('assets.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div class=\\\"block block-content content-items\\\">\\r\\n    <div class=\\\"row\\\" ng-repeat=\\\"row in $ctrl.assets\\\">\\r\\n        <div class=\\\"col-lg-3\\\" ng-repeat=\\\"item in row\\\" animate-panel child=\\\"asset-panel\\\">\\r\\n            <div class=\\\"asset-panel-2\\\">\\r\\n                <div class=\\\"hpanel\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <div\\r\\n                            class=\\\"assets-stats-image\\\"\\r\\n                            style=\\\"background-image: url({{item.mainImageUrl ? item.mainImageUrl: '../../img/building-placeholder.png'}})\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <h3>\\r\\n                            <a ui-sref=\\\"asset-stats-stacking-plan({id: item.id})\\\">\\r\\n                                {{item.name}}\\r\\n                            </a>\\r\\n                        </h3>\\r\\n                        <div class=\\\"small text-muted font-bold m-b-xs\\\">\\r\\n                            {{item.street}} {{item.streetAddress}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-footer assets-stats-footer\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"cell border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.total.rentable')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">\\r\\n                                        {{item.totalRentableArea.toFixed(2)}}\\r\\n                                        <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cell border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.spaces.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">\\r\\n                                        {{item.vacancy.toFixed(2)}}\\r\\n                                        <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cell\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.spaces.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">\\r\\n                                        {{item.occupancy.toFixed(2)}}\\r\\n                                        <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row page-loader-container\\\" ng-if=\\\"$ctrl.isMore\\\">\\r\\n        <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row text-right\\\">\\r\\n        <span ng-if=\\\"$ctrl.isMore\\\" class=\\\"animate-if\\\">\\r\\n            <button class=\\\"btn\\\" ng-click=\\\"$ctrl.loadMore()\\\">Load More...</button>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" ng-if=\\\"!$ctrl.assets || $ctrl.assetsLength === 0\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-1\\\">\\r\\n            No data.\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 654 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') } , {'title': $ctrl.asset.name} , {'title': Messages('assets.spaces.title')}]\\\" title=\\\"{{Messages('assets.spaces.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel spaces-filter\\\">\\r\\n        <div class=\\\"panel-heading hbuilt\\\">\\r\\n            <div panel-tools></div>\\r\\n            {{Messages('assets.spaces.filter.status.title')}}\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-12\\\">\\r\\n                    <ul class=\\\"nav nav-pills spaces-status\\\">\\r\\n                        <li class=\\\"spaces-filter-status-item\\\" ng-repeat=\\\"status in statuses\\\" role=\\\"presentation\\\" ng-class=\\\"selectedStatus.id === status.id ? 'active' : ''\\\">\\r\\n                            <input ng-if=\\\"status.id === 'custom'\\\" type=\\\"text\\\" id=\\\"spaces-filter-daterangepicker\\\" />\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.selectStatus($event, status)\\\">\\r\\n                                <span ng-if=\\\"status.id !== 'custom' || !customAvailableFrom && !customAvailableTo\\\">\\r\\n                                    {{ status.name }}\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id != 'custom' && status.label !== undefined\\\" class=\\\"badge\\\">\\r\\n                                    {{ status.label }}\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id === 'custom' && customAvailableFrom && customAvailableTo\\\">\\r\\n                                    <span ng-if=\\\"customAvailableFrom !== customAvailableTo\\\">{{customAvailableFrom}} - {{customAvailableTo}}</span>\\r\\n                                    <span ng-if=\\\"customAvailableFrom === customAvailableTo\\\">{{customAvailableFrom}}</span>\\r\\n                                </span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"spaces-status-no-focus\\\">\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.showExtraFilters()\\\" class=\\\"no-outline\\\">\\r\\n                                <i class=\\\"fa fa-filter\\\"></i>\\r\\n                                {{Messages('assets.spaces.filter.extra')}}\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <!--<li class=\\\"spaces-status-no-focus\\\">-->\\r\\n                            <!--<a href=\\\"#\\\" class=\\\"no-outline\\\">-->\\r\\n                                <!--<i class=\\\"fa fa-star-o\\\"></i>-->\\r\\n                                <!--{{Messages('assets.spaces.filter.favorites')}}-->\\r\\n                                <!--<i class=\\\"caret\\\"></i>-->\\r\\n                            <!--</a>-->\\r\\n                        <!--</li>-->\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div ng-if=\\\"extraFilters.length\\\" class=\\\"m-t-l\\\">\\r\\n                <div ng-repeat=\\\"item in extraFilters\\\" class=\\\"space-filter-item\\\">\\r\\n                    <span ng-if=\\\"item.name\\\">{{item.name}}: </span>\\r\\n                    <strong ng-bind-html=\\\"item.text\\\" />\\r\\n                    <i class=\\\"fa fa-times\\\" ng-click=\\\"$ctrl.extraFilterRemoveItem(item)\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\" infinite-scroll=\\\"$ctrl.loadMoreItems()\\\" infinite-scroll-disabled=\\\"load_more || disable_infinite_scrolling\\\">\\r\\n            <div ng-if=\\\"!greedData.length && !update\\\" class=\\\"text-center\\\">\\r\\n                {{Messages('assets.spaces.filter.empty')}}\\r\\n            </div>\\r\\n            <table ng-if=\\\"greedData.length\\\" cellpadding=\\\"1\\\" cellspacing=\\\"1\\\" class=\\\"table table-striped table-bordered table-hover dataTable no-footer spaces-filter-grid\\\" id=\\\"filtered-spaces-grid\\\">\\r\\n                <colgroup>\\r\\n                    <col width=\\\"5%\\\">\\r\\n                    <col width=\\\"10%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"13%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                </colgroup>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('unit')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.unit')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'unit'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('tower')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.tower')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'tower'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('floor')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.floor')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'floor'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('area')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.rentable_area')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'area'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('type')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.type')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'type'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('price')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.asking_price')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'price'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.in_place_rent')}}\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('status')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.status')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'status'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'status' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'status' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('availability')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.availability')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'availability'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'availability' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'availability' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr ng-repeat=\\\"item in greedData\\\" ng-click=\\\"$ctrl.showSpaceInfo($event, item)\\\">\\r\\n                    <td class=\\\"text-right\\\">{{item.number}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{item.towerName}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{item.floorName}}</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.rentableArea.toFixed(2)}} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">{{$ctrl.getOfficeType(item.type)}}</td>\\r\\n                    <td ng-if=\\\"item.minAskingPrice !== null && item.maxAskingPrice !== null\\\" class=\\\"text-right\\\">\\r\\n                        {{item.minAskingPrice.toFixed(2)}} - {{item.maxAskingPrice.toFixed(2)}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td ng-if=\\\"!item.minAskingPrice && !item.maxAskingPrice\\\" class=\\\"text-right\\\">--</td>\\r\\n                    <td ng-if=\\\"item.contract\\\" class=\\\"text-right\\\">\\r\\n                        {{item.contract && item.contract.inPlaceRent.toFixed(2)}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td ng-if=\\\"!item.contract\\\" class=\\\"text-right\\\">--</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.contract ? Messages('assets.spaces.filter.occupied') : Messages('assets.spaces.filter.vacant')}}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.contract &&  item.contract.endsAt ? $ctrl.getParsedDate(item.contract.endsAt) : Messages('assets.spaces.filter.immediately')}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div ng-if=\\\"(!greedData.length && update) || load_more\\\" class=\\\"text-center\\\">\\r\\n                <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n            </div>\\r\\n            <div ng-if=\\\"update\\\" class=\\\"blocker spaces-filter-grid-blocker\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 655 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') } , {'title': $ctrl.asset.name} , {'title': Messages('assets.tenants.title')}]\\\" title=\\\"{{Messages('assets.tenants.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel spaces-filter\\\">\\r\\n        <div class=\\\"panel-heading hbuilt\\\">\\r\\n            <div panel-tools></div>\\r\\n            {{Messages('assets.tenants.filter.quick.title')}}\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-12\\\">\\r\\n                    <ul class=\\\"nav nav-pills spaces-status\\\">\\r\\n                        <li class=\\\"spaces-filter-status-item\\\" ng-repeat=\\\"status in statuses\\\" role=\\\"presentation\\\" ng-class=\\\"selectedStatus.id === status.id ? 'active' : ''\\\">\\r\\n                            <input ng-if=\\\"status.id === 'custom'\\\" type=\\\"text\\\" id=\\\"spaces-filter-daterangepicker\\\" />\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.selectStatus($event, status)\\\">\\r\\n                                <span ng-if=\\\"status.id !== 'custom' || !customExpirationFrom && !customExpirationTo\\\">\\r\\n                                    {{ status.name }}\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id !== 'custom' && status.id !== 'expired' && status.label !== undefined\\\" class=\\\"badge\\\">\\r\\n                                    {{ status.label }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id === 'custom' && customExpirationFrom && customExpirationTo\\\">\\r\\n                                    <span ng-if=\\\"customExpirationFrom !== customExpirationTo\\\">{{customExpirationFrom}} - {{customExpirationTo}}</span>\\r\\n                                    <span ng-if=\\\"customExpirationFrom === customExpirationTo\\\">{{customExpirationFrom}}</span>\\r\\n                                </span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"spaces-status-no-focus\\\">\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.showExtraFilters()\\\" class=\\\"no-outline\\\">\\r\\n                                <i class=\\\"fa fa-filter\\\"></i>\\r\\n                                {{Messages('assets.spaces.filter.extra')}}\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div ng-if=\\\"extraFilters.length\\\" class=\\\"m-t-l\\\">\\r\\n                <div ng-repeat=\\\"item in extraFilters\\\" class=\\\"space-filter-item\\\">\\r\\n                    <span ng-if=\\\"item.name\\\">{{item.name}}: </span>\\r\\n                    <strong ng-bind-html=\\\"item.text\\\" />\\r\\n                    <i class=\\\"fa fa-times\\\" ng-click=\\\"$ctrl.extraFilterRemoveItem(item)\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\" infinite-scroll=\\\"$ctrl.loadMoreItems()\\\" infinite-scroll-disabled=\\\"load_more || disable_infinite_scrolling\\\">\\r\\n            <div ng-if=\\\"!greedData.length && !update\\\" class=\\\"text-center\\\">\\r\\n                {{Messages('assets.spaces.filter.empty')}}\\r\\n            </div>\\r\\n            <table ng-if=\\\"greedData.length\\\" cellpadding=\\\"1\\\" cellspacing=\\\"1\\\" class=\\\"table table-striped table-bordered table-hover dataTable no-footer spaces-filter-grid\\\" id=\\\"filtered-spaces-grid\\\">\\r\\n                <colgroup>\\r\\n                    <col width=\\\"16%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"10%\\\">\\r\\n                    <col width=\\\"10%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"14%\\\">\\r\\n                    <col width=\\\"14%\\\">\\r\\n                </colgroup>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('name')\\\">\\r\\n                            {{Messages('assets.tenants.filter.tenant_name')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'unit'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('startDate')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.lease_start_date')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'tower'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('endDate')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.lease_end_date')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'floor'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('totalArea')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.size')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'area'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('totalCost')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.total_rent')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'type'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('avgMeterCost')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.rent')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'price'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.unit')}}\\r\\n                        </th>\\r\\n                        <th class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.towers')}}&nbsp;&nbsp;\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr ng-repeat=\\\"item in greedData\\\" ng-click=\\\"$ctrl.showTenantInfo($event, item)\\\">\\r\\n                    <td>{{item.tenantName}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{$ctrl.getParsedDate(item.startDate)}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{$ctrl.getParsedDate(item.endDate)}}</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.totalArea.toFixed(2)}} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">{{item.totalRentCost.toFixed(2)}} €</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.averageMeterCost.toFixed(2)}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                        <span ng-if=\\\"item.spaces.length > 1\\\" class=\\\"tenants-avg-indicator\\\">\\r\\n                            AVG\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <a href=\\\"#\\\" ng-repeat=\\\"(key, space) in item.spaces\\\" ng-if=\\\"key < 3\\\" ng-click=\\\"$ctrl.showSpaceInfo(space)\\\">\\r\\n                            [{{space.number}}]\\r\\n                        </a>\\r\\n                        <span ng-if=\\\"item.spaces.length > 3\\\" class=\\\"tenants-additional-units-indicator\\\">\\r\\n                            +{{item.spaces.length - 3}}\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <span ng-repeat=\\\"(key, towerName) in $ctrl.getUniqueSpacesTowers(item.spaces)\\\" ng-if=\\\"key < 3\\\">\\r\\n                            [{{towerName}}]\\r\\n                        </span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div ng-if=\\\"(!greedData.length && update) || load_more\\\" class=\\\"text-center\\\">\\r\\n                <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n            </div>\\r\\n            <div ng-if=\\\"update\\\" class=\\\"blocker spaces-filter-grid-blocker\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 656 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') } , {'title': $ctrl.asset.name} , {'title': Messages('stacking-plan.title')}]\\\" title=\\\"{{Messages('stacking-plan.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\" id=\\\"plan-page-wrap\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <ul class=\\\"plan-tabs\\\" data-type=\\\"actual\\\" ng-if=\\\"!isTabsLoadingState && !noStackingPlan\\\">\\r\\n            <li class=\\\"view-tab pull-right\\\" data-type=\\\"actual\\\">\\r\\n                <i class=\\\"fa fa-signal\\\"></i> {{ Messages('stacking-plan.view.actual') }}\\r\\n                <a href=\\\"#\\\" data-type=\\\"actual\\\" ng-click=\\\"$ctrl.viewChanged($event)\\\" class=\\\"blocker\\\"></a>\\r\\n            </li>\\r\\n            <li class=\\\"view-tab pull-right active\\\" data-type=\\\"normalized\\\">\\r\\n                <i class=\\\"fa fa-list\\\"></i> {{ Messages('stacking-plan.view.normalized') }}\\r\\n                <a href=\\\"#\\\" data-type=\\\"normalized\\\" ng-click=\\\"$ctrl.viewChanged($event)\\\" class=\\\"blocker\\\"></a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav nav-tabs\\\" id=\\\"tabs\\\" role=\\\"tablist\\\" ng-if=\\\"!isTabsLoadingState && !noStackingPlan\\\">\\r\\n            <li ng-repeat=\\\"tab in tabs\\\" ng-class=\\\"tabs.indexOf(tab) === 0 ? 'active' : ''\\\">\\r\\n                <a href=\\\"#content\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" ng-click=\\\"$ctrl.tabSelected($event, tab)\\\">\\r\\n                    {{ tab.name }}\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <div class=\\\"tab-pane active\\\" id=\\\"content\\\" role=\\\"tabpanel\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <!--\\r\\n                    <div class=\\\"col-md-3 plan-scroll-panel\\\">\\r\\n                        <div id=\\\"plan-scroll-wrap-overflow\\\">\\r\\n                            <div id=\\\"plan-scroll-wrap\\\">\\r\\n                                <div id=\\\"plan-scroll-cont\\\" ng-if=\\\"!isLoadingState && !noStackingPlan\\\">\\r\\n                                    <div class=\\\"plan-scroll-cont-item\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                        <div class=\\\"plan-scroll-item-table-wrap\\\" ng-style=\\\"{width: floor.width}\\\">\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td\\r\\n                                                        ng-repeat=\\\"space in floor.spaces\\\"\\r\\n                                                        class=\\\"plan-scroll-space\\\" ng-class=\\\"!space.tenantId ? ' plan-scroll-space-free' : ''\\\"\\r\\n                                                        ng-style=\\\"{width: space.weight + '%'}\\\"\\r\\n                                                    ></td>\\r\\n                                                    <td ng-if=\\\"floor.spaces.length === 0\\\" class=\\\"plan-scroll-space plan-scroll-space-empty\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div id=\\\"plan-scroll-blocker\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>-->\\r\\n                    <div class=\\\"col-md-1 stacking-plan-legend\\\">\\r\\n                        <div>\\r\\n                            <span class=\\\"vacant-legend\\\"></span>\\r\\n                            <span class=\\\"vacant-title\\\">{{ Messages('stacking-plan.legend.vacant') }}</span>\\r\\n                        </div>\\r\\n                        <div class=\\\"lease-expiration-title\\\">\\r\\n                            {{ Messages('stacking-plan.legend.lease.expiration') }}\\r\\n                        </div>\\r\\n                        <div ng-repeat=\\\"year in $ctrl.legendYears\\\" class=\\\"expiration-year-item\\\">\\r\\n                            <span class=\\\"expiration-year-legend\\\" ng-class=\\\"'year-'+year.index\\\"></span>\\r\\n                            <span class=\\\"expiration-year-title\\\">{{year.title}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <div id=\\\"plan-wrap-overflow\\\">\\r\\n                            <div id=\\\"plan-wrap\\\">\\r\\n                                <div ng-if=\\\"isLoadingState || isTabsLoadingState\\\" class=\\\"plan-loader\\\">\\r\\n                                    <div class=\\\"edge\\\"></div>\\r\\n                                    <div class=\\\"cont\\\">\\r\\n                                        <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"plan-cont\\\" ng-if=\\\"!isLoadingState && !noStackingPlan\\\">\\r\\n                                    <div class=\\\"plan-item\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                        <div class=\\\"floor-name-wrapper\\\">\\r\\n                                            <div class=\\\"floor-name\\\">{{ floor.floorName }}</div>\\r\\n                                            <div class=\\\"floor-space-total\\\">{{ floor.totalFloorArea | number:2 }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/></div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"plan-item-table-wrap\\\" ng-style=\\\"{width: floor.width}\\\">\\r\\n                                            <table class=\\\"plan-item-table\\\" >\\r\\n                                                <tr>\\r\\n                                                    <td\\r\\n                                                        ng-repeat=\\\"space in floor.spaces\\\"\\r\\n                                                        class=\\\"plan-item-space\\\" ng-class=\\\"!space.tenantId ? (description.spaceNumber != space.spaceNumber ? 'plan-item-space-free space-content-free': 'space-content-free space-selected')\\r\\n                                                        : (description == null ? 'space-content-'+space.leaseEndYearIndex \\r\\n                                                        : description.spaceNumber != space.spaceNumber? 'plan-item-space-free': 'space-selected')\\\"\\r\\n                                                        ng-style=\\\"{width: space.weight + '%'}\\\"\\r\\n                                                        ng-click=\\\"$ctrl.showSpaceDescription(space)\\\"\\r\\n                                                    >\\r\\n                                                        <div class=\\\"plan-item-space-cont\\\">\\r\\n                                                            <div class=\\\"space-cont-header\\\" ng-if=\\\"space.tenantId\\\">\\r\\n                                                                <div class=\\\"name\\\">\\r\\n                                                                    {{ space.tenantName }}\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"price\\\">\\r\\n                                                                    {{space.inPlaceRent}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"space-lease-expiration\\\" ng-if=\\\"space.tenantId\\\">\\r\\n                                                                {{ Messages('stacking-plan.expires') }}: {{space.leaseEndDate | date:'MM/dd/yyyy'}}\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"space-area\\\" ng-if=\\\"!space.tenantId\\\">\\r\\n                                                                {{ space.spaceArea | number:2 }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"space-lease-expiration-free\\\" ng-if=\\\"!space.tenantId\\\">&nbsp;</div>\\r\\n\\r\\n                                                            <div class=\\\"space-cont-footer\\\">\\r\\n                                                                <div class=\\\"unit\\\">\\r\\n                                                                    <span class=\\\"space-unit-title\\\">\\r\\n                                                                        {{Messages('stacking-plan.unit')}}\\r\\n                                                                    </span>\\r\\n                                                                    <br>\\r\\n                                                                    <span class=\\\"space-unit-legend\\\">\\r\\n                                                                        {{space.spaceNumber}}\\r\\n                                                                    </span>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"space-area\\\" ng-if=\\\"space.tenantId\\\">\\r\\n                                                                    {{ space.spaceArea | number:2 }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td ng-if=\\\"floor.spaces.length === 0\\\" class=\\\"plan-item-space plan-item-space-empty\\\">\\r\\n                                                        <div class=\\\"plan-item-space-cont\\\">{{Messages('nospaces')}}</div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div ng-if=\\\"noStackingPlan\\\" class=\\\"plan-empty\\\">\\r\\n                                    <div class=\\\"edge\\\"></div>\\r\\n                                    <div class=\\\"cont\\\">\\r\\n                                        {{ noStackingPlanMessage || Messages('stacking-plan.empty') }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3 plan-description-panel\\\" ng-if=\\\"!isLoadingState && !isTabsLoadingState\\\">\\r\\n                        <div animate-panel child=\\\"hpanel\\\" ng-if=\\\"details\\\">\\r\\n                            <div class=\\\"hpanel\\\">\\r\\n                                <div class=\\\"panel-heading hbuilt\\\">\\r\\n                                    <div class=\\\"panel-tools\\\">\\r\\n                                        <a class=\\\"closebox\\\" ng-click=\\\"$ctrl.hideSpaceDescription()\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n                                    </div>\\r\\n                                    {{ Messages('stacking-plan.space.details') }}\\r\\n                                </div>\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div class=\\\"row plan-descr space-details\\\">\\r\\n                                        <div class=\\\"space-title pull-left\\\">\\r\\n                                            <h4>{{ details.spaceTypeString }}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"space-info\\\">\\r\\n                                            <h3 class=\\\"space-number\\\">{{ details.spaceNumber }}</h3>\\r\\n                                            <h3 class=\\\"space-rentable-area\\\">{{ details.spaceArea | number:2}} <span ng-bind-html=\\\"Messages('square.meter')\\\"/></h3>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"panel-body\\\" ng-if=\\\"details.tenantName\\\">\\r\\n                                    <div class=\\\"row plan-descr tenant-details\\\">\\r\\n                                        <div class=\\\"tenant-title pull-left\\\">\\r\\n                                            <h4 ng-class=\\\"'industry' + details.industryId\\\">{{ details.industry }}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"tenant-info\\\">\\r\\n                                            <h3 class=\\\"tenant-name\\\"><a ui-sref=\\\"client({id: details.tenantId})\\\">{{ details.tenantName }}</a></h3>\\r\\n                                            <span class=\\\"font-bold no-margins\\\">\\r\\n                                                {{Messages('stacking-plan.expires.2')}} <span am-time-ago=\\\"details.leaseEndDate\\\"></span>\\r\\n                                            </span>\\r\\n                                            <div class=\\\"progress full progress-small\\\">\\r\\n                                                <div ng-style=\\\"{'width': details.expires + '%'}\\\" aria-valuemax=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuenow=\\\"{{details.expires}}\\\" role=\\\"progressbar\\\" class=\\\" progress-bar progress-bar-success\\\">\\r\\n                                                    <span class=\\\"sr-only\\\">{{details.expires}}% Complete</span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-xs-6\\\">\\r\\n                                                    <small class=\\\"stats-label\\\">{{Messages('stacking.plan.details.lease.start')}}</small>\\r\\n                                                    <h4>{{ details.leaseStartDate | date : 'dd/MM/yyyy'}}</h4>\\r\\n                                                </div>\\r\\n\\r\\n                                            <div class=\\\"col-xs-6\\\">\\r\\n                                                <small class=\\\"stats-label\\\">{{Messages('stacking.plan.details.lease.end')}}</small>\\r\\n                                                <h4>{{ description.leaseEndDate | date : 'dd/MM/yyyy'}}</h4>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"panel-body\\\" ng-if=\\\"description.tenantName\\\">\\r\\n                                <div class=\\\"row plan-descr rent-details\\\">\\r\\n                                    <div>\\r\\n                                        <small class=\\\"stats-label\\\">{{Messages('stacking.plan.details.cost.totalmonth')}}</small>\\r\\n                                        <h1 class=\\\"text-success\\\">€ {{ description.totalCosts | number:2}}</h1> \\r\\n                                        <h3>{{ description.inPlaceRent | number:2}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/></h4>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.netrent')}}</small>\\r\\n                                            <h4>€ {{ description.netRent | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.additional')}}</small>\\r\\n                                            <h4>€ {{ description.additionalCosts | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.other')}}</small>\\r\\n                                            <h4>€ {{ description.otherCosts | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.vat')}}</small>\\r\\n                                            <h4>€ {{ description.vatCosts | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 657 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'users', 'title': Messages('users.title') }]\\\" title=\\\"{{Messages('users.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'user'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 658 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'users', 'title': Messages('users.title') }, { 'title': $ctrl.userObject.displayName }]\\\" title=\\\"{{$ctrl.userObject.displayName}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"hpanel\\\" ng-class=\\\"role.id === 1 ? 'hred' : 'hgreen'\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\" ng-if=\\\"$ctrl.userObject.id !== $ctrl.currentUser.id\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editUser()\\\" title=\\\"{{Messages('users.edit')}}\\\"></i>\\r\\n                        <i class=\\\"fa fa-key btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.changePassword()\\\" title=\\\"{{Messages('users.changePassword')}}\\\"></i>\\r\\n                        <i class=\\\"fa btn btn-default btn-xs\\\" ng-class=\\\"isArchived ? 'fa-undo' : 'fa-trash-o'\\\" title=\\\"{{isArchived ? Messages('users.activate') : Messages('users.archive')}}\\\" ng-click=\\\"$ctrl.archiveTrigger()\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"btn-group\\\" ng-if=\\\"$ctrl.userObject.id === $ctrl.currentUser.id\\\">\\r\\n                        <i class=\\\"fa fa-key btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.changePassword()\\\" title=\\\"{{Messages('users.changePassword')}}\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"user-locale-placeholder\\\">\\r\\n                        <span class=\\\"user-locale-name\\\">{{locale.localeName}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"user-avatar\\\">\\r\\n                    <img alt=\\\"\\\" class=\\\"img-circle m-b m-t-md\\\" src=\\\"img/user.svg\\\" />\\r\\n                </div>\\r\\n                <h3 class=\\\"user-name\\\">\\r\\n                    {{$ctrl.userObject.displayName}}\\r\\n                    <span ng-if=\\\"isArchived\\\" class=\\\"small archived-marker\\\">{{Messages('users.archived')}}</span>\\r\\n                </h3>\\r\\n                <div class=\\\"user-status\\\" ng-class=\\\"role.id === 1 ? 'administrator' : 'user'\\\">\\r\\n                    {{role.name}}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel-footer contact-footer\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"contact-stat\\\">\\r\\n                            <span>{{Messages('users.projects')}}: </span>\\r\\n                            <strong>200</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"contact-stat\\\">\\r\\n                            <span>{{Messages('users.messages')}}: </span>\\r\\n                            <strong>300</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"contact-stat\\\">\\r\\n                            <span>{{Messages('users.views')}}: </span>\\r\\n                            <strong>400</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"fish-container\\\">\\r\\n                    <i class=\\\"edge\\\"></i>\\r\\n                    <span class=\\\"cont\\\">{{Messages('users.additional.container')}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 659 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'assets', 'title': Messages('assets.title') }]\\\" title=\\\"{{Messages('assets.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'asset'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 660 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'assets', 'title': Messages('assets.title') }, { 'title': $ctrl.asset.name }]\\\" title=\\\"{{$ctrl.asset.name}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"hpanel hblue\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editAsset()\\\" title=\\\"{{Messages('assets.edit')}}\\\"></i>\\r\\n                        <i class=\\\"fa btn btn-default btn-xs\\\" ng-class=\\\"isArchived ? 'fa-undo' : 'fa-trash-o'\\\" title=\\\"{{isArchived ? Messages('assets.activate') : Messages('assets.archive')}}\\\" ng-click=\\\"$ctrl.archiveTrigger()\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <h2 class=\\\"asset-name\\\">\\r\\n                    {{ $ctrl.asset.name }}\\r\\n                    <span ng-if=\\\"isArchived\\\" class=\\\"small archived-marker\\\">{{Messages('assets.archived')}}</span>\\r\\n                </h2>\\r\\n                <div class=\\\"asset-address\\\">{{ $ctrl.asset.address }}</div>\\r\\n                <p class=\\\"asset-description\\\">{{ $ctrl.asset.description }}</p>\\r\\n            </div>\\r\\n            <ng-map class=\\\"asset-map\\\" center=\\\"52.520468, 13.407234\\\" zoom=\\\"11\\\"  zoom=\\\"11\\\" disable-default-u-i=\\\"true\\\" zoom-control=\\\"true\\\" scrollwheel=\\\"false\\\"></ng-map>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <table class=\\\"table table-bordered table-striped asset-editable\\\">\\r\\n                    <colgroup>\\r\\n                        <col width=\\\"40%\\\">\\r\\n                        <col width=\\\"60%\\\">\\r\\n                    </colgroup>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            {{ Messages('assets.broker') }}\\r\\n                            <p class=\\\"help-note\\\">{{ Messages('assets.broker.help') }}</p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <div class=\\\"popover-wrapper\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"editable editable-click\\\" editable-select=\\\"$ctrl.brokerId\\\" e-required e-ng-options=\\\"s.value as s.text for s in $ctrl.brokers\\\" onaftersave=\\\"$ctrl.saveUpdates()\\\">\\r\\n                                    {{ $ctrl.showBroker() }}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            {{ Messages('assets.brokerDatabaseRecordId') }}\\r\\n                            <p class=\\\"help-note\\\">{{ Messages('assets.brokerDatabaseRecordId.help') }}</p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <div class=\\\"popover-wrapper\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"editable editable-click\\\" editable-text=\\\"$ctrl.brokerDatabaseRecordId\\\" onbeforesave=\\\"$ctrl.brokerDatabaseRecordIdValidation($data)\\\" onaftersave=\\\"$ctrl.saveUpdates()\\\">\\r\\n                                    {{ $ctrl.brokerDatabaseRecordId || 'empty' }}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>{{ Messages('assets.notes') }}</td>\\r\\n                        <td>\\r\\n                            <div class=\\\"popover-wrapper\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"editable editable-click\\\" editable-textarea=\\\"$ctrl.notes\\\" onbeforesave=\\\"$ctrl.notesValidation($data)\\\" onaftersave=\\\"$ctrl.saveUpdates()\\\">\\r\\n                                    {{ $ctrl.notes || 'empty' }}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"hpanel-title\\\">{{ Messages('assets.gallery.title') }}</div>\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <assetgallery images=\\\"$ctrl.asset.images\\\" update-image=\\\"updateImage\\\"></assetgallery>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\" id=\\\"myTabs\\\">\\r\\n                <li class=\\\"active\\\" role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#spaces\\\" id=\\\"spaces-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"spaces\\\" aria-expanded=\\\"true\\\" ng-click=\\\"$ctrl.tabGridsRefresh($event)\\\">\\r\\n                        {{ Messages('assets.spaces.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#floors\\\" id=\\\"floors-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"floors\\\" aria-expanded=\\\"false\\\" ng-click=\\\"$ctrl.tabGridsRefresh($event)\\\">\\r\\n                        {{ Messages('assets.floors.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#objects\\\" id=\\\"objects-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"objects\\\" aria-expanded=\\\"false\\\" ng-click=\\\"$ctrl.tabGridsRefresh($event)\\\">\\r\\n                        {{ Messages('assets.objects.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <div class=\\\"tab-content\\\">\\r\\n                <div id=\\\"spaces\\\" class=\\\"tab-pane active\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <spaces id=\\\"spaceSettings\\\" class=\\\"form-group\\\" asset=\\\"$ctrl.asset\\\" save-updates=\\\"saveUpdates\\\" need-update-data-sources=\\\"$ctrl.updateDataSources('spaces');\\\"></spaces>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"floors\\\" class=\\\"tab-pane\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <floor id=\\\"floorSettings\\\" class=\\\"form-group\\\" asset=\\\"$ctrl.asset\\\" save-updates=\\\"saveUpdates\\\" need-update-data-sources=\\\"$ctrl.updateDataSources('floors');\\\"></floor>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"objects\\\" class=\\\"tab-pane\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <object id=\\\"objectsSettings\\\" class=\\\"form-group\\\" asset=\\\"$ctrl.asset\\\" save-updates=\\\"saveUpdates\\\" need-update-data-sources=\\\"$ctrl.updateDataSources('objects');\\\"></object>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 661 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{'path':'clients', 'title': Messages('clients.title')}]\\\" title=\\\"{{Messages('clients.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'client'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div>\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div ng-if=\\\"$ctrl.selectedClient\\\">\\r\\n            {{Messages('clients.view.title')}}: {{$ctrl.selectedClient.name}} <br/>\\r\\n            {{Messages('clients.address')}}: {{$ctrl.selectedClient.address}} <br />\\r\\n            {{Messages('clients.representatives.title')}}: <br/>\\r\\n            <ul ng-repeat=\\\"rep in $ctrl.selectedClient.representatives\\\">\\r\\n               <li> {{rep.name}} : {{rep.email}} : {{rep.mobileNumber}} : {{rep.officeNumber}} </li>\\r\\n            </ul>\\r\\n            {{Messages('clients.view.notes')}}:\\r\\n            <pre>{{$ctrl.selectedClient.notes}}</pre>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 662 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'clients', 'title': Messages('clients.title') }, { 'title': $ctrl.clientObject.name }]\\\" title=\\\"{{$ctrl.clientObject.name}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"hpanel horange\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editClient()\\\" title=\\\"{{Messages('clients.edit')}}\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"client-avatar\\\">\\r\\n                    <img alt=\\\"\\\" class=\\\"img-circle m-b m-t-md\\\" src=\\\"img/user.svg\\\" />\\r\\n                </div>\\r\\n                <h3 class=\\\"client-name\\\">\\r\\n                    {{$ctrl.clientObject.name}}\\r\\n                </h3>\\r\\n                <div class=\\\"client-industry\\\" ng-class=\\\"'industry'+$ctrl.clientObject.industryId\\\">\\r\\n                    {{$ctrl.clientObject.industry}}\\r\\n                </div>\\r\\n                <dl>\\r\\n                    <dt ng-if=\\\"$ctrl.clientObject.shortName.length > 0\\\">{{ Messages('clients.shortName.formLabel') }}</dt>\\r\\n                    <dd ng-if=\\\"$ctrl.clientObject.shortName.length > 0\\\">{{$ctrl.clientObject.shortName}}</dd>\\r\\n                </dl>\\r\\n                <div class=\\\"client-address\\\" ng-if=\\\"$ctrl.clientObject.address.length > 0\\\">\\r\\n                    {{$ctrl.clientObject.address}}\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n            <ng-map class=\\\"client-map\\\" center=\\\"52.520468, 13.407234\\\" zoom=\\\"11\\\" disable-default-u-i=\\\"true\\\" zoom-control=\\\"true\\\" scrollwheel=\\\"false\\\"></ng-map>\\r\\n            <div class=\\\"panel-body\\\" ng-if=\\\"$ctrl.clientObject.notes.length > 0\\\">\\r\\n                {{$ctrl.clientObject.notes}}\\r\\n            </div>\\r\\n            <!--<div class=\\\"panel-footer\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"client-stat\\\">\\r\\n                            <span>Projects: </span>\\r\\n                            <strong>200</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"client-stat\\\">\\r\\n                            <span>Messages: </span>\\r\\n                            <strong>300</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"client-stat\\\">\\r\\n                            <span>Views: </span>\\r\\n                            <strong>400</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n                <li class=\\\"active\\\" role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#representatives\\\" id=\\\"spaces-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"representatives\\\" aria-expanded=\\\"true\\\" onclick=\\\"return false;\\\">\\r\\n                        {{ Messages('clients.representatives.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <div class=\\\"tab-content\\\">\\r\\n                <div id=\\\"representatives\\\" class=\\\"tab-pane active\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <representatives client=\\\"$ctrl.clientObject\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n/* 663 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- header -->\\r\\n    <div class=\\\"region region-header text-center\\\">\\r\\n        <div class=\\\"site-logo\\\">\\r\\n            <a href=\\\"\\\"><img src=\\\"/img/logo.png\\\" alt=\\\"Tower 360 Logo\\\"></a>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h1>Big Data Platform For Commercial Real Estate</h1>\\r\\n        <h3>Log in with you details to access tower360.co</h3>\\r\\n    </div>\\r\\n    <!-- /header -->\\r\\n\\r\\n    <!-- content -->\\r\\n    <div ui-view>\\r\\n    </div>\\r\\n    <!-- /content -->\\r\\n\\r\\n</div>\"\n\n/***/ },\n/* 664 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"region region-content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-login-wrapper\\\">\\r\\n            <div class=\\\"well well-lg\\\">\\r\\n                <form class=\\\"form form-login\\\" name=\\\"form\\\" novalidate>\\r\\n                    <div ng-if=\\\"$ctrl.error\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\"> {{$ctrl.error}} </div>\\r\\n                    <div class=\\\"form-group\\\" ng-class=\\\"{ 'has-error' : form.email.$invalid && (form.$submitted || form.email.$touched)}\\\">\\r\\n                        <label for=\\\"inputEmail\\\">Email</label>\\r\\n                        <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" name=\\\"email\\\" required=\\\"\\\" autofocus=\\\"\\\" ng-model=\\\"$ctrl.signInData.userName\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" ng-class=\\\"{ 'has-error' : form.password.$invalid && (form.$submitted || form.password.$touched)}\\\">\\r\\n                        <label for=\\\"inputPassword\\\">Password</label>\\r\\n                        <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"password\\\" required=\\\"\\\" ng-model=\\\"$ctrl.signInData.password\\\">\\r\\n                        <p class=\\\"help-block small\\\"><a href=\\\"\\\">Forgot your password?</a></p>\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-lg btn-primary btn-block\\\" ng-click=\\\"$ctrl.signIn()\\\" ng-disabled=\\\"form.$invalid\\\">Log in</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 665 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- header -->\\r\\n    <div class=\\\"region region-header text-center\\\">\\r\\n        <div class=\\\"site-logo\\\">\\r\\n            <a href=\\\"\\\"><img src=\\\"/img/logo.png\\\" alt=\\\"Tower 360 Logo\\\"></a>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h1>Commercial Leasing Management Platform</h1>\\r\\n    </div>\\r\\n    <!-- /header -->\\r\\n\\r\\n    <!-- content -->\\r\\n    <div ui-view>\\r\\n        <div class=\\\"region region-content\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-login-wrapper\\\">\\r\\n                    <div class=\\\"well well-lg\\\">\\r\\n                        <form class=\\\"form-horizontal\\\" role=\\\"form\\\" name=\\\"settingsForm\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-name\\\" >{{Messages('registration.username')}}</label>\\r\\n                                    <div id=\\\"field-name\\\" dx-text-box=\\\"$ctrl.nameSettings\\\" dx-validator=\\\"$ctrl.nameValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-displayName\\\" >{{Messages('registration.displayName')}}</label>\\r\\n                                    <div id=\\\"field-displayName\\\" dx-text-box=\\\"$ctrl.displayNameSettings\\\" dx-validator=\\\"$ctrl.displayNameValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-password\\\" >{{Messages('registration.password')}}</label>\\r\\n                                    <div id=\\\"field-password\\\" dx-text-box=\\\"$ctrl.passwordSettings\\\" dx-validator=\\\"$ctrl.passwordValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-confirmPassword\\\" >{{Messages('registration.confirmPassword')}}</label>\\r\\n                                    <div id=\\\"field-confirmPassword\\\" dx-text-box=\\\"$ctrl.confirmPasswordSettings\\\" dx-validator=\\\"$ctrl.confirmPasswordValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <div dx-button=\\\"$ctrl.saveSettingsBtnConfig\\\" ng-style=\\\"{opacity: $ctrl.saveInProgress ? 100 : inherit}\\\">\\r\\n                                    <div data-options=\\\"dxTemplate: { name:'saveButtonWithLoadIndicator' }\\\">\\r\\n                                        <span dx-load-indicator=\\\"{ bindingOptions: {visible: '$ctrl.saveInProgress'} }\\\"></span>\\r\\n                                        <span class=\\\"dx-button-text\\\" ng-style=\\\"{opacity: $ctrl.saveInProgress ? 100 : inherit}\\\">{{$ctrl.saveInProgress?Messages('registration.saving'):Messages('registration.submit')}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div dx-button=\\\"$ctrl.cancelSettingsBtnConfig\\\"></div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /content -->\\r\\n\\r\\n</div>\"\n\n/***/ },\n/* 666 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"Forbidden\"\n\n/***/ },\n/* 667 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"Not found\"\n\n/***/ },\n/* 668 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t     value: true\n\t});\n\texports.default = interceptors;\n\tinterceptors.$inject = ['$httpProvider'];\n\t/*@ngInject*/\n\tfunction interceptors($httpProvider) {\n\t     $httpProvider.interceptors.push('AuthInterceptorService');\n\t}\n\n/***/ },\n/* 669 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = run;\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _app = __webpack_require__(673);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\trun.$inject = ['$rootScope', 'SecurityService'];\n\t\n\t\n\t/*@ngInject*/\n\tfunction run($rootScope, SecurityService) {\n\t    SecurityService.fillAuthData();\n\t    $rootScope.Messages = _messages2.default;\n\t\n\t    // reset DevExtreme validation engine as it may be considered 'singleton'\n\t    $rootScope.$on('$stateChangeStart', function () {\n\t        _validation_engine2.default.initGroups();\n\t\n\t        SecurityService.getUserInfo().then(function (result) {\n\t            (0, _app.updateLocale)(result.localeId);\n\t        });\n\t    });\n\t\n\t    var setBodySmall = function setBodySmall() {\n\t        if ($(window).outerWidth() < 769) {\n\t            $('body').addClass('page-small');\n\t        } else {\n\t            $('body').removeClass('page-small');\n\t            $('body').removeClass('show-sidebar');\n\t        }\n\t    };\n\t\n\t    $(document).ready(function () {\n\t        setBodySmall();\n\t    });\n\t\n\t    $(window).bind(\"resize click\", function () {\n\t        setBodySmall();\n\t    });\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 670 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = Messages;\n\t\n\tvar _messages_enUs = __webpack_require__(671);\n\t\n\tvar _messages_enUs2 = _interopRequireDefault(_messages_enUs);\n\t\n\tvar _messages_deGe = __webpack_require__(672);\n\t\n\tvar _messages_deGe2 = _interopRequireDefault(_messages_deGe);\n\t\n\tvar _app = __webpack_require__(673);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tMessages.$inject = ['messageId'];\n\t\n\t\n\t/*@ngInject*/\n\tfunction Messages(messageId) {\n\t    var locale = _messages_enUs2.default;\n\t    var localeId = _app.LocaleId;\n\t    if (localeId === 2) {\n\t        locale = _messages_deGe2.default;\n\t    }\n\t\n\t    return locale(messageId);\n\t}\n\n/***/ },\n/* 671 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t        value: true\n\t});\n\texports.default = Messages;\n\tfunction Messages(messageId) {\n\t        var messages = {\n\t                // common\n\t                'confirmation': 'Are you sure?',\n\t                'actions': 'Actions',\n\t                'administrator': 'Administrator',\n\t                'broker': 'Broker',\n\t\n\t                'square.meter': 'm<sup>2</sup>',\n\t\n\t                'validation.required': 'The field is required',\n\t                'validation.email': 'Enter a valid email here',\n\t                'validation.maxLength': 'Too much characters',\n\t                'validation.phone': 'Your phone must have \"(555)555-5555\" format!',\n\t                'validation.shortPassword': 'Password must have at least 6 characters',\n\t                'validation.passwordsNotMatch': 'Password and confirmations must be same',\n\t\n\t                'country.germany': 'Germany',\n\t\n\t                // private\n\t                'state.unknown': 'Unknown',\n\t                'state.pending': 'Pending',\n\t                'state.active': 'Active',\n\t                'state.archived': 'Archived',\n\t\n\t                'mainheader.settings.product': 'Product Settings',\n\t                'mainheader.settings.notification': 'Notification Settings',\n\t                'mainheader.settings.account': 'Account Settings',\n\t                'mainheader.language': 'Language',\n\t                'mainheader.signout': 'Sign Out',\n\t\n\t                'sidebar.brokers': 'Asset Managers',\n\t                'sidebar.users': 'Users',\n\t                'sidebar.assets': 'Assets',\n\t                'sidebar.clients': 'Tenants',\n\t                'sidebar.spaces': 'Units',\n\t                'sidebar.stackingplan': 'Stacking plan',\n\t\n\t                'image.cropper.title': 'Upload an image',\n\t                'image.cropper.save': 'Save',\n\t                'image.cropper.saving': 'Saving',\n\t                'image.cropper.cancel': 'Cancel',\n\t                'image.cropper.addbutton': 'Upload',\n\t                'image.cropper.placeholder.empty': 'Drag and drop image here',\n\t\n\t                'brokers.new': 'Asset Manager',\n\t                'brokers.title': 'Asset Managers',\n\t                'brokers.title.general': 'General attributes',\n\t                'broker.info.title': 'Asset Manager Information',\n\t                'brokers.name': 'Display name',\n\t                'brokers.address': 'Official address',\n\t                'brokers.state': 'State',\n\t                'brokers.message.deleted': 'Asset Manager successfully archived',\n\t                'brokers.message.created': 'Asset Manager successfully created',\n\t                'brokers.message.updated': 'Asset Manager successfully updated',\n\t                'brokers.message.activated': 'Asset Manager successfully activated',\n\t                'brokers.placeholder.name': 'ex. Colliers International',\n\t                'brokers.placeholder.address': 'ex. Germany, Shoenstrasse 23, suite 115',\n\t                'brokers.save': 'Save',\n\t                'brokers.cancel': 'Cancel',\n\t                'brokers.create': 'New',\n\t                'brokers.saving': 'Saving',\n\t                'brokers.archive': 'Archive Asset Manager',\n\t                'brokers.archive.title': 'You are going to archive Asset Manager, their employees will not be able to use Tower360 anymore.',\n\t                'brokers.archive.confirmButton': 'Yes, archive it!',\n\t                'brokers.archived': 'Archived',\n\t                'brokers.activate': 'Activate Asset Manager',\n\t                'brokers.activate.title': 'You are going to activate Asset Manager, their employees will be able to use Tower360.',\n\t                'brokers.activate.confirmButton': 'Yes, activate it!',\n\t                'brokers.edit': 'Edit',\n\t                'brokers.edit.title': 'Edit Asset Manager',\n\t                'brokers.create.title': 'Create Asset Manager',\n\t                'brokers.projects': 'Projects',\n\t                'brokers.messages': 'Messages',\n\t                'brokers.views': 'Views',\n\t                'brokers.additional.container': 'Container for additional information',\n\t\n\t                'users.new': 'User',\n\t                'users.title': 'Users',\n\t                'users.title.general': 'General attributes',\n\t                'users.info.title': 'User Information',\n\t                'users.email': 'Email',\n\t                'users.displayname': 'Display name',\n\t                'users.state': 'State',\n\t                'users.locale': 'Locale',\n\t                'users.broker': 'Associate with',\n\t                'users.broker.help': 'Select Asset Manager where this person is working',\n\t                'users.role': 'Role in portal',\n\t                'users.role.help': 'Select role for new user',\n\t                'users.message.created': 'User successfully invited',\n\t                'users.message.updated': 'User successfully updated',\n\t                'users.message.archived': 'User successfully archived',\n\t                'users.message.activated': 'User successfully activated',\n\t                'users.placeholder.email': 'Email',\n\t                'users.placeholder.displayname': 'ex. Mathias Kohler',\n\t                'users.placeholder.currentPassword': 'Current Password',\n\t                'users.placeholder.newPassword': 'New Password',\n\t                'users.placeholder.confirmPassword': 'Confirm Password',\n\t                'users.images.add': 'Select image',\n\t                'users.invite': 'Invite',\n\t                'users.save': 'Save',\n\t                'users.saving': 'Saving',\n\t                'users.cancel': 'Cancel',\n\t                'users.create': 'Invite new user',\n\t                'users.archive': 'Archive user',\n\t                'users.archive.title': 'You are going to archive user, this user will not be able use Tower360 anymore.',\n\t                'users.archive.confirmButton': 'Yes, archive it!',\n\t                'users.archived': 'Archived',\n\t                'users.activate': 'Activate user',\n\t                'users.activate.title': 'You are going to activate user, this user will be able to user Tower360.',\n\t                'users.activate.confirmButton': 'Yes, activate it!',\n\t                'users.edit': 'Edit',\n\t                'users.edit.title': 'Edit user',\n\t                'users.changePassword': 'Change password',\n\t                'users.create.title': 'Create user',\n\t                'users.projects': 'Projects',\n\t                'users.messages': 'Messages',\n\t                'users.views': 'Views',\n\t                'users.additional.container': 'Container for additional information',\n\t                'users.changePassord.title': 'Change Password',\n\t                'users.currentPassword': 'Current password',\n\t                'users.newPassword': 'New password',\n\t                'users.confirmPassword': 'Confirm password',\n\t                'users.changingPasswordBtn': 'Changing',\n\t                'users.changePasswordBtn': 'Change',\n\t                'users.changePassword.failed': 'We were not able to update your password, please try again later',\n\t                'users.changePassword.success': 'You password has been changed',\n\t\n\t                'assets.new': 'Asset',\n\t                'assets.add': 'Add asset',\n\t                'assets.edit': 'Edit asset',\n\t                'assets.title': 'Assets',\n\t                'assets.title.address': 'Address details',\n\t                'assets.title.other': 'Other',\n\t                'assets.name': 'Asset name',\n\t                'assets.state': 'State',\n\t                'assets.address': 'Address',\n\t                'assets.country': 'Country:',\n\t                'assets.city': 'City',\n\t                'assets.city.help': 'ex. Hamburg',\n\t                'assets.street': 'Street',\n\t                'assets.street.help': 'ex. Fishertwiete',\n\t                'assets.building': 'Building',\n\t                'assets.building.help': 'ex. 12A',\n\t                'assets.brokerDatabaseRecordId': 'Id in Broker database:',\n\t                'assets.brokerDatabaseRecordId.help': 'Optionally specify ID in Broker database ',\n\t                'assets.brokerDatabaseRecordId.errorLength': 'Id cannot be longer than 10 letters',\n\t                'assets.floorCount': 'Floors',\n\t                'assets.floors.label': 'Floors & Units',\n\t                'assets.floors.configure': 'Configure',\n\t                'assets.floors.title': 'Floors',\n\t                'assets.floors.number': 'Number',\n\t                'assets.floors.description': 'Description',\n\t                'assets.floors.assetobject': 'Tower',\n\t                'assets.floors.addrange': 'Floors range',\n\t                'assets.floors.addbutton': 'Add',\n\t                'assets.floors.cancelbutton': 'Cancel',\n\t                'assets.floors.range.modal.title': 'Add range',\n\t                'assets.floors.range.title': 'Please specify number of floors to add. They will be added to the end of the list.',\n\t                'assets.floors.range.field': 'How many floors to add',\n\t                'assets.floors.range.checkbox': 'Numerate automatically',\n\t                'assets.floors.range.checkbox.help': 'Enable this button of you want to numerate floors automatically by numbers',\n\t                'assets.floors.deleted': 'Floor successfully deleted',\n\t                'assets.floors.created': 'Floors range successfully created',\n\t                'assets.floors.updated': 'Floor successfully updated',\n\t                'assets.floors.delete.title': 'You are going to delete floor with all spaces, this floor will not be able use Tower360 anymore.',\n\t                'assets.floors.delete.confirmButton': 'Yes, delete it!',\n\t\n\t                'assets.spaces.modal.title': 'Add space',\n\t                'assets.spaces.title': 'Units',\n\t                'assets.spaces.unit': 'Unit',\n\t                'assets.spaces.office': 'Office',\n\t                'assets.spaces.garageUnderground': 'Garage Underground',\n\t                'assets.spaces.roofTerrace': 'Roof Terrace',\n\t                'assets.spaces.outerSurface': 'Outer Surface',\n\t                'assets.spaces.warehouse': 'Warehouse',\n\t                'assets.spaces.handlesSurface': 'Handles Surface',\n\t                'assets.spaces.gastronomy': 'Gastronomy',\n\t                'assets.spaces.archive': 'Archive',\n\t                'assets.spaces.technicalRoom': 'Technical Room',\n\t                'assets.spaces.flat': 'Flat',\n\t                'assets.spaces.retail': 'Retail',\n\t                'assets.spaces.number': 'Unit number',\n\t                'assets.spaces.type': 'Type',\n\t                'assets.spaces.floor': 'Floor number',\n\t                'assets.spaces.assetobject': 'Tower',\n\t                'assets.spaces.rentableArea': 'Rentable Area',\n\t                'assets.spaces.marketingDescription': 'Marketing Description',\n\t                'assets.spaces.notes': 'Internal notes',\n\t                'assets.spaces.minAskingPrice': 'Minimum asking price',\n\t                'assets.spaces.maxAskingPrice': 'Maximum asking price',\n\t                'assets.spaces.placeholder.number': 'Type space number here',\n\t                'assets.spaces.placeholder.rentableArea': 'Specify rentable area value',\n\t                'assets.spaces.placeholder.marketingDescription': 'Put here some text for marketing materials',\n\t                'assets.spaces.placeholder.notes': 'Internal notes',\n\t                'assets.spaces.placeholder.minAskingPrice': 'Type minimum asking price here',\n\t                'assets.spaces.placeholder.maxAskingPrice': 'Type maximum asking price',\n\t                'assets.spaces.saving': 'Saving',\n\t                'assets.spaces.save': 'Save',\n\t                'assets.spaces.cancel': 'Cancel',\n\t                'assets.spaces.add': 'Unit',\n\t                'assets.spaces.deleted': 'Unit successfully deleted',\n\t                'assets.spaces.created': 'Unit successfully created',\n\t                'assets.spaces.updated': 'Unit successfully updated',\n\t                'assets.spaces.delete.title': 'You are going to delete space, this space will not be able use Tower360 anymore.',\n\t                'assets.spaces.delete.confirmButton': 'Yes, delete it!',\n\t                'assets.spaces.validation.maxAskingPrice': 'Max asking price has to be greater than min asking price',\n\t                'assets.spaces.availability': 'Availability',\n\t                'assets.spaces.asking_price': 'Asking Price',\n\t                'assets.spaces.tenant_name': 'Tenant Name',\n\t                'assets.spaces.in_place_rent': 'In-Place Rent',\n\t                'assets.spaces.net_rent': 'Net Rent',\n\t                'assets.spaces.vat': 'Vat',\n\t                'assets.spaces.additional_cost': 'Additional cost',\n\t                'assets.spaces.total_rent': 'Total rent',\n\t                'assets.spaces.status': 'Status',\n\t                'assets.spaces.lease_start_date': 'Contract Start Date',\n\t                'assets.spaces.lease_end_date': 'Contract End Date',\n\t                // spaces filter\n\t                'assets.spaces.filter.title': 'Filter',\n\t                'assets.spaces.filter.all': 'All',\n\t                'assets.spaces.filter.vacant': 'Vacant',\n\t                'assets.spaces.filter.occupied': 'Occupied',\n\t                'assets.spaces.filter.in_1_month': 'in 1 month',\n\t                'assets.spaces.filter.in_3_month': 'in 3 month',\n\t                'assets.spaces.filter.in_6_month': 'in 6 month',\n\t                'assets.spaces.filter.in_1_year': 'in 1 year',\n\t                'assets.spaces.filter.custom_dates': 'Custom dates',\n\t                'assets.spaces.filter.status.title': 'Filter spaces by current status or their availability in future',\n\t                'assets.spaces.filter.extra': 'Extra filters',\n\t                'assets.spaces.filter.favorites': 'Favorites',\n\t                'assets.spaces.filter.empty': 'Empty response',\n\t                'assets.spaces.filter.unit': 'Unit',\n\t                'assets.spaces.filter.tower': 'Tower',\n\t                'assets.spaces.filter.towers': 'Towers',\n\t                'assets.spaces.filter.towers.placeholder': 'Select or search a tower in the list...',\n\t                'assets.spaces.filter.floor': 'Floor',\n\t                'assets.spaces.filter.floor_from': 'Floor from',\n\t                'assets.spaces.filter.floor_to': 'Floor to',\n\t                'assets.spaces.filter.rentable_area': 'Rentable Area',\n\t                'assets.spaces.filter.rentable_area_from': 'Rentable Area from',\n\t                'assets.spaces.filter.rentable_area_to': 'Rentable Area to',\n\t                'assets.spaces.filter.type': 'Type',\n\t                'assets.spaces.filter.asking_price': 'Asking Price',\n\t                'assets.spaces.filter.asking_price_from': 'Asking Price from',\n\t                'assets.spaces.filter.asking_price_to': 'Asking Price to',\n\t                'assets.spaces.filter.status': 'Status',\n\t                'assets.spaces.filter.availability': 'Availability',\n\t                'assets.spaces.filter.available_from': 'Available from',\n\t                'assets.spaces.filter.immediately': 'Immediately',\n\t                'assets.spaces.filter.in_place_rent': 'In-Place Rent',\n\t                'assets.spaces.filter.in_place_rent_from': 'In-Place Rent from',\n\t                'assets.spaces.filter.in_place_rent_to': 'In-Place Rent to',\n\t                'assets.spaces.filter.from': 'From',\n\t                'assets.spaces.filter.to': 'To',\n\t                'assets.spaces.filter.apply': 'Apply',\n\t                'assets.spaces.filter.cancel': 'Cancel',\n\t\n\t                'assets.tenants.title': 'Tenants',\n\t                'assets.tenants.name': 'Tenant name',\n\t                'assets.tenants.type': 'Type',\n\t                'assets.tenants.contract_number': 'Contract No',\n\t                'assets.tenants.total_area': 'Total area',\n\t                'assets.tenants.units': 'Units Occupied',\n\t                'assets.tenants.towers': 'Tower(s)',\n\t                'assets.tenants.floor': 'Floor',\n\t                'assets.tenants.area_in_unit': 'Area in unit',\n\t                'assets.tenants.in_place_rent': 'In-Place Rent',\n\t                'assets.tenants.net_rent': 'Net Rent',\n\t                'assets.tenants.vat': 'Vat',\n\t                'assets.tenants.additional_cost': 'Additional cost',\n\t                'assets.tenants.total_rent': 'Total rent',\n\t                'assets.tenants.status': 'Status',\n\t                'assets.tenants.lease_start_date': 'Contract Start Date',\n\t                'assets.tenants.lease_end_date': 'Contract End Date',\n\t                // tenants filter\n\t                'assets.tenants.filter.title': 'Filter',\n\t                'assets.tenants.filter.in_place': 'In place',\n\t                'assets.tenants.filter.expired': 'Expired',\n\t                'assets.tenants.filter.within_1_month': 'Within 1 month',\n\t                'assets.tenants.filter.within_3_month': 'Within 3 month',\n\t                'assets.tenants.filter.within_6_month': 'Within 6 month',\n\t                'assets.tenants.filter.within_1_year': 'Within 1 year',\n\t                'assets.tenants.filter.custom_dates': 'Custom dates',\n\t                'assets.tenants.filter.quick.title': 'Quick filters',\n\t                'assets.tenants.filter.extra': 'Extra filters',\n\t                'assets.tenants.filter.favorites': 'Favorites',\n\t                'assets.tenants.filter.empty': 'Empty response',\n\t                'assets.tenants.filter.unit': 'Unit',\n\t                'assets.tenants.filter.tower': 'Tower',\n\t                'assets.tenants.filter.towers': 'Towers',\n\t                'assets.tenants.filter.towers.placeholder': 'Select or search a tower in the list...',\n\t                'assets.tenants.filter.industry': 'Industry',\n\t                'assets.tenants.filter.industry.placeholder': 'Select or search a industry in the list...',\n\t                'assets.tenants.filter.lease_date': 'Contract start dates range',\n\t                'assets.tenants.filter.lease_start_date': 'Contract Start Date from',\n\t                'assets.tenants.filter.lease_end_date': 'Contract Start Date to',\n\t                'assets.tenants.filter.tenant_name': 'Tenant Name',\n\t                'assets.tenants.filter.size': 'Size',\n\t                'assets.tenants.filter.total_rent': 'Total rent',\n\t                'assets.tenants.filter.type': 'Unit Type',\n\t                'assets.tenants.filter.rentable_area': 'Price per square meters',\n\t                'assets.tenants.filter.rentable_area_from': 'Price per square meters from',\n\t                'assets.tenants.filter.rentable_area_to': 'Price per square meters to',\n\t                'assets.tenants.filter.rent': 'Rent',\n\t                'assets.tenants.filter.from': 'From',\n\t                'assets.tenants.filter.to': 'To',\n\t                'assets.tenants.filter.this_month': 'This Month',\n\t                'assets.tenants.filter.last_month': 'Last Month',\n\t                'assets.tenants.filter.this_year': 'This Year',\n\t                'assets.tenants.filter.last_year': 'Last Year',\n\t                'assets.tenants.filter.datepicker.clear': 'Clear',\n\t                'assets.tenants.filter.apply': 'Apply',\n\t                'assets.tenants.filter.cancel': 'Cancel',\n\t\n\t                'assets.gallery.header': 'Configure',\n\t                'assets.gallery.title': 'Image',\n\t                'assets.gallery.add': 'Add photo',\n\t                'assets.gallery.main': 'Main',\n\t                'assets.gallery.message.added': 'Asset image successfully added',\n\t                'assets.gallery.message.deleted': 'Asset image successfully deleted',\n\t                'assets.broker': 'Asset Manager:',\n\t                'assets.broker.help': 'Select Asset Manager who is managing the Asset',\n\t                'assets.notes': 'Internal notes:',\n\t                'assets.notes.errorLength': 'Notes cannot be longer than 500 letters',\n\t                'assets.description': 'Marketing description:',\n\t                'assets.message.archived': 'Asset successfully archived',\n\t                'assets.message.activated': 'Asset successfully activated',\n\t                'assets.message.created': 'Asset successfully created',\n\t                'assets.message.updated': 'Asset successfully updated',\n\t                'assets.info': 'Asset information',\n\t                'assets.info.general': 'General information',\n\t                'assets.info.images': 'Images',\n\t                'assets.placeholder.broker': 'Select broker',\n\t                'assets.placeholder.name': 'Type name here',\n\t                'assets.placeholder.country': 'Select country',\n\t                'assets.placeholder.city': 'ex. Hamburg',\n\t                'assets.placeholder.street': 'ex. Shoenstrasse',\n\t                'assets.placeholder.building': 'ex. 26A',\n\t                'assets.placeholder.brokerDatabaseRecordId': 'ex. BLD-123',\n\t                'assets.placeholder.notes': 'Internal notes',\n\t                'assets.placeholder.description': 'Put here some text for marketing materials',\n\t                'assets.save': 'Save',\n\t                'assets.cancel': 'Cancel',\n\t                'assets.saving': 'Saving',\n\t                'assets.archive': 'Archive asset',\n\t                'assets.archive.title': 'You are going to archive Asset.',\n\t                'assets.archive.confirmButton': 'Yes, archive it!',\n\t                'assets.archived': 'Archived',\n\t                'assets.activate': 'Activate asset',\n\t                'assets.activate.title': 'You are going to activate Asset.',\n\t                'assets.activate.confirmButton': 'Yes, activate it!',\n\t                'assets.available.space': 'Available Unit',\n\t                'assets.occupancy': 'Occupancy',\n\t                'assets.total.rentable': 'Total Rentable',\n\t\n\t                'assets.objects.title': 'Objects',\n\t                'assets.objects.name': 'Name',\n\t                'assets.objects.isDisplayOnStackingPlan': 'Show on Stacking Plan',\n\t                'assets.objects.add': 'Tower',\n\t                'assets.objects.message.deleted': 'Tower successfully deleted',\n\t                'assets.objects.message.created': 'Tower successfully created',\n\t                'assets.objects.message.updated': 'Tower successfully updated',\n\t                'assets.objects.delete.title': 'You are going to delete tower with all floors, this tower will not be able use Tower360 anymore.',\n\t                'assets.objects.delete.confirmButton': 'Yes, delete it!',\n\t                'assets.objects.placeholder.name': 'Type name here',\n\t                'assets.objects.create.name': 'Name:',\n\t                'assets.objects.save': 'Save',\n\t                'assets.objects.cancel': 'Cancel',\n\t                'assets.objects.saving': 'Saving',\n\t                'assets.objects.create.title': 'Asset Object',\n\t                'assets.objects.create.isDisplayOnStackingPlan': 'Show on Stacking Plan:',\n\t                'assets.objects.address': 'Address',\n\t                'assets.objects.edit.title': 'Asset Object',\n\t\n\t                'assets.validation.countryRequired': 'Country required',\n\t                'assets.validation.cityRequired': 'City required',\n\t                'assets.validation.streetRequired': 'Street required',\n\t                'assets.validation.buildingRequired': 'Building required',\n\t\n\t                'clients.new': 'Tenant',\n\t                'clients.title': 'Tenants',\n\t                'clients.name': 'Public name',\n\t                'clients.shortName': 'Short name:',\n\t                'clients.shortName.formLabel': 'Short name',\n\t                'clients.industry': 'Industry',\n\t                'clients.address': 'Address',\n\t                'clients.country': 'Country',\n\t                'clients.info': 'Tenant information',\n\t                'clients.info.general': 'General information',\n\t                'clients.info.representatives': 'Contacts',\n\t                'clients.user': 'User',\n\t                'clients.notes': 'Internal notes',\n\t                'clients.state': 'State',\n\t                'clients.placeholder.name': 'Type name here',\n\t                'clients.placeholder.shortName': 'Type short name here',\n\t                'clients.placeholder.notes': 'Add notes here',\n\t                'clients.placeholder.description': 'Add description here',\n\t                'clients.save': 'Save',\n\t                'clients.saving': 'Saving',\n\t                'clients.cancel': 'Cancel',\n\t                'clients.message.archived': 'Tenant successfully archived',\n\t                'clients.message.created': 'Tenant successfully created',\n\t                'clients.message.updated': 'Tenant successfully updated',\n\t                'clients.view.title': 'Tenant',\n\t                'clients.view.notes': 'Notes',\n\t                'clients.archive.title': 'You are going to archive Tenant.',\n\t                'clients.archive.confirmButton': 'Yes, archive it!',\n\t                'clients.archived': 'Archived',\n\t                'clients.activate': 'Activate tenant',\n\t                'clients.activate.title': 'You are going to activate Tenant.',\n\t                'clients.activate.confirmButton': 'Yes, activate it!',\n\t                'clients.edit': 'Edit',\n\t                'clients.edit.title': 'Edit Tenant',\n\t                'clients.create.title': 'Create Tenant',\n\t\n\t                'clients.representatives.new': 'Contact',\n\t                'clients.representatives.title': 'Contacts',\n\t                'clients.representatives.name': 'Name',\n\t                'clients.representatives.email': 'Email',\n\t                'clients.representatives.phone': 'Phone',\n\t                'clients.representatives.position': 'Position',\n\t\n\t                'clients.representatives.message.deleted': 'Contact successfully deleted',\n\t                'clients.representatives.message.created': 'Contact successfully created',\n\t                'clients.representatives.message.updated': 'Contact successfully updated',\n\t\n\t                'industry.technology': 'Technology',\n\t                'industry.media': 'Media/Entertainment',\n\t                'industry.education': 'Education',\n\t                'industry.trade': 'Trade/Energy',\n\t                'industry.government': 'Government/Non-profit',\n\t                'industry.healthcare': 'Healthcare',\n\t                'industry.logistics': 'Logistics',\n\t                'industry.consulting': 'Consulting',\n\t                'industry.retail': 'Retail',\n\t                'industry.telco': 'Telco',\n\t                'industry.food': 'Food & Beverage',\n\t                'industry.finance': 'Finance',\n\t                'industry.residential': 'Residential',\n\t                'industry.travel': 'Travel',\n\t                'industry.wellness': 'Wellness',\n\t                'industry.hr': 'Human Resources',\n\t                'industry.real-estate': 'Real Estate',\n\t                'industry.industrials': 'Industrials',\n\t\n\t                // public\n\t                'login.email': 'Email',\n\t                'login.password': 'Password',\n\t                'login.placeholder.email': 'Please enter email',\n\t                'login.placeholder.password': 'Please enter password',\n\t                'login.login': 'Log in',\n\t                'login.automatic.signout': 'You were automatically logged off because of inactivity',\n\t\n\t                // Stacking plan\n\t                'stacking-plan.title': 'Stacking plan',\n\t                'stacking-plan.empty': 'There is no stacking plan for this asset',\n\t                'stacking-plan.space.details': 'Unit details',\n\t                'stacking-plan.space.options': 'Options',\n\t                'stacking-plan.space.deals': 'Deals',\n\t                'stacking-plan.view.actual': 'Actual',\n\t                'stacking-plan.view.normalized': 'Normalized',\n\t                'stacking-plan.legend.vacant': 'VACANT',\n\t                'stacking-plan.legend.lease.expiration': 'Lease Expiration',\n\t                'stacking-plan.expires': 'Exp',\n\t                'stacking-plan.expires.2': 'Expires',\n\t                'stacking-plan.unit': 'UNIT',\n\t                'stacking-plan.nospaces': 'no spaces',\n\t                'stacking.plan.details.lease.start': 'Lease Start Date',\n\t                'stacking.plan.details.lease.end': 'Lease End Date',\n\t                'stacking.plan.details.cost.totalmonth': 'Total month cost',\n\t                'stacking.plan.details.cost.netrent': 'Net Rent',\n\t                'stacking.plan.details.cost.additional': 'Additional costs',\n\t                'stacking.plan.details.cost.other': 'Other costs',\n\t                'stacking.plan.details.cost.vat': 'VAT costs',\n\t\n\t                //registration\n\t                'registration.username': 'Username',\n\t                'registration.password': 'Password',\n\t                'registration.confirmPassword': 'Repeat Password',\n\t                'registration.displayName': 'Display Name',\n\t                'registration.submit': 'Register',\n\t                'registration.cancel': 'Cancel',\n\t                'registration.saving': 'Processing',\n\t\n\t                //address\n\t                'address.autoComplete': 'Try to find address:',\n\t                'address.manually': 'Or specify it manually:',\n\t                'address.streetAddress': 'Street Address:',\n\t                'address.postCode': 'Post Code:',\n\t                'address.country': 'Country:',\n\t                'address.city': 'City:',\n\t                'address.street': 'Street:',\n\t                'address.placeholder.country': 'Select country',\n\t                'address.placeholder.city': 'ex. Munich',\n\t                'address.placeholder.street': 'ex.  Reeperbahn',\n\t                'address.placeholder.streetAddress': 'ex. 25',\n\t                'address.placeholder.postCode': 'ex. 10117',\n\t                'address.validation.countryRequired': 'Country required'\n\t        };\n\t\n\t        var result = messages[messageId];\n\t\n\t        if (!result) {\n\t                return '<<<<Missing ' + messageId + ' >>>>';\n\t        }\n\t        return result;\n\t}\n\n/***/ },\n/* 672 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t        value: true\n\t});\n\texports.default = Messages;\n\tfunction Messages(messageId) {\n\t        var messages = {\n\t                // common\n\t                'confirmation': 'Sind Sie sicher?',\n\t                'actions': 'Aktionen',\n\t                'administrator': 'Administrator',\n\t                'broker': '[DEU] Broker',\n\t\n\t                'square.meter': 'm<sup>2</sup>',\n\t\n\t                'validation.required': 'Dieses Feld ist notwendig',\n\t                'validation.email': 'Bitte geben Sie eine gültige E-Mail-Adresse ein.',\n\t                'validation.maxLength': 'Zu viele Zeichen',\n\t                'validation.phone': 'Bitte geben Sie Ihre Telefonnummer im folgenden Format ein: \"+49 151 5555555\"',\n\t                'validation.shortPassword': 'Ihr Passwort muss mindestens 6 Zeichen lang sein',\n\t                'validation.passwordsNotMatch': 'Die Passwörter stimmen nicht überein.',\n\t\n\t                'country.germany': 'Deutschland',\n\t\n\t                // private\n\t                'state.unknown': 'Unbekannt',\n\t                'state.pending': 'Unerledigt',\n\t                'state.active': 'Aktiv',\n\t                'state.archived': 'Archiviert',\n\t\n\t                'mainheader.settings.product': 'Produkteinstellungen',\n\t                'mainheader.settings.notification': 'Benachrichtigungseinstellungen',\n\t                'mainheader.settings.account': 'Account-Einstellungen',\n\t                'mainheader.language': 'Sprache',\n\t                'mainheader.signout': 'Abmelden',\n\t\n\t                'sidebar.brokers': 'Asset Manager',\n\t                'sidebar.users': 'Benutzer',\n\t                'sidebar.assets': 'Objekte',\n\t                'sidebar.clients': 'Mieter',\n\t                'sidebar.spaces': 'Flächen',\n\t                'sidebar.stackingplan': 'Belegungsplan',\n\t\n\t                'image.cropper.title': '[DEU] Upload an image',\n\t                'image.cropper.save': '[DEU] Save',\n\t                'image.cropper.saving': '[DEU] Saving',\n\t                'image.cropper.cancel': '[DEU] Cancel',\n\t                'image.cropper.addbutton': '[DEU] Upload',\n\t                'image.cropper.placeholder.empty': '[DEU] Drag and drop image here',\n\t\n\t                'brokers.new': 'Asset Manager',\n\t                'brokers.title': 'Asset Manager',\n\t                'brokers.title.general': 'Allgemeine Attribute',\n\t                'broker.info.title': 'Asset Manager Informationen',\n\t                'brokers.name': 'Anzeigename',\n\t                'brokers.address': 'Offizielle Adresse',\n\t                'brokers.state': 'Staat',\n\t                'brokers.message.deleted': 'Asset Manager wurde erfolgreich archiviert',\n\t                'brokers.message.created': 'Asset Manager wurde erfolgreich erstellt',\n\t                'brokers.message.updated': 'Asset Manager wurde erfolgreich aktualisiert',\n\t                'brokers.message.activated': 'Asset Manager wurde erfolgreich aktiviert',\n\t                'brokers.placeholder.name': 'Bsp. Colliers International',\n\t                'brokers.placeholder.address': 'Bsp. Alter Weg 110 a, 12345 Musterdorf',\n\t                'brokers.save': 'Speichern',\n\t                'brokers.cancel': 'Abbrechen',\n\t                'brokers.create': 'Neu',\n\t                'brokers.saving': 'Speichernd',\n\t                'brokers.archive': 'Archiviere Asset Manager',\n\t                'brokers.archive.title': '[DEU] You are going to archive Asset Manager, their employees will not be able to use Tower360 anymore.',\n\t                'brokers.archive.confirmButton': 'Ja, archiviere!',\n\t                'brokers.archived': 'Archiviert',\n\t                'brokers.activate': 'Aktive Asset Manager',\n\t                'brokers.activate.title': '[DEU] You are going to activate Asset Manager, their employees will be able to use Tower360.',\n\t                'brokers.activate.confirmButton': '[DEU] Yes, activate it!',\n\t                'brokers.edit': 'Editieren',\n\t                'brokers.edit.title': 'Editiere Asset Manager',\n\t                'brokers.create.title': 'Erstelle Asset Manager',\n\t                'brokers.projects': 'Projekte',\n\t                'brokers.messages': 'Nachrichten',\n\t                'brokers.views': 'Abrufe',\n\t                'brokers.additional.container': 'Behälter für zusätzliche Informationen',\n\t\n\t                'users.new': 'Benutzer',\n\t                'users.title': 'Benutzer',\n\t                'users.title.general': 'Allgemeine Attribute',\n\t                'users.info.title': 'Benutzerinformationen',\n\t                'users.email': 'Email',\n\t                'users.displayname': 'Anzeigename',\n\t                'users.state': 'Staat',\n\t                'users.locale': '[DEU] Locale',\n\t                'users.broker': 'Verbinden mit',\n\t                'users.broker.help': 'Selektioniere Asset Manager wo diese Person arbeitet',\n\t                'users.role': 'Portalrolle',\n\t                'users.role.help': 'Wählen Sie die die Benutzerrolle aus',\n\t                'users.message.created': 'Benutzer erfolgreich eingeladen',\n\t                'users.message.updated': 'Benutzer erfolgreich aktualisiert',\n\t                'users.message.archived': 'Benutzer erfolgreich aktualisiert',\n\t                'users.message.activated': 'Benutzer erfolgreich archiviert',\n\t                'users.placeholder.email': 'Email',\n\t                'users.placeholder.displayname': 'Bsp. Mathias Kohler',\n\t                'users.placeholder.currentPassword': 'Aktuelles Kennwort',\n\t                'users.placeholder.newPassword': 'Neues Kennwor',\n\t                'users.placeholder.confirmPassword': 'Bestätige Kennwort',\n\t                'users.images.add': 'Selektioniere Bild',\n\t                'users.invite': 'Einladen',\n\t                'users.save': 'Speichern',\n\t                'users.saving': 'Speichert',\n\t                'users.cancel': 'Abbrechen',\n\t                'users.create': 'Neuen Benutzer einladen',\n\t                'users.archive': 'Archiviere Benutzer',\n\t                'users.archive.title': 'Sie werden den Benutzer archivieren. Der Benutzer wird nicht mehr Tower360 benutzen können.',\n\t                'users.archive.confirmButton': 'Archivieren',\n\t                'users.archived': 'Archiviert',\n\t                'users.activate': 'Aktiviere den Benutzer',\n\t                'users.activate.title': 'Sie werden den Benutzer aktivieren. Der Benutzer wird Tower360 benutzen können.',\n\t                'users.activate.confirmButton': 'Ja, aktiviere den Benutzer',\n\t                'users.edit': 'Bearbeiten',\n\t                'users.edit.title': 'Bearbeite Benutzer',\n\t                'users.create.title': 'Erstelle Benutzer',\n\t                'users.projects': 'Projekte',\n\t                'users.messages': 'Nachrichten',\n\t                'users.views': 'Abrufe',\n\t                'users.additional.container': 'Feld für Zusatzinformationen',\n\t                'users.changePassword': 'Kennwortänderung',\n\t                'users.changePassord.title': 'Kennwortänderung',\n\t                'users.currentPassword': 'Aktuelles Kennwort',\n\t                'users.newPassword': 'Neues Kennwort',\n\t                'users.confirmPassword': 'Bestätige Kennwort',\n\t                'users.changingPasswordBtn': 'Kennwort wird geändert',\n\t                'users.changePasswordBtn': 'Ändere',\n\t                'users.changePassword.failed': 'Wir konnten Ihr Passwort nicht ändern, Versuchen Sie es später nochmals.',\n\t                'users.changePassword.success': 'Ihr Kennwort wurde geändert',\n\t\n\t                'assets.new': 'Neues Objekt',\n\t                'assets.add': 'Objekt hinzufügen',\n\t                'assets.edit': 'Objekt editieren',\n\t                'assets.title': 'Objekte',\n\t                'assets.title.address': 'Adressangaben',\n\t                'assets.title.other': 'Sonstiges',\n\t                'assets.name': 'Objekt Name',\n\t                'assets.state': 'Staat',\n\t                'assets.address': 'Adresse',\n\t                'assets.country': 'Land',\n\t                'assets.city': 'Stadt',\n\t                'assets.city.help': 'Bsp. Hamburg',\n\t                'assets.street': 'Strasse',\n\t                'assets.street.help': 'Bsp. Fishertwiete',\n\t                'assets.building': 'Gebäude',\n\t                'assets.building.help': 'Bsp. 12A',\n\t                'assets.brokerDatabaseRecordId': '[DEU] Id in Broker database',\n\t                'assets.brokerDatabaseRecordId.help': '[DEU] Optionally specify ID in Broker database',\n\t                'assets.brokerDatabaseRecordId.errorLength': '[DEU] Id cannot be longer than 10 letters',\n\t                'assets.floorCount': 'Geschoss',\n\t                'assets.floors.label': 'Geschoss & Flächen',\n\t                'assets.floors.configure': 'Konfigurieren',\n\t                'assets.floors.title': 'Geschoss',\n\t                'assets.floors.number': 'Nummer',\n\t                'assets.floors.description': 'Beschreibung',\n\t                'assets.floors.assetobject': 'Gebäude',\n\t                'assets.floors.addrange': 'Geschoss Abgrenzung',\n\t                'assets.floors.addbutton': 'Hinzufügen',\n\t                'assets.floors.cancelbutton': 'Abbrechen',\n\t                'assets.floors.range.modal.title': 'Spannweite hinzufügen',\n\t                'assets.floors.range.title': 'Bitte geben Sie die Anzahl von Geschössen an. Die werden am Ende der Liste hinzugefügt.',\n\t                'assets.floors.range.field': 'Wieviel Etagen werden hinzugefügt',\n\t                'assets.floors.range.checkbox': 'Numeriere automatisch',\n\t                'assets.floors.range.checkbox.help': '[DEU] Enable this button of you want to numerate floors automatically by numbers',\n\t                'assets.floors.deleted': '[DEU] Floor successfully deleted',\n\t                'assets.floors.created': '[DEU] Floor successfully created',\n\t                'assets.floors.updated': '[DEU] Floor successfully updated',\n\t                'assets.floors.delete.title': '[DEU] You are going to delete floor with all units, this floor will not be able use Tower360 anymore.',\n\t                'assets.floors.delete.confirmButton': '[DEU] Yes, delete it!',\n\t\n\t                'assets.spaces.modal.title': '[DEU] Add unit',\n\t                'assets.spaces.title': '[DEU] Units',\n\t                'assets.spaces.unit': '[DEU] Unit',\n\t                'assets.spaces.office': 'Büro',\n\t                'assets.spaces.garageUnderground': 'Stellplatz Tiefgarage',\n\t                'assets.spaces.roofTerrace': 'Dachterrasse',\n\t                'assets.spaces.outerSurface': 'Außenfläche',\n\t                'assets.spaces.warehouse': 'Lager',\n\t                'assets.spaces.handlesSurface': 'Handlesfläche',\n\t                'assets.spaces.gastronomy': 'Gastronomie',\n\t                'assets.spaces.archive': 'Archiv',\n\t                'assets.spaces.technicalRoom': 'Technikraum',\n\t                'assets.spaces.flat': 'Wohnung',\n\t                'assets.spaces.retail': 'Handel',\n\t                'assets.spaces.number': 'Einheitnummer',\n\t                'assets.spaces.type': 'Type',\n\t                'assets.spaces.floor': 'Etagennummer',\n\t                'assets.spaces.assetobject': 'Gebäude',\n\t                'assets.spaces.rentableArea': 'Mietfläche',\n\t                'assets.spaces.marketingDescription': 'Marketing Beschreibung',\n\t                'assets.spaces.notes': '[DEU] Internal notes',\n\t                'assets.spaces.minAskingPrice': 'Mindestpreis',\n\t                'assets.spaces.maxAskingPrice': 'Höchstpreis',\n\t                'assets.spaces.placeholder.number': 'Geben Sie die Einheitnummer hier ein',\n\t                'assets.spaces.placeholder.rentableArea': 'Geben Sie den Mietflächenwert hier ein',\n\t                'assets.spaces.placeholder.marketingDescription': 'Geben Sie die Marketingbeschreibung hier ein',\n\t                'assets.spaces.placeholder.notes': 'Interne Notizen',\n\t                'assets.spaces.placeholder.minAskingPrice': 'Geben Sie den Mindespreis ein',\n\t                'assets.spaces.placeholder.maxAskingPrice': 'Geben Sie den Höchstpreis ein',\n\t                'assets.spaces.saving': 'Speichern',\n\t                'assets.spaces.save': 'Speichern',\n\t                'assets.spaces.cancel': 'Abbrechen',\n\t                'assets.spaces.add': 'Fläche',\n\t                'assets.spaces.deleted': 'Fläche wurde erfolgreich gelöscht',\n\t                'assets.spaces.created': 'Fläche wurde erfolgreich kreiert',\n\t                'assets.spaces.updated': 'Fläche wurde erfolgreich aktualisiert',\n\t                'assets.spaces.delete.title': 'Sie werden diese Fläche löschen. Diese Fläche wird nicht mehr in Tower360 ersichtlich werden.',\n\t                'assets.spaces.delete.confirmButton': 'Ja, löschen Sie die Fläche!',\n\t                'assets.spaces.validation.maxAskingPrice': 'Der höchstpreis muss grösser als der Mindestpreis sein',\n\t                'assets.spaces.availability': '[DEU] Availability',\n\t                'assets.spaces.asking_price': '[DEU] Asking Price',\n\t                'assets.spaces.tenant_name': '[DEU] Tenant Name',\n\t                'assets.spaces.in_place_rent': '[DEU] In-Place Rent',\n\t                'assets.spaces.net_rent': '[DEU] Net Rent',\n\t                'assets.spaces.vat': '[DEU] Vat',\n\t                'assets.spaces.additional_cost': '[DEU] Additional cost',\n\t                'assets.spaces.total_rent': '[DEU] Total rent',\n\t                'assets.spaces.status': '[DEU] Status',\n\t                'assets.spaces.lease_start_date': '[DEU] Contract Start Date',\n\t                'assets.spaces.lease_end_date': '[DEU] Contract End Date',\n\t                // spaces filter\n\t                'assets.spaces.filter.title': '[DEU] Filter',\n\t                'assets.spaces.filter.status.title': '[DEU] Filter units by current status or their availability in future',\n\t                'assets.spaces.filter.extra': '[DEU] Extra filters',\n\t                'assets.spaces.filter.favorites': '[DEU] Favorites',\n\t                'assets.spaces.filter.empty': '[DEU] Empty response',\n\t                'assets.spaces.filter.unit': '[DEU] Unit',\n\t                'assets.spaces.filter.tower': '[DEU] Tower',\n\t                'assets.spaces.filter.towers': '[DEU] Towers',\n\t                'assets.spaces.filter.floor': '[DEU] Floor',\n\t                'assets.spaces.filter.all': 'All',\n\t                'assets.spaces.filter.in_1_month': 'in 1 month',\n\t                'assets.spaces.filter.in_3_month': 'in 3 month',\n\t                'assets.spaces.filter.in_6_month': 'in 6 month',\n\t                'assets.spaces.filter.in_1_year': 'in 1 year',\n\t                'assets.spaces.filter.custom_dates': 'Custom dates',\n\t                'assets.spaces.filter.floor_from': '[DEU] Floor from',\n\t                'assets.spaces.filter.floor_to': '[DEU] Floor to',\n\t                'assets.spaces.filter.rentable_area': '[DEU] Rentable Area',\n\t                'assets.spaces.filter.rentable_area_from': '[DEU] Rentable Area from',\n\t                'assets.spaces.filter.rentable_area_to': '[DEU] Rentable Area to',\n\t                'assets.spaces.filter.type': '[DEU] Type',\n\t                'assets.spaces.filter.asking_price': '[DEU] Asking Price',\n\t                'assets.spaces.filter.asking_price_from': '[DEU] Asking Price from',\n\t                'assets.spaces.filter.towers.placeholder': 'Select or search a tower in the list...',\n\t                'assets.spaces.filter.asking_price_to': '[DEU] Asking Price to',\n\t                'assets.spaces.filter.status': '[DEU] Status',\n\t                'assets.spaces.filter.availability': '[DEU] Availability',\n\t                'assets.spaces.filter.available_from': '[DEU] Available from',\n\t                'assets.spaces.filter.occupied': '[DEU] Occupied',\n\t                'assets.spaces.filter.vacant': '[DEU] Vacant',\n\t                'assets.spaces.filter.immediately': '[DEU] Immediately',\n\t                'assets.spaces.filter.in_place_rent': '[DEU] In-Place Rent',\n\t                'assets.spaces.filter.apply': '[DEU] Apply',\n\t                'assets.spaces.filter.cancel': '[DEU] Cancel',\n\t                'assets.spaces.filter.in_place_rent_from': 'In-Place Rent from',\n\t                'assets.spaces.filter.in_place_rent_to': 'In-Place Rent to',\n\t                'assets.spaces.filter.from': 'From',\n\t                'assets.spaces.filter.to': 'To',\n\t\n\t                'assets.tenants.title': 'Tenants',\n\t                'assets.tenants.name': 'Tenant name',\n\t                'assets.tenants.type': 'Type',\n\t                'assets.tenants.contract_number': 'Contract No',\n\t                'assets.tenants.total_area': 'Total area',\n\t                'assets.tenants.units': 'Units Occupied',\n\t                'assets.tenants.towers': 'Tower(s)',\n\t                'assets.tenants.floor': 'Floor',\n\t                'assets.tenants.area_in_unit': 'Area in unit',\n\t                'assets.tenants.in_place_rent': 'In-Place Rent',\n\t                'assets.tenants.net_rent': 'Net Rent',\n\t                'assets.tenants.vat': 'Vat',\n\t                'assets.tenants.additional_cost': 'Additional cost',\n\t                'assets.tenants.total_rent': 'Total rent',\n\t                'assets.tenants.status': 'Status',\n\t                'assets.tenants.lease_start_date': 'Contract Start Date',\n\t                'assets.tenants.lease_end_date': 'Contract End Date',\n\t                // tenants filter\n\t                'assets.tenants.filter.title': 'Filter',\n\t                'assets.tenants.filter.in_place': 'In place',\n\t                'assets.tenants.filter.expired': 'Expired',\n\t                'assets.tenants.filter.within_1_month': 'Within 1 month',\n\t                'assets.tenants.filter.within_3_month': 'Within 3 month',\n\t                'assets.tenants.filter.within_6_month': 'Within 6 month',\n\t                'assets.tenants.filter.within_1_year': 'Within 1 year',\n\t                'assets.tenants.filter.custom_dates': 'Custom dates',\n\t                'assets.tenants.filter.quick.title': 'Quick filters',\n\t                'assets.tenants.filter.extra': 'Extra filters',\n\t                'assets.tenants.filter.favorites': 'Favorites',\n\t                'assets.tenants.filter.empty': 'Empty response',\n\t                'assets.tenants.filter.unit': 'Unit',\n\t                'assets.tenants.filter.tower': 'Tower',\n\t                'assets.tenants.filter.towers': 'Towers',\n\t                'assets.tenants.filter.towers.placeholder': 'Select or search a tower in the list...',\n\t                'assets.tenants.filter.industry': 'Industry',\n\t                'assets.tenants.filter.industry.placeholder': 'Select or search a industry in the list...',\n\t                'assets.tenants.filter.lease_date': 'Contract start dates range',\n\t                'assets.tenants.filter.lease_start_date': 'Contract Start Date from',\n\t                'assets.tenants.filter.lease_end_date': 'Contract Start Date to',\n\t                'assets.tenants.filter.tenant_name': 'Tenant Name',\n\t                'assets.tenants.filter.size': 'Size',\n\t                'assets.tenants.filter.total_rent': 'Total rent',\n\t                'assets.tenants.filter.type': 'Unit Type',\n\t                'assets.tenants.filter.rentable_area': 'Rentable Area',\n\t                'assets.tenants.filter.rentable_area_from': 'Rentable Area from',\n\t                'assets.tenants.filter.rentable_area_to': 'Rentable Area to',\n\t                'assets.tenants.filter.rent': 'Rent',\n\t                'assets.tenants.filter.from': 'From',\n\t                'assets.tenants.filter.to': 'To',\n\t                'assets.tenants.filter.this_month': 'This Month',\n\t                'assets.tenants.filter.last_month': 'Last Month',\n\t                'assets.tenants.filter.this_year': 'This Year',\n\t                'assets.tenants.filter.last_year': 'Last Year',\n\t                'assets.tenants.filter.datepicker.clear': 'Clear',\n\t                'assets.tenants.filter.apply': 'Apply',\n\t                'assets.tenants.filter.cancel': 'Cancel',\n\t\n\t                'assets.gallery.header': 'Konfiguriere',\n\t                'assets.gallery.title': 'Bild',\n\t                'assets.gallery.add': 'Bild hinzufügen',\n\t                'assets.gallery.main': 'Hauptbereicht',\n\t                'assets.gallery.message.added': 'Objekt Bild wurde erfolgreich hinzugefügt',\n\t                'assets.gallery.message.deleted': 'Objekt Bild wurde erfolgreich gelöscht',\n\t                'assets.broker': 'Asset Manager',\n\t                'assets.broker.help': 'Selektionieren Sie den Asset Manager der das Asset verwaltet',\n\t                'assets.notes': 'Interne Notizen',\n\t                'assets.notes.errorLength': 'Notizen können nicht länger als  500 Charaktäre sein',\n\t                'assets.description': 'Marketing Beschreibung:',\n\t                'assets.message.archived': 'Objekt wurde erfolgreich archiviert',\n\t                'assets.message.activated': 'Objekt wurde erfolgreich aktiviert',\n\t                'assets.message.created': 'Objekt wurde erfolgreich kreiert',\n\t                'assets.message.updated': 'Objekt wurde erfolgreich aktualisiert',\n\t                'assets.info': 'Objekt Information',\n\t                'assets.info.general': 'Generelle Information',\n\t                'assets.info.images': 'Bilder',\n\t                'assets.placeholder.broker': 'Selektioniere Broker',\n\t                'assets.placeholder.name': 'Name hier eintragen',\n\t                'assets.placeholder.country': 'Land auswählen',\n\t                'assets.placeholder.city': 'Bsp. Hamburg',\n\t                'assets.placeholder.street': 'Bsp. Shönestrasse',\n\t                'assets.placeholder.building': 'Bsp. 26A',\n\t                'assets.placeholder.brokerDatabaseRecordId': 'Bsp. BLD-123',\n\t                'assets.placeholder.notes': 'Bsp. Interne Notizen',\n\t                'assets.placeholder.description': 'Texteingabe für Marketing Materialien',\n\t                'assets.save': 'Speichern',\n\t                'assets.cancel': 'Abbrechen',\n\t                'assets.saving': 'Vorgang wird gespeichert',\n\t                'assets.archive': 'Objekt archivieren',\n\t                'assets.archive.title': 'Sie werden das Objekt archivieren',\n\t                'assets.archive.confirmButton': 'Ja, archivieren Sie bitte',\n\t                'assets.archived': 'Der Vorgang wurde gespeichert',\n\t                'assets.activate': 'Objekt archivieren',\n\t                'assets.activate.title': 'Sie werden das Objekt archivieren.',\n\t                'assets.activate.confirmButton': 'Ja, archivieren Sie bitte!',\n\t                'assets.available.space': 'Vorhandene Objekte',\n\t                'assets.occupancy': 'Belegungszustand',\n\t                'assets.total.rentable': 'Total Rentable',\n\t\n\t                'assets.objects.title': 'Objekt',\n\t                'assets.objects.name': 'Name',\n\t                'assets.objects.isDisplayOnStackingPlan': 'Auf dem Belegungsplan zeigen',\n\t                'assets.objects.add': 'Objekt',\n\t                'assets.objects.message.deleted': 'Gebäude wurde erfolgreich gelöscht',\n\t                'assets.objects.message.created': 'Gebäude wurde erfolgreich kreiert',\n\t                'assets.objects.message.updated': 'Gebäude wurde erfolgreich aktualisiert',\n\t                'assets.objects.delete.title': 'Sie werden das Gebäude zusammen mit allen Etagen löschen. Das Objekt wird nach diesem Vorgang nicht mehr in Tower360 existieren.',\n\t                'assets.objects.delete.confirmButton': 'Ja, löschen Sie es!',\n\t                'assets.objects.placeholder.name': 'Name eingeben',\n\t                'assets.objects.create.name': 'Name:',\n\t                'assets.objects.save': 'Speichern',\n\t                'assets.objects.cancel': 'Abbrechen',\n\t                'assets.objects.saving': 'Speichern',\n\t                'assets.objects.create.title': 'Objekt',\n\t                'assets.objects.create.isDisplayOnStackingPlan': 'Auf dem Belegungsplan zeigen',\n\t                'assets.objects.edit.title': 'Objekt',\n\t                'assets.objects.address': 'Adresse',\n\t\n\t                'assets.validation.countryRequired': 'Land erforderlich',\n\t                'assets.validation.cityRequired': 'Stadt benötigt',\n\t                'assets.validation.streetRequired': 'Straße erforderlich',\n\t                'assets.validation.buildingRequired': 'Gebäude erforderlich',\n\t\n\t                'clients.new': 'Mieter',\n\t                'clients.title': 'Mieter',\n\t                'clients.name': 'öffentlicher Name',\n\t                'clients.shortName': 'Kurzer Name',\n\t                'clients.shortName.formLabel': 'Kurzer Name',\n\t                'clients.industry': 'Industrie',\n\t                'clients.address': 'Adresse',\n\t                'clients.country': 'Land',\n\t                'clients.info': 'Mieterinformationen',\n\t                'clients.info.general': 'Generelle Informationen',\n\t                'clients.info.representatives': 'Kontakte',\n\t                'clients.user': 'Benutzer',\n\t                'clients.notes': 'Interne Notizen',\n\t                'clients.state': 'Staat',\n\t                'clients.placeholder.name': 'Name eingeben',\n\t                'clients.placeholder.shortName': 'Kurzname eingeben',\n\t                'clients.placeholder.notes': 'Notizen eingeben',\n\t                'clients.placeholder.description': 'Beschreibung eingeben',\n\t                'clients.save': 'Speichern',\n\t                'clients.saving': 'Vorgang wird gespeichert',\n\t                'clients.cancel': 'Abbrechen',\n\t                'clients.message.archived': 'Mieter wurde erfolgreich archiviert',\n\t                'clients.message.created': 'Mieter wurde erfolgreich kreiert',\n\t                'clients.message.updated': 'Mieter wurde erfolgreich aktualisiert',\n\t                'clients.view.title': 'Mieter',\n\t                'clients.view.notes': 'Notizen',\n\t                'clients.archive.title': 'Sie werden den Mieter archivieren',\n\t                'clients.archive.confirmButton': 'Ja, archivieren Sie den Mieter',\n\t                'clients.archived': 'Mieter wurde archiviert',\n\t                'clients.activate': 'Mieter archivieren',\n\t                'clients.activate.title': 'Sie werden den Mieter aktivieren.',\n\t                'clients.activate.confirmButton': 'Ja, aktivieren Sie den Mieter!',\n\t                'clients.edit': 'Editieren',\n\t                'clients.edit.title': 'Mieter editieren',\n\t                'clients.create.title': 'Mieter kreieren',\n\t\n\t                'clients.representatives.new': 'Vertrag',\n\t                'clients.representatives.title': 'Verträge',\n\t                'clients.representatives.name': 'Name',\n\t                'clients.representatives.email': 'Email',\n\t                'clients.representatives.phone': 'Telephonnummer',\n\t                'clients.representatives.position': 'Position',\n\t\n\t                'clients.representatives.message.deleted': 'Kontakt wurde erfolgreich gelöscht',\n\t                'clients.representatives.message.created': 'Kontakt wurde erfolgreich kreiert',\n\t                'clients.representatives.message.updated': 'Kontakt wurde erfolgreich aktualisiert',\n\t\n\t                'industry.technology': 'Technologie',\n\t                'industry.media': 'Media/Entertainment',\n\t                'industry.education': 'Ausbildung',\n\t                'industry.trade': 'Handel/Energie',\n\t                'industry.government': 'Staat/NPO',\n\t                'industry.healthcare': 'Gesundheit',\n\t                'industry.logistics': 'Logistik',\n\t                'industry.consulting': 'Beratung',\n\t                'industry.retail': 'Einzelhandel',\n\t                'industry.telco': 'Telko',\n\t                'industry.food': 'Lebensmittel',\n\t                'industry.finance': 'Finanz',\n\t                'industry.residential': 'Wohn',\n\t                'industry.travel': 'Reise',\n\t                'industry.wellness': 'Wellness',\n\t                'industry.hr': 'Personalwesen',\n\t                'industry.real-estate': 'Immobilien',\n\t                'industry.industrials': 'Industrie',\n\t\n\t                // public\n\t                'login.email': 'Email',\n\t                'login.password': 'Kennwort',\n\t                'login.placeholder.email': 'Geben Sie Ihre E-Mail-Adresse ein',\n\t                'login.placeholder.password': 'Geben Sie Ihr Kennwort ein',\n\t                'login.login': 'Einlogen',\n\t                'login.automatic.signout': 'Sie wurden aufgrund längerer Inaktivität automatisch vom System abgemeldet.',\n\t\n\t                // Stacking plan\n\t                'stacking-plan.title': 'Belegungsplan',\n\t                'stacking-plan.empty': 'Es gibt kein Belegungsplan für dieses Objekt',\n\t                'stacking-plan.space.details': 'Flächenangaben',\n\t                'stacking-plan.space.options': 'Optionen',\n\t                'stacking-plan.space.deals': 'Kundengesuche',\n\t                'stacking-plan.view.actual': 'Tatsächlich',\n\t                'stacking-plan.view.normalized': 'Normalisiert',\n\t                'stacking-plan.legend.vacant': 'Leerstand',\n\t                'stacking-plan.legend.lease.expiration': 'Vertrag Ende',\n\t                'stacking-plan.expires': 'VE',\n\t                'stacking-plan.expires.2': 'VE',\n\t                'stacking-plan.unit': 'Fläche',\n\t                'stacking-plan.nospaces': 'Keine Fläche',\n\t                'stacking.plan.details.lease.start': 'Vetrag Beginn',\n\t                'stacking.plan.details.lease.end': 'VB',\n\t                'stacking.plan.details.cost.totalmonth': 'Gesamt brutto',\n\t                'stacking.plan.details.cost.netrent': 'Nettomiete mtl.',\n\t                'stacking.plan.details.cost.additional': 'Neben- kosten',\n\t                'stacking.plan.details.cost.other': 'Sonstige kosten',\n\t                'stacking.plan.details.cost.vat': 'MWst.',\n\t\n\t                //registration\n\t                'registration.username': 'Benutzername',\n\t                'registration.password': 'Kennwort',\n\t                'registration.confirmPassword': 'Kennwort wiederholen',\n\t                'registration.displayName': 'Anzeigename',\n\t                'registration.submit': 'Registrieren',\n\t                'registration.cancel': 'Abbrechen',\n\t                'registration.saving': 'Bearbeiten',\n\t\n\t                //address\n\t                'address.autoComplete': 'Versucht Adresse zu finden:',\n\t                'address.manually': 'Gebe manuel ein:',\n\t                'address.streetAddress': 'Strassen addresse:',\n\t                'address.postCode': 'Postleitzahl:',\n\t                'address.country': 'Land:',\n\t                'address.city': 'Stadt:',\n\t                'address.street': 'Strasse:',\n\t                'address.placeholder.country': 'Land auswählen',\n\t                'address.placeholder.city': 'Bsp. München',\n\t                'address.placeholder.street': 'Bsp.  Reeperbahn',\n\t                'address.placeholder.streetAddress': 'Bsp. 25',\n\t                'address.placeholder.postCode': 'Bsp. 10117',\n\t                'address.validation.countryRequired': 'Land ist erforderlich'\n\t        };\n\t\n\t        var result = messages[messageId];\n\t\n\t        if (!result) {\n\t                return '<<<<Missing ' + messageId + ' >>>>';\n\t        }\n\t        return result;\n\t}\n\n/***/ },\n/* 673 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.updateLocale = updateLocale;\n\tvar LocaleId = exports.LocaleId = 1;\n\t\n\tfunction updateLocale(localeId) {\n\t    exports.LocaleId = LocaleId = localeId;\n\t}\n\n/***/ },\n/* 674 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = activityMonitor;\n\tactivityMonitor.$inject = [\"$state\", \"ActivityMonitor\"];\n\t/*@ngInject*/\n\tfunction activityMonitor($state, ActivityMonitor) {\n\t    ActivityMonitor.options.inactive = 30 * 60; //30 miniutes\n\t}\n\n/***/ },\n/* 675 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(190);\n\t\n\tvar _authInterceptorService = __webpack_require__(676);\n\t\n\tvar _authInterceptorService2 = _interopRequireDefault(_authInterceptorService);\n\t\n\tvar _configurationService = __webpack_require__(677);\n\t\n\tvar _configurationService2 = _interopRequireDefault(_configurationService);\n\t\n\tvar _dialog = __webpack_require__(678);\n\t\n\tvar _dialog2 = _interopRequireDefault(_dialog);\n\t\n\tvar _notificationService = __webpack_require__(679);\n\t\n\tvar _notificationService2 = _interopRequireDefault(_notificationService);\n\t\n\tvar _securityService = __webpack_require__(680);\n\t\n\tvar _securityService2 = _interopRequireDefault(_securityService);\n\t\n\tvar _image = __webpack_require__(681);\n\t\n\tvar _image2 = _interopRequireDefault(_image);\n\t\n\tvar _file = __webpack_require__(682);\n\t\n\tvar _file2 = _interopRequireDefault(_file);\n\t\n\tvar _utils = __webpack_require__(683);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _compare = __webpack_require__(684);\n\t\n\tvar _compare2 = _interopRequireDefault(_compare);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.services', ['toaster']).factory('AuthInterceptorService', ['$q', '$location', 'localStorageService', function ($q, location, localStorageService) {\n\t  return new _authInterceptorService2.default($q, location, localStorageService);\n\t}]).service('ConfigurationService', _configurationService2.default).service('DialogService', _dialog2.default).service('NotificationService', _notificationService2.default).service('SecurityService', _securityService2.default).service('ImageService', _image2.default).service('FileService', _file2.default).service('UtilsService', _utils2.default).service('CompareObjectService', _compare2.default);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 676 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AuthInterceptorService =\n\t/*@ngInject*/\n\tfunction AuthInterceptorService($q, $location, localStorageService) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, AuthInterceptorService);\n\t\n\t    this.$q = $q;\n\t    this.$location = $location;\n\t    this.localStorageService = localStorageService;\n\t\n\t    this.request = function (config) {\n\t        if (config.url.includes('/api/')) {\n\t            var token = _this.localStorageService.get('authenticationData');\n\t\n\t            if (token != null && token.access_token) {\n\t                config.headers.Authorization = 'Bearer ' + token.access_token;\n\t            }\n\t        }\n\t\n\t        return config;\n\t    };\n\t\n\t    this.requestError = function (rejection) {\n\t        return _this.$q.reject(rejection);\n\t    };\n\t\n\t    this.response = function (response) {\n\t        if (response.status == \"401\") {\n\t            _this.localStorageService.remove('authenticationData');\n\t            if (window.location.pathname != '/login') {\n\t                window.location.href = \"/login\";\n\t            }\n\t        }\n\t        //the same response/modified/or a new one need to be returned.  \n\t        return response;\n\t    };\n\t\n\t    this.responseError = function (rejection) {\n\t        if (rejection.status == \"401\") {\n\t            _this.localStorageService.remove('authenticationData');\n\t            if (window.location.pathname != '/login') {\n\t                window.location.href = \"/login\";\n\t            }\n\t        }\n\t        return _this.$q.reject(rejection);\n\t    };\n\t};\n\t\n\tAuthInterceptorService.$inject = ['$q', '$location', 'localStorageService'];\n\texports.default = AuthInterceptorService;\n\n/***/ },\n/* 677 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ConfigurationService = function () {\n\t  function ConfigurationService() {\n\t    _classCallCheck(this, ConfigurationService);\n\t  }\n\t\n\t  _createClass(ConfigurationService, [{\n\t    key: \"getApiBaseUrl\",\n\t    value: function getApiBaseUrl() {\n\t      // Updated during build\n\t      return (\"/\");\n\t    }\n\t  }, {\n\t    key: \"getClientId\",\n\t    value: function getClientId() {\n\t      return \"F003FEBA-3CB3-4457-B115-DA05F21E6943\";\n\t    }\n\t  }]);\n\t\n\t  return ConfigurationService;\n\t}();\n\t\n\texports.default = ConfigurationService;\n\n/***/ },\n/* 678 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _dialog = __webpack_require__(525);\n\t\n\tvar _dialog2 = _interopRequireDefault(_dialog);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DialogService = function () {\n\t    function DialogService() {\n\t        _classCallCheck(this, DialogService);\n\t    }\n\t\n\t    _createClass(DialogService, [{\n\t        key: 'confirmation',\n\t        value: function confirmation(msg, confirmAction) {\n\t            var result = _dialog2.default.confirm(msg, 'Please confirm');\n\t            result.done(function (dialogResult) {\n\t                if (dialogResult) {\n\t                    confirmAction();\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return DialogService;\n\t}();\n\t\n\texports.default = DialogService;\n\n/***/ },\n/* 679 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NotificationService = function () {\n\t  NotificationService.$inject = ['toaster'];\n\t\n\t  /*@ngInject*/\n\t  function NotificationService(toaster) {\n\t    _classCallCheck(this, NotificationService);\n\t\n\t    this.toaster = toaster;\n\t  }\n\t\n\t  _createClass(NotificationService, [{\n\t    key: 'info',\n\t    value: function info(text) {\n\t      this.toaster.pop({\n\t        type: 'info',\n\t        body: text,\n\t        timeout: 3000\n\t      });\n\t    }\n\t  }, {\n\t    key: 'warning',\n\t    value: function warning(text) {\n\t      this.toaster.pop({\n\t        type: 'warning',\n\t        body: text,\n\t        timeout: 5000\n\t      });\n\t    }\n\t  }, {\n\t    key: 'error',\n\t    value: function error(text) {\n\t      this.toaster.pop({\n\t        type: 'error',\n\t        body: text,\n\t        timeout: 10000\n\t      });\n\t    }\n\t  }, {\n\t    key: 'success',\n\t    value: function success(text) {\n\t      this.toaster.pop({\n\t        type: 'success',\n\t        body: text,\n\t        timeout: 3000,\n\t        'position-class': 'toast-bottom-center'\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return NotificationService;\n\t}();\n\t\n\texports.default = NotificationService;\n\n/***/ },\n/* 680 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SecurityService = function () {\n\t  SecurityService.$inject = ['$http', '$q', '$state', 'NotificationService', 'ConfigurationService', 'localStorageService', 'ActivityMonitor', 'Role'];\n\t\n\t  /*@ngInject*/\n\t  function SecurityService($http, $q, $state, NotificationService, ConfigurationService, localStorageService, ActivityMonitor, Role) {\n\t    _classCallCheck(this, SecurityService);\n\t\n\t    this.$http = $http;\n\t    this.$q = $q;\n\t    this.$state = $state;\n\t    this.notificationService = NotificationService;\n\t    this.configurationService = ConfigurationService;\n\t    this.localStorageService = localStorageService;\n\t    this.ActivityMonitor = ActivityMonitor;\n\t    this.Role = Role;\n\t\n\t    this.authentication = new Authentication();\n\t    this.activities = null;\n\t    this.userInfo = null;\n\t  }\n\t\n\t  _createClass(SecurityService, [{\n\t    key: 'fillAuthData',\n\t    value: function fillAuthData() {\n\t      var authData = this.localStorageService.get('authenticationData');\n\t      if (authData) {\n\t        this.authentication.set(authData.userName);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'signOut',\n\t    value: function signOut() {\n\t      this.localStorageService.remove('authenticationData');\n\t      this.authentication.clear();\n\t      this.reset();\n\t\n\t      this.ActivityMonitor.off('inactive');\n\t    }\n\t  }, {\n\t    key: 'signIn',\n\t    value: function signIn(userName, password) {\n\t      var _this = this;\n\t\n\t      var self = this;\n\t\n\t      var data = \"grant_type=password&username=\" + userName + \"&password=\" + password + \"&client_id=\" + this.configurationService.getClientId();\n\t\n\t      var deferred = this.$q.defer();\n\t\n\t      this.$http.post(this.configurationService.getApiBaseUrl() + 'api/token', data, {\n\t        headers: {\n\t          'Content-Type': 'application/x-www-form-urlencoded'\n\t        }\n\t      }).then(function (response) {\n\t\n\t        _this.localStorageService.set('authenticationData', {\n\t          access_token: response.data.access_token,\n\t          userName: userName\n\t        });\n\t\n\t        _this.authentication.set(userName);\n\t\n\t        self.ActivityMonitor.on('inactive', function () {\n\t          self.signOut();\n\t          self.$state.go('login', { automatic: true }, { reload: true });\n\t        });\n\t\n\t        deferred.resolve(response);\n\t      }, function (err, status) {\n\t        _this.signOut();\n\t        deferred.reject(err, status);\n\t      });\n\t\n\t      return deferred.promise;\n\t    }\n\t  }, {\n\t    key: 'canDo',\n\t    value: function canDo(activityId, failedState, notLoggedInState) {\n\t      var _this2 = this;\n\t\n\t      var deferred = this.$q.defer();\n\t\n\t      this.getActivities().then(function (data) {\n\t        if (data.indexOf(activityId.toUpperCase()) >= 0) {\n\t          deferred.resolve(true);\n\t        } else {\n\t          if (failedState && notLoggedInState) {\n\t            if (data.length > 0) {\n\t              // means authenticated\n\t              _this2.$state.go(failedState);\n\t            } else {\n\t              _this2.$state.go(notLoggedInState);\n\t            }\n\t          } else {\n\t            deferred.reject('Forbidden');\n\t          }\n\t        }\n\t      });\n\t\n\t      return deferred.promise;\n\t    }\n\t  }, {\n\t    key: 'getActivities',\n\t    value: function getActivities() {\n\t      var _this3 = this;\n\t\n\t      var deferred = this.$q.defer();\n\t      var promise = deferred.promise;\n\t\n\t      if (this.activities != null) {\n\t        deferred.resolve(this.activities);\n\t      } else {\n\t        this.$http({\n\t          method: 'GET', url: this.configurationService.getApiBaseUrl() + 'api/account/activities'\n\t          // headers: {\n\t          //   'Authorization': 'Bearer ' + this.getToken()\n\t          // }\n\t        }).then(function (result) {\n\t          _this3.activities = result.data;\n\t          deferred.resolve(_this3.activities);\n\t        });\n\t      }\n\t\n\t      return promise;\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.activities = null;\n\t      this.userInfo = null;\n\t    }\n\t  }, {\n\t    key: 'getToken',\n\t    value: function getToken() {\n\t      var authData = this.localStorageService.get('authenticationData');\n\t      if (authData == null) {\n\t        return null;\n\t      } else {\n\t        return authData.access_token;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getUserInfo',\n\t    value: function getUserInfo() {\n\t      var self = this;\n\t\n\t      var deferred = self.$q.defer();\n\t      var promise = deferred.promise;\n\t\n\t      if (self.userInfo !== null) {\n\t        deferred.resolve(self.userInfo);\n\t      } else {\n\t        self.$http.get(self.configurationService.getApiBaseUrl() + 'api/account/userinfo').then(function (result) {\n\t          self.Role.get({ id: result.data.roleId }, function (role) {\n\t            self.userInfo = new UserInfo(result.data.id, result.data.email, result.data.displayName, result.data.roleId, role.name, result.data.brokerId, result.data.state, result.data.localeId);\n\t            deferred.resolve(self.userInfo);\n\t          });\n\t        });\n\t      }\n\t\n\t      return promise;\n\t    }\n\t  }]);\n\t\n\t  return SecurityService;\n\t}();\n\t\n\texports.default = SecurityService;\n\t\n\tvar Authentication = function () {\n\t  function Authentication() {\n\t    _classCallCheck(this, Authentication);\n\t\n\t    this.authenticated = false;\n\t    this.username = null;\n\t  }\n\t\n\t  _createClass(Authentication, [{\n\t    key: 'set',\n\t    value: function set(userName) {\n\t      this.authenticated = true;\n\t      this.username = userName;\n\t    }\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.authenticated = false;\n\t      this.username = null;\n\t    }\n\t  }]);\n\t\n\t  return Authentication;\n\t}();\n\t\n\tvar UserInfo = function UserInfo(id, email, displayName, roleId, roleName, brokerId, state, localeId) {\n\t  _classCallCheck(this, UserInfo);\n\t\n\t  this.id = id;\n\t  this.email = email;\n\t  this.displayName = displayName;\n\t  this.roleId = roleId;\n\t  this.roleName = roleName;\n\t  this.brokerId = brokerId;\n\t  this.state = state;\n\t  this.localeId = localeId;\n\t};\n\n/***/ },\n/* 681 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ImageService = function () {\n\t    function ImageService() {\n\t        _classCallCheck(this, ImageService);\n\t    }\n\t\n\t    _createClass(ImageService, [{\n\t        key: \"resizeImage\",\n\t        value: function resizeImage(sourceImage, fileExt, width, height, postProcess) {\n\t            var outputImage = new Image();\n\t            outputImage.width = width;\n\t            outputImage.height = height;\n\t\n\t            var self = this;\n\t\n\t            sourceImage.onload = function () {\n\t                var canvas = document.createElement(\"canvas\");\n\t                var ctx = canvas.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvas.width, canvas.height);\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                ctx.drawImage(sourceImage, 0, 0, width, height);\n\t\n\t                outputImage.src = canvas.toDataURL(self.getMIMEType(fileExt), 0.92);\n\t\n\t                if (postProcess) {\n\t                    postProcess(outputImage.src);\n\t                }\n\t            };\n\t        }\n\t    }, {\n\t        key: \"getMIMEType\",\n\t        value: function getMIMEType(fileExt) {\n\t            if (fileExt == 'gif') return 'image/gif';\n\t\n\t            if (fileExt == 'png') return 'image/png';else return 'image/jpeg';\n\t        }\n\t    }, {\n\t        key: \"dataURItoBlob\",\n\t        value: function dataURItoBlob(dataURI) {\n\t            // convert base64/URLEncoded data component to raw binary data held in a string\n\t            var byteString;\n\t            if (dataURI.split(',')[0].indexOf('base64') >= 0) byteString = atob(dataURI.split(',')[1]);else byteString = unescape(dataURI.split(',')[1]);\n\t\n\t            // separate out the mime component\n\t            var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\t\n\t            // write the bytes of the string to a typed array\n\t            var ia = new Uint8Array(byteString.length);\n\t            for (var i = 0; i < byteString.length; i++) {\n\t                ia[i] = byteString.charCodeAt(i);\n\t            }\n\t\n\t            return new Blob([ia], { type: mimeString });\n\t        }\n\t    }]);\n\t\n\t    return ImageService;\n\t}();\n\t\n\texports.default = ImageService;\n\n/***/ },\n/* 682 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FileService = function () {\n\t    function FileService() {\n\t        _classCallCheck(this, FileService);\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(FileService, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.readSingleFile = function (file, readCompleted) {\n\t                var reader = new FileReader();\n\t                reader.onload = function (f) {\n\t                    return function (evt) {\n\t                        var uploadedFile = {\n\t                            filename: f.name,\n\t                            extension: f.name.split('.').pop().toLowerCase(), //extension: f.name.match(/\\.[0-9a-z]+$/i);\n\t                            size: f.size,\n\t                            data: evt.target.result\n\t                        };\n\t\n\t                        if (readCompleted) {\n\t                            readCompleted(uploadedFile);\n\t                        }\n\t                    };\n\t                }(file);\n\t                reader.readAsDataURL(file);\n\t            };\n\t        }\n\t    }, {\n\t        key: 'uploadFiles',\n\t        value: function uploadFiles(sourceFileArray, singleFileReadCallBack, readCompletedCallback) {\n\t\n\t            var self = this;\n\t\n\t            var filesCount = sourceFileArray.length;\n\t            var readedFilesCount = 0;\n\t\n\t            var destFileArray = [];\n\t\n\t            var readFile = function readFile(fileIndex) {\n\t                var file = sourceFileArray[fileIndex];\n\t                self.readSingleFile(file, function (e) {\n\t                    if (singleFileReadCallBack) singleFileReadCallBack(e);\n\t\n\t                    destFileArray.push(e);\n\t                    readedFilesCount++;\n\t\n\t                    if (readedFilesCount < filesCount) {\n\t                        readFile(readedFilesCount);\n\t                    } else {\n\t                        if (readCompletedCallback) readCompletedCallback(destFileArray);\n\t                    }\n\t                });\n\t            };\n\t\n\t            if (filesCount > 0) readFile(0);\n\t        }\n\t    }]);\n\t\n\t    return FileService;\n\t}();\n\t\n\texports.default = FileService;\n\n/***/ },\n/* 683 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UtilsService = function () {\n\t    function UtilsService() {\n\t        _classCallCheck(this, UtilsService);\n\t    }\n\t\n\t    _createClass(UtilsService, [{\n\t        key: 'generateGuid',\n\t        value: function generateGuid() {\n\t            function s4() {\n\t                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t            }\n\t\n\t            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\t        }\n\t    }, {\n\t        key: 'generateAddress',\n\t        value: function generateAddress(data) {\n\t            var city = data.city,\n\t                street = data.street,\n\t                building = data.streetAddress;\n\t            return (city && city + ', ') + (street && street + ', ') + (building && '' + building) || '';\n\t        }\n\t    }, {\n\t        key: 'alignStatusLabelsLength',\n\t        value: function alignStatusLabelsLength(value) {\n\t            var integerPart = Math.floor(value);\n\t\n\t            if (integerPart < 10) {\n\t                return value.toFixed(2);\n\t            } else if (integerPart < 100) {\n\t                return value.toFixed(1);\n\t            } else {\n\t                return Math.round(value);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'formatBadgeValue',\n\t        value: function formatBadgeValue(value) {\n\t            if (value > 0 && value < 1000) {\n\t                value = this.alignStatusLabelsLength(value);\n\t            } else if (value >= 1000 && value < 1000000) {\n\t                value = this.alignStatusLabelsLength(value / 1000) + 'K';\n\t            } else if (value >= 1000000 && value < 1000000000) {\n\t                value = this.alignStatusLabelsLength(value / 1000000) + 'M';\n\t            } else if (value >= 1000000000) {\n\t                value = this.alignStatusLabelsLength(value / 1000000000) + 'B';\n\t            }\n\t            return value;\n\t        }\n\t    }]);\n\t\n\t    return UtilsService;\n\t}();\n\t\n\texports.default = UtilsService;\n\n/***/ },\n/* 684 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CompareObjectService = function () {\n\t    function CompareObjectService() {\n\t        _classCallCheck(this, CompareObjectService);\n\t    }\n\t\n\t    _createClass(CompareObjectService, [{\n\t        key: \"compareSimpleAssets\",\n\t        value: function compareSimpleAssets(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.state == obj2.state && obj1.name == obj2.name && obj1.countryId == obj2.countryId && obj1.city == obj2.city && obj1.street == obj2.street && obj1.building == obj2.building && obj1.brokerDatabaseRecordId == obj2.brokerDatabaseRecordId && obj1.description == obj2.description && obj1.notes == obj2.notes && obj1.floorCount == obj2.floorCount && obj1.brokerId == obj2.brokerId;\n\t        }\n\t    }, {\n\t        key: \"compareAssets\",\n\t        value: function compareAssets(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            var res = this.compareSimpleAssets(obj1, obj2);\n\t\n\t            if (res && obj1.images != undefined && obj2.images != undefined) {\n\t                if (obj1.images.length != obj2.images.length) return false;\n\t\n\t                for (var i = 0; i < obj1.images.length && res; i++) {\n\t                    res = this.compareImages(obj1.images[i], obj2.images[i]);\n\t                }\n\t            }\n\t\n\t            if (res && obj1.documents != undefined && obj2.documents != undefined) {\n\t                if (obj1.documents.length != obj2.documents.length) return false;\n\t\n\t                for (var i = 0; i < obj1.documents.length && res; i++) {\n\t                    res = this.compareDocuments(obj1.documents[i], obj2.documents[i]);\n\t                }\n\t            }\n\t\n\t            if (res && obj1.floors != undefined && obj2.floors != undefined) {\n\t                if (obj1.floors.length != obj2.floors.length) return false;\n\t\n\t                for (var i = 0; i < obj1.floors.length && res; i++) {\n\t                    res = this.compareFloors(obj1.floors[i], obj2.floors[i]);\n\t                }\n\t            }\n\t\n\t            if (res && obj1.spaces != undefined && obj2.spaces != undefined) {\n\t                if (obj1.spaces.length != obj2.spaces.length) return false;\n\t\n\t                for (var i = 0; i < obj1.spaces.length && res; i++) {\n\t                    res = this.compareSpaces(obj1.spaces[i], obj2.spaces[i]);\n\t                }\n\t            }\n\t\n\t            return res;\n\t        }\n\t    }, {\n\t        key: \"compareImages\",\n\t        value: function compareImages(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.assetId == obj2.assetId && obj1.filePath == obj2.filePath && obj1.order == obj2.order && obj1.originalFileName == obj2.originalFileName && obj1.isMain == obj2.isMain && obj1.contentType == obj2.contentType && obj1.imageFile == obj2.imageFile;\n\t        }\n\t    }, {\n\t        key: \"compareDocuments\",\n\t        value: function compareDocuments(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.assetId == obj2.assetId && obj1.filePath == obj2.filePath && obj1.originalFileName == obj2.originalFileName && obj1.contentType == obj2.contentType && obj1.documentFile == obj2.documentFile && obj1.notes == obj2.notes;\n\t        }\n\t    }, {\n\t        key: \"compareSimpleSpaces\",\n\t        value: function compareSimpleSpaces(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.assetId == obj2.assetId && obj1.floorId == obj2.floorId && obj1.brokerId == obj2.brokerId && obj1.number == obj2.number && obj1.type == obj2.type && obj1.rentableArea == obj2.rentableArea && obj1.state == obj2.state && obj1.marketingDescription == obj2.marketingDescription && obj1.notes == obj2.notes;\n\t        }\n\t    }, {\n\t        key: \"compareSpaces\",\n\t        value: function compareSpaces(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            var res = this.compareSimpleSpaces(obj1, obj2);\n\t\n\t            if (res && obj1.images != undefined && obj2.images != undefined) {\n\t                if (obj1.images.length != obj2.images.length) return false;\n\t\n\t                for (var i = 0; i < obj1.images.length && res; i++) {\n\t                    res = this.compareImages(obj1.images[i], obj2.images[i]);\n\t                }\n\t            }\n\t\n\t            if (res && obj1.documents != undefined && obj2.documents != undefined) {\n\t                if (obj1.documents.length != obj2.documents.length) return false;\n\t\n\t                for (var i = 0; i < obj1.documents.length && res; i++) {\n\t                    res = this.compareDocuments(obj1.documents[i], obj2.documents[i]);\n\t                }\n\t            }\n\t\n\t            return res;\n\t        }\n\t    }, {\n\t        key: \"compareSimpleFloors\",\n\t        value: function compareSimpleFloors(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.number == obj2.number && obj1.description == obj2.description && obj1.assetId == obj2.assetId && obj1.brokerId == obj2.brokerId;\n\t        }\n\t    }, {\n\t        key: \"compareFloors\",\n\t        value: function compareFloors(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            var res = this.compareSimpleFloors(obj1, obj2);\n\t\n\t            if (res && obj1.spaces != undefined && obj2.spaces != undefined) {\n\t                if (obj1.spaces.length != obj2.spaces.length) return false;\n\t\n\t                for (var i = 0; i < obj1.spaces.length && res; i++) {\n\t                    res = this.compareSpaces(obj1.spaces[i], obj2.spaces[i]);\n\t                }\n\t            }\n\t\n\t            return res;\n\t        }\n\t    }, {\n\t        key: \"compareClients\",\n\t        value: function compareClients(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            var res = this.compareSimpleClients(obj1, obj2);\n\t\n\t            if (res && obj1.representatives != undefined && obj2.representatives != undefined) {\n\t                if (obj1.representatives.length != obj2.representatives.length) return false;\n\t\n\t                for (var i = 0; i < obj1.representatives.length && res; i++) {\n\t                    res = this.compareRepresentatives(obj1.representatives[i], obj2.representatives[i]);\n\t                }\n\t            }\n\t\n\t            return res;\n\t        }\n\t    }, {\n\t        key: \"compareSimpleClients\",\n\t        value: function compareSimpleClients(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.name == obj2.name && obj1.state == obj2.state && obj1.countryId == obj2.countryId && obj1.city == obj2.city && obj1.street == obj2.street && obj1.building == obj2.building && obj1.notes == obj2.notes;\n\t        }\n\t    }, {\n\t        key: \"compareRepresentatives\",\n\t        value: function compareRepresentatives(obj1, obj2) {\n\t            if (obj1 == undefined || obj2 == undefined) return false;\n\t\n\t            return obj1.id == obj2.id && obj1.name == obj2.name && obj1.mobileNumber == obj2.mobileNumber && obj1.officeNumber == obj2.officeNumber && obj1.email == obj2.email;\n\t        }\n\t    }]);\n\t\n\t    return CompareObjectService;\n\t}();\n\t\n\texports.default = CompareObjectService;\n\n/***/ },\n/* 685 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _mainheader = __webpack_require__(686);\n\t\n\tvar _mainheader2 = _interopRequireDefault(_mainheader);\n\t\n\tvar _sidebar = __webpack_require__(689);\n\t\n\tvar _sidebar2 = _interopRequireDefault(_sidebar);\n\t\n\tvar _rightSidebar = __webpack_require__(692);\n\t\n\tvar _rightSidebar2 = _interopRequireDefault(_rightSidebar);\n\t\n\tvar _navigationCreateItems = __webpack_require__(695);\n\t\n\tvar _navigationCreateItems2 = _interopRequireDefault(_navigationCreateItems);\n\t\n\tvar _imagegallery = __webpack_require__(708);\n\t\n\tvar _imagegallery2 = _interopRequireDefault(_imagegallery);\n\t\n\tvar _imagecropper = __webpack_require__(719);\n\t\n\tvar _imagecropper2 = _interopRequireDefault(_imagecropper);\n\t\n\tvar _attachements = __webpack_require__(720);\n\t\n\tvar _attachements2 = _interopRequireDefault(_attachements);\n\t\n\t__webpack_require__(723);\n\t\n\tvar _breadcrumbpanel = __webpack_require__(725);\n\t\n\tvar _breadcrumbpanel2 = _interopRequireDefault(_breadcrumbpanel);\n\t\n\tvar _spaceDescription = __webpack_require__(728);\n\t\n\tvar _spaceDescription2 = _interopRequireDefault(_spaceDescription);\n\t\n\tvar _tenantDescription = __webpack_require__(731);\n\t\n\tvar _tenantDescription2 = _interopRequireDefault(_tenantDescription);\n\t\n\tvar _bodyBlocker = __webpack_require__(734);\n\t\n\tvar _bodyBlocker2 = _interopRequireDefault(_bodyBlocker);\n\t\n\tvar _usermenu = __webpack_require__(737);\n\t\n\tvar _usermenu2 = _interopRequireDefault(_usermenu);\n\t\n\tvar _actionmenu = __webpack_require__(740);\n\t\n\tvar _actionmenu2 = _interopRequireDefault(_actionmenu);\n\t\n\tvar _footer = __webpack_require__(743);\n\t\n\tvar _footer2 = _interopRequireDefault(_footer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.components', ['ngFileUpload']).component('mainheader', _mainheader2.default).component('sidebar', _sidebar2.default).component('rightSidebar', _rightSidebar2.default).component('navigationCreateItems', _navigationCreateItems2.default).component('imagegallery', _imagegallery2.default).component('imagecropper', _imagecropper2.default).component('attachements', _attachements2.default).component('breadcrumbPanel', _breadcrumbpanel2.default).component('spaceDescription', _spaceDescription2.default).component('tenantDescription', _tenantDescription2.default).component('bodyBlocker', _bodyBlocker2.default).component('userMenu', _usermenu2.default).component('actionMenu', _actionmenu2.default).component('footer', _footer2.default);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 686 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _mainheader = __webpack_require__(687);\n\t\n\tvar _mainheader2 = _interopRequireDefault(_mainheader);\n\t\n\tvar _mainheaderTemplate = __webpack_require__(688);\n\t\n\tvar _mainheaderTemplate2 = _interopRequireDefault(_mainheaderTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MainHeaderComponent = {\n\t  bindings: {},\n\t  controller: _mainheader2.default,\n\t  template: _mainheaderTemplate2.default,\n\t  Messages: _messages2.default\n\t}; // import template and controller from individual component directory\n\texports.default = MainHeaderComponent;\n\n/***/ },\n/* 687 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _app = __webpack_require__(673);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MainHeaderController = function () {\n\t    MainHeaderController.$inject = ['$scope', '$state', 'User', 'Broker', 'Locale', 'SecurityService', 'Activities'];\n\t\n\t    /*@ngInject*/\n\t    function MainHeaderController($scope, $state, User, Broker, Locale, SecurityService, Activities) {\n\t        _classCallCheck(this, MainHeaderController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.securityService = SecurityService;\n\t        this.activities = Activities;\n\t        this.Locale = Locale;\n\t        this.User = User;\n\t        this.Broker = Broker;\n\t        this.messages = _messages2.default;\n\t\n\t        this.loadUserInfo();\n\t        this.applyActivities();\n\t        this.init();\n\t    }\n\t\n\t    _createClass(MainHeaderController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.Locale.query({}, function (result) {\n\t                self.$scope.languages = result;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setLanguage',\n\t        value: function setLanguage(item) {\n\t            var self = this;\n\t\n\t            var currentLocaleId = _app.LocaleId;\n\t            if (currentLocaleId != item.id) {\n\t                self.updateUserLocale(this.userInfo.id, item.id);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'minimalize',\n\t        value: function minimalize() {\n\t            if ($(window).outerWidth() < 769) {\n\t                $(\"body\").toggleClass(\"show-sidebar\");\n\t            } else {\n\t                $(\"body\").toggleClass(\"hide-sidebar\");\n\t            }\n\t        }\n\t    }, {\n\t        key: 'signOut',\n\t        value: function signOut() {\n\t            this.securityService.signOut();\n\t            this.$state.go('login', null, { reload: true });\n\t        }\n\t    }, {\n\t        key: 'loadUserInfo',\n\t        value: function loadUserInfo() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.securityService.getUserInfo().then(function (result) {\n\t                self.userInfo = result;\n\t                if (result.roleId === 2) {\n\t                    _this.loadBrokerInfo();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'loadBrokerInfo',\n\t        value: function loadBrokerInfo() {\n\t            var _this2 = this;\n\t\n\t            this.Broker.get({ id: this.userInfo.brokerId }).$promise.then(function (result) {\n\t                _this2.brokerInfo = result;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateUserLocale',\n\t        value: function updateUserLocale(userId, localeId) {\n\t            var self = this;\n\t\n\t            self.userInfo.localeId = localeId;\n\t            self.User.update({ id: userId }, self.userInfo, function (result) {\n\t                self.$state.reload();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'applyActivities',\n\t        value: function applyActivities() {\n\t            var _this3 = this;\n\t\n\t            this.securityService.getActivities().then(function () {\n\t                _this3.securityService.canDo(_this3.activities.HomeView).then(function (result) {\n\t                    return _this3.homeAvailable = result;\n\t                }, function () {\n\t                    return _this3.homeAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.BrokersView).then(function (result) {\n\t                    return _this3.brokersAvailable = result;\n\t                }, function () {\n\t                    return _this3.brokersAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.UsersView).then(function (result) {\n\t                    return _this3.usersAvailable = result;\n\t                }, function () {\n\t                    return _this3.usersAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.AssetsManage).then(function (result) {\n\t                    return _this3.assetsAvailable = result;\n\t                }, function () {\n\t                    return _this3.assetsAvailable = false;\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return MainHeaderController;\n\t}();\n\t\n\texports.default = MainHeaderController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 688 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"header\\\">\\r\\n    <div id=\\\"logo\\\" class=\\\"navbar-header\\\">\\r\\n        <!--<a class=\\\"navbar-brand\\\" ui-sref=\\\"home\\\"><img src=\\\"img/header-logo.png\\\" alt=\\\"Tower 360 Logo\\\"></a>-->\\r\\n        <div ng-if=\\\"$ctrl.brokerInfo\\\" class=\\\"header-broker-name\\\">\\r\\n            {{ $ctrl.brokerInfo.name }}\\r\\n        </div>\\r\\n        <div ng-if=\\\"!$ctrl.brokerInfo && $ctrl.userInfo.roleId === 1\\\" class=\\\"header-broker-name\\\">\\r\\n            {{ $ctrl.messages('administrator') }}\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mobile-menu\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle mobile-menu-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mobile-collapse\\\">\\r\\n            <i class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"collapse mobile-navbar\\\" id=\\\"mobile-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li>\\r\\n                    <a ui-sref=\\\"#\\\">{{$ctrl.messages('mainheader.settings.account')}}</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a ng-click=\\\"$ctrl.signOut()\\\">{{$ctrl.messages('mainheader.signout')}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <nav role=\\\"navigation\\\">\\r\\n        <div class=\\\"header-link hide-menu\\\" ng-click=\\\"$ctrl.minimalize()\\\"><i class=\\\"fa fa-bars\\\"></i></div>\\r\\n\\r\\n        <div id=\\\"navbar\\\" class=\\\"navbar-inverse navbar-right\\\">\\r\\n            <user-menu user-info=\\\"$ctrl.userInfo\\\" broker-info=\\\"$ctrl.brokerInfo\\\"/>  \\r\\n            <action-menu user-info=\\\"$ctrl.userInfo\\\" broker-info=\\\"$ctrl.brokerInfo\\\"/>\\r\\n        </div>\\r\\n    </nav>\\r\\n</div>\\r\\n<script>\\r\\n    $(document).ready(function(){\\r\\n        $('.dropdown-submenu a.select-language').on(\\\"click\\\", function(e){\\r\\n            $(this).next('ul').toggle();\\r\\n            e.stopPropagation();\\r\\n            e.preventDefault();\\r\\n        });\\r\\n    });\\r\\n</script>\"\n\n/***/ },\n/* 689 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _sidebar = __webpack_require__(690);\n\t\n\tvar _sidebar2 = _interopRequireDefault(_sidebar);\n\t\n\tvar _sidebarTemplate = __webpack_require__(691);\n\t\n\tvar _sidebarTemplate2 = _interopRequireDefault(_sidebarTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SidebarComponent = {\n\t  bindings: {},\n\t  controller: _sidebar2.default,\n\t  template: _sidebarTemplate2.default\n\t};\n\t\n\texports.default = SidebarComponent;\n\n/***/ },\n/* 690 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Sidebar = function () {\n\t    Sidebar.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'SecurityService', 'UtilsService', 'Activities', 'Asset', 'Broker'];\n\t\n\t    /*@ngInject*/\n\t    function Sidebar($scope, $rootScope, $state, $stateParams, SecurityService, UtilsService, Activities, Asset, Broker) {\n\t        _classCallCheck(this, Sidebar);\n\t\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.$state = $state;\n\t        this.$stateParams = $stateParams;\n\t        this.securityService = SecurityService;\n\t        this.utils = UtilsService;\n\t        this.activities = Activities;\n\t        this.Asset = Asset;\n\t        this.Broker = Broker;\n\t        this.messages = _messages2.default;\n\t\n\t        this.loadUserInfo();\n\t        this.init();\n\t        this.applyActivities();\n\t    }\n\t\n\t    _createClass(Sidebar, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t            this.$rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n\t                if (toState.name != fromState.name) {\n\t                    self.resetSettings();\n\t                    self.updateMenu(toState, toParams);\n\t                    $('.nav li a').blur();\n\t                }\n\t            });\n\t\n\t            self.updateMenu(self.$state.current, self.$stateParams);\n\t        }\n\t    }, {\n\t        key: 'loadUserInfo',\n\t        value: function loadUserInfo() {\n\t            var _this = this;\n\t\n\t            this.securityService.getUserInfo().then(function (result) {\n\t                _this.userInfo = result;\n\t                if (result.roleId === 2) {\n\t                    _this.loadBrokerInfo();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'loadBrokerInfo',\n\t        value: function loadBrokerInfo() {\n\t            var _this2 = this;\n\t\n\t            this.Broker.get({ id: this.userInfo.brokerId }).$promise.then(function (result) {\n\t                _this2.brokerInfo = result;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'applyActivities',\n\t        value: function applyActivities() {\n\t            var _this3 = this;\n\t\n\t            this.securityService.getActivities().then(function () {\n\t                _this3.securityService.canDo(_this3.activities.HomeView).then(function (result) {\n\t                    return _this3.homeAvailable = result;\n\t                }, function () {\n\t                    return _this3.homeAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.BrokersView).then(function (result) {\n\t                    return _this3.brokersAvailable = result;\n\t                }, function () {\n\t                    return _this3.brokersAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.UsersView).then(function (result) {\n\t                    return _this3.usersAvailable = result;\n\t                }, function () {\n\t                    return _this3.usersAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.AssetsManage).then(function (result) {\n\t                    return _this3.assetsAvailable = result;\n\t                }, function () {\n\t                    return _this3.assetsAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.AssetsView).then(function (result) {\n\t                    return _this3.assetsViewAvailable = result;\n\t                }, function () {\n\t                    return _this3.assetsViewAvailable = false;\n\t                });\n\t                _this3.securityService.canDo(_this3.activities.ClientsManage).then(function (result) {\n\t                    return _this3.clientsAvailable = result;\n\t                }, function () {\n\t                    return _this3.clientsAvailable = false;\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateMenu',\n\t        value: function updateMenu(state, stateParams) {\n\t            var self = this;\n\t\n\t            self.assetsClientMenu = self.isAssetsClientMenu(state, stateParams);\n\t            self.globalClientMenu = !self.assetsClientMenu;\n\t        }\n\t    }, {\n\t        key: 'isActive',\n\t        value: function isActive(name) {\n\t            var states = [];\n\t            switch (name) {\n\t                case 'users':\n\t                    states = ['users', 'user'];\n\t                    break;\n\t                case 'brokers':\n\t                    states = ['brokers', 'broker'];\n\t                    break;\n\t                case 'assets':\n\t                    states = ['assets', 'edit-asset', 'asset-stats'];\n\t                    break;\n\t                case 'asset-stats-spaces':\n\t                    states = ['asset-stats-spaces'];\n\t                    break;\n\t                case 'asset-stats-tenants':\n\t                    states = ['asset-stats-tenants'];\n\t                    break;\n\t                case 'asset-stats-stacking-plan':\n\t                    states = ['asset-stats-stacking-plan'];\n\t                    break;\n\t                case 'clients':\n\t                    states = ['clients', 'create-client', 'edit-client'];\n\t                    break;\n\t            }\n\t\n\t            for (var i = 0, l = states.length; i < l; i++) {\n\t                if (this.$state.includes(states[i])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'resetSettings',\n\t        value: function resetSettings() {\n\t\n\t            //reset settings for asset        \n\t            //this.showAssetPanel = false;\n\t        }\n\t    }, {\n\t        key: 'isAssetsClientMenu',\n\t        value: function isAssetsClientMenu(state, stateParams) {\n\t            var _this4 = this;\n\t\n\t            var self = this;\n\t            if (state.name === 'asset-stats-spaces' || state.name === 'asset-stats-stacking-plan' || state.name === 'asset-stats-tenants') {\n\t                self.$scope.assetId = state.resolve.assetId[1](stateParams);\n\t                self.Asset.get({ id: this.$scope.assetId }).$promise.then(function (asset) {\n\t                    _this4.asset = asset;\n\t                    if (_this4.asset) {\n\t                        _this4.assetAddress = _this4.utils.generateAddress(_this4.asset);\n\t                        _this4.showAssetPanel = true;\n\t                    }\n\t                });\n\t                return true;\n\t            } else {\n\t                this.showAssetPanel = false;\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'signOut',\n\t        value: function signOut() {\n\t            this.securityService.signOut();\n\t            this.$state.go('login', null, { reload: true });\n\t        }\n\t    }]);\n\t\n\t    return Sidebar;\n\t}();\n\t\n\texports.default = Sidebar;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 691 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<ul class=\\\"nav nav-sidebar\\\">\\r\\n    <div class=\\\"breadcrumb-div\\\" ng-if=\\\"!$ctrl.showAssetPanel\\\"></div>\\r\\n    <div class=\\\"sidebar-asset-image-panel\\\" ng-if=\\\"$ctrl.showAssetPanel\\\">\\r\\n        <div class=\\\"sidebar-asset-image\\\">\\r\\n            <img draggable=\\\"false\\\" ng-src=\\\"{{($ctrl.asset.mainImageUrl ? $ctrl.asset.mainImageUrl: '../../img/building-placeholder.png')}}\\\"/>\\r\\n        </div>\\r\\n        <span class=\\\"sidebar-asset-title\\\">{{$ctrl.asset.name}}</span>\\r\\n        <span class=\\\"sidebar-asset-address\\\">{{$ctrl.assetAddress}}</span>\\r\\n    </div>\\r\\n    <li ng-show=\\\"$ctrl.brokersAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('brokers')}\\\">\\r\\n        <a ui-sref=\\\"brokers\\\">{{$ctrl.messages('sidebar.brokers')}}</a>\\r\\n    </li>\\r\\n    <li ng-show=\\\"$ctrl.usersAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('users')}\\\">\\r\\n        <a ui-sref=\\\"users\\\">{{$ctrl.messages('sidebar.users')}}</a>\\r\\n    </li>\\r\\n    <li ng-show=\\\"$ctrl.assetsAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('assets')}\\\">\\r\\n        <a ui-sref=\\\"assets\\\">{{$ctrl.messages('sidebar.assets')}}</a>\\r\\n    </li>\\r\\n    <div ng-show=\\\"$ctrl.globalClientMenu\\\">\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('assets')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats\\\">{{$ctrl.messages('sidebar.assets')}}</a>\\r\\n        </li>\\r\\n        <li ng-show=\\\"$ctrl.clientsAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('clients')}\\\">\\r\\n            <a ui-sref=\\\"clients\\\">{{$ctrl.messages('sidebar.clients')}}</a>\\r\\n        </li>\\r\\n    </div>\\r\\n    <div ng-show=\\\"$ctrl.assetsClientMenu\\\">\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('asset-stats-spaces')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats-spaces({id: assetId})\\\">{{$ctrl.messages('sidebar.spaces')}}</a>\\r\\n        </li>\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('asset-stats-tenants')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats-tenants({id: assetId})\\\">{{$ctrl.messages('sidebar.clients')}}</a>\\r\\n        </li>\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('asset-stats-stacking-plan')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats-stacking-plan({id: assetId})\\\">{{$ctrl.messages('sidebar.stackingplan')}}</a>\\r\\n        </li>\\r\\n    </div>\\r\\n</ul>\"\n\n/***/ },\n/* 692 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _rightSidebar = __webpack_require__(693);\n\t\n\tvar _rightSidebar2 = _interopRequireDefault(_rightSidebar);\n\t\n\tvar _rightSidebarTemplate = __webpack_require__(694);\n\t\n\tvar _rightSidebarTemplate2 = _interopRequireDefault(_rightSidebarTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar RightSidebarComponent = {\n\t  bindings: {},\n\t  controller: _rightSidebar2.default,\n\t  template: _rightSidebarTemplate2.default\n\t};\n\t\n\texports.default = RightSidebarComponent;\n\n/***/ },\n/* 693 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RightSidebar = function () {\n\t    RightSidebar.$inject = ['$scope', '$rootScope', '$state', '$timeout'];\n\t\n\t    /*@ngInject*/\n\t    function RightSidebar($scope, $rootScope, $state, $timeout) {\n\t        _classCallCheck(this, RightSidebar);\n\t\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.$state = $state;\n\t        this.$timeout = $timeout;\n\t        this.messages = _messages2.default;\n\t        this.bodyCl = 'right-sidebar-opened';\n\t        this.bodyBlockerCl = 'blocker-show';\n\t\n\t        this.updateContent = this.updateContent.bind(this);\n\t        this.close = this.close.bind(this);\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(RightSidebar, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.$scope.$on('right-sidebar:open', this.updateContent);\n\t            this.$scope.$on('right-sidebar:close', this.close);\n\t        }\n\t    }, {\n\t        key: 'updateContent',\n\t        value: function updateContent(e, content) {\n\t            var _this = this;\n\t\n\t            this.$scope.contentType = null;\n\t            this.$scope.content = null;\n\t\n\t            this.$timeout(function () {\n\t                _this.$scope.contentType = content.type;\n\t                _this.$scope.content = content.data;\n\t            });\n\t            if (!this.$scope.visible) {\n\t                $(document.body).addClass(this.bodyCl);\n\t                this.$timeout(function () {\n\t                    $(document.body).addClass(_this.bodyBlockerCl);\n\t                });\n\t                this.$scope.visible = true;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close() {\n\t            var _this2 = this;\n\t\n\t            this.$scope.visible = false;\n\t            $(document.body).removeClass(this.bodyBlockerCl);\n\t            this.$timeout(function () {\n\t                _this2.$scope.contentType = null;\n\t                _this2.$scope.content = null;\n\t                $(document.body).removeClass(_this2.bodyCl);\n\t            }, 300);\n\t            this.$rootScope.$broadcast('right-sidebar:closed');\n\t        }\n\t    }]);\n\t\n\t    return RightSidebar;\n\t}();\n\t\n\texports.default = RightSidebar;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 694 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"right-sidebar\\\" ng-class=\\\"visible && 'visible'\\\">\\r\\n    <div ng-if=\\\"contentType === 'loading'\\\">\\r\\n        <button class=\\\"btn btn-default m-b-m m-t-m m-l-m\\\" ng-click=\\\"$ctrl.close()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"loading\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n    <space-description ng-if=\\\"contentType === 'spaceDescription'\\\" data=\\\"content\\\" context=\\\"'sidebar'\\\"></space-description>\\r\\n    <tenant-description ng-if=\\\"contentType === 'tenantDescription'\\\" data=\\\"content\\\" context=\\\"'sidebar'\\\"></tenant-description>\\r\\n</div>\"\n\n/***/ },\n/* 695 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _navigationCreateItems = __webpack_require__(696);\n\t\n\tvar _navigationCreateItems2 = _interopRequireDefault(_navigationCreateItems);\n\t\n\tvar _navigationCreateItemsTemplate = __webpack_require__(707);\n\t\n\tvar _navigationCreateItemsTemplate2 = _interopRequireDefault(_navigationCreateItemsTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar NavigationCreateItemsComponent = {\n\t  bindings: {\n\t    item: '=?'\n\t  },\n\t  controller: _navigationCreateItems2.default,\n\t  template: _navigationCreateItemsTemplate2.default\n\t};\n\t\n\texports.default = NavigationCreateItemsComponent;\n\n/***/ },\n/* 696 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _userEditModal = __webpack_require__(697);\n\t\n\tvar _userEditModal2 = _interopRequireDefault(_userEditModal);\n\t\n\tvar _userEditModalTemplate = __webpack_require__(699);\n\t\n\tvar _userEditModalTemplate2 = _interopRequireDefault(_userEditModalTemplate);\n\t\n\tvar _brokerEditModal = __webpack_require__(700);\n\t\n\tvar _brokerEditModal2 = _interopRequireDefault(_brokerEditModal);\n\t\n\tvar _brokerEditModalTemplate = __webpack_require__(701);\n\t\n\tvar _brokerEditModalTemplate2 = _interopRequireDefault(_brokerEditModalTemplate);\n\t\n\tvar _assetEditModal = __webpack_require__(702);\n\t\n\tvar _assetEditModal2 = _interopRequireDefault(_assetEditModal);\n\t\n\tvar _assetEditModalTemplate = __webpack_require__(704);\n\t\n\tvar _assetEditModalTemplate2 = _interopRequireDefault(_assetEditModalTemplate);\n\t\n\tvar _clientEditModal = __webpack_require__(705);\n\t\n\tvar _clientEditModal2 = _interopRequireDefault(_clientEditModal);\n\t\n\tvar _clientEditModalTemplate = __webpack_require__(706);\n\t\n\tvar _clientEditModalTemplate2 = _interopRequireDefault(_clientEditModalTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar NavigationCreateItemsController = function () {\n\t    NavigationCreateItemsController.$inject = ['$scope', 'SecurityService', 'Activities', '$uibModal'];\n\t\n\t    /*@ngInject*/\n\t    function NavigationCreateItemsController($scope, SecurityService, Activities, $uibModal) {\n\t        _classCallCheck(this, NavigationCreateItemsController);\n\t\n\t        this.$scope = $scope;\n\t        this.securityService = SecurityService;\n\t        this.activities = Activities;\n\t        this.$uibModal = $uibModal;\n\t        this.messages = _messages2.default;\n\t\n\t        this.init();\n\t        this.applyActivities();\n\t    }\n\t\n\t    _createClass(NavigationCreateItemsController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            this.$scope.addNewUser = function () {\n\t                _this.$uibModal.open({\n\t                    controller: _userEditModal2.default,\n\t                    template: _userEditModalTemplate2.default,\n\t                    resolve: {\n\t                        userObject: null\n\t                    }\n\t                });\n\t            };\n\t\n\t            this.$scope.addNewBroker = function () {\n\t                _this.$uibModal.open({\n\t                    controller: _brokerEditModal2.default,\n\t                    template: _brokerEditModalTemplate2.default,\n\t                    resolve: {\n\t                        brokerObject: null\n\t                    }\n\t                });\n\t            };\n\t\n\t            this.$scope.addNewSet = function () {\n\t                _this.$uibModal.open({\n\t                    controller: _assetEditModal2.default,\n\t                    template: _assetEditModalTemplate2.default,\n\t                    resolve: {\n\t                        assetObject: null\n\t                    }\n\t                });\n\t            };\n\t\n\t            this.$scope.addNewClient = function () {\n\t                _this.$uibModal.open({\n\t                    controller: _clientEditModal2.default,\n\t                    template: _clientEditModalTemplate2.default,\n\t                    resolve: {\n\t                        clientId: null\n\t                    }\n\t                });\n\t            };\n\t        }\n\t    }, {\n\t        key: 'applyActivities',\n\t        value: function applyActivities() {\n\t            var _this2 = this;\n\t\n\t            this.securityService.getActivities().then(function () {\n\t                _this2.securityService.canDo(_this2.activities.HomeView).then(function (result) {\n\t                    return _this2.homeAvailable = result;\n\t                }, function () {\n\t                    return _this2.homeAvailable = false;\n\t                });\n\t                _this2.securityService.canDo(_this2.activities.BrokersView).then(function (result) {\n\t                    return _this2.brokersAvailable = result;\n\t                }, function () {\n\t                    return _this2.brokersAvailable = false;\n\t                });\n\t                _this2.securityService.canDo(_this2.activities.UsersView).then(function (result) {\n\t                    return _this2.usersAvailable = result;\n\t                }, function () {\n\t                    return _this2.usersAvailable = false;\n\t                });\n\t                _this2.securityService.canDo(_this2.activities.AssetsManage).then(function (result) {\n\t                    return _this2.assetsAvailable = result;\n\t                }, function () {\n\t                    return _this2.assetsAvailable = false;\n\t                });\n\t                _this2.securityService.canDo(_this2.activities.AssetsView).then(function (result) {\n\t                    return _this2.assetsViewAvailable = result;\n\t                }, function () {\n\t                    return _this2.assetsViewAvailable = false;\n\t                });\n\t                _this2.securityService.canDo(_this2.activities.ClientsManage).then(function (result) {\n\t                    return _this2.clientsAvailable = result;\n\t                }, function () {\n\t                    return _this2.clientsAvailable = false;\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return NavigationCreateItemsController;\n\t}();\n\t\n\texports.default = NavigationCreateItemsController;\n\n/***/ },\n/* 697 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UserController = function () {\n\t    UserController.$inject = ['$scope', '$state', '$uibModalInstance', 'User', 'userObject', 'Broker', 'Role', 'Locale', 'StoreAdapter', 'NotificationService'];\n\t\n\t    /*@ngInject*/\n\t    function UserController($scope, $state, $uibModalInstance, User, userObject, Broker, Role, Locale, StoreAdapter, NotificationService) {\n\t        _classCallCheck(this, UserController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.User = User;\n\t        this.userObject = userObject;\n\t        this.Broker = Broker;\n\t        this.Role = Role;\n\t        this.Locale = Locale;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.notificationService = NotificationService;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.validationGroup = 'user-edit';\n\t\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(UserController, [{\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            this.$scope.editMode = this.userObject != null;\n\t            this.isSaveOperationDisable = true;\n\t\n\t            if (this.$scope.editMode) {\n\t                this.$scope.user = this.userObject;\n\t            } else {\n\t                this.$scope.user = {\n\t                    email: '',\n\t                    displayName: '',\n\t                    brokerId: null,\n\t                    roleId: 1\n\t                };\n\t            }\n\t\n\t            this.$scope.emailSettings = {\n\t                placeholder: (0, _messages2.default)('users.placeholder.email'),\n\t                bindingOptions: {\n\t                    value: 'user.email',\n\t                    disabled: 'editMode'\n\t                }\n\t            };\n\t            this.$scope.emailValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 256, min: 3, trim: true }, { type: 'email', message: (0, _messages2.default)('validation.email') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.displaynameSettings = {\n\t                placeholder: (0, _messages2.default)('users.placeholder.displayname'),\n\t                bindingOptions: {\n\t                    value: 'user.displayName '\n\t                }\n\t            };\n\t            this.$scope.displaynameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 50, min: 1, trim: true }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            var rolesStore = this.storeAdapter.createStore(this.Role, {}, this.errorHandler);\n\t\n\t            rolesStore.load().done(function (result) {\n\t                _this.$scope.roleSelectSettings = {\n\t                    items: result,\n\t                    displayExpr: 'name',\n\t                    valueExpr: 'id',\n\t                    bindingOptions: {\n\t                        value: 'user.roleId'\n\t                    }\n\t                };\n\t            });\n\t\n\t            this.$scope.roleValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            var localesStore = this.storeAdapter.createStore(this.Locale, {}, this.errorHandler);\n\t\n\t            localesStore.load().done(function (result) {\n\t                console.log(result);\n\t                _this.$scope.localeSelectSettings = {\n\t                    items: result,\n\t                    displayExpr: 'localeName',\n\t                    valueExpr: 'id',\n\t                    bindingOptions: {\n\t                        value: 'user.localeId'\n\t                    }\n\t                };\n\t            });\n\t\n\t            this.$scope.localeValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            var brokersStore = this.storeAdapter.createStore(this.Broker, {}, this.errorHandler);\n\t\n\t            brokersStore.load().done(function (result) {\n\t                _this.$scope.brokerSelectSettings = {\n\t                    items: result,\n\t                    displayExpr: 'name',\n\t                    valueExpr: 'id',\n\t                    bindingOptions: {\n\t                        value: 'user.brokerId'\n\t                    }\n\t                };\n\t            });\n\t\n\t            this.$scope.brokerValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSave = function () {\n\t                var result = _validation_engine2.default.getGroupConfig(_this.validationGroup).validate();\n\t                if (result.isValid) {\n\t                    _this.saveInProgress = true;\n\t                    _this.isSaveOperationDisable = true;\n\t\n\t                    if (!_this.$scope.editMode) {\n\t                        _this.User.save(_this.$scope.user, function (result) {\n\t                            _this.notificationService.success((0, _messages2.default)('users.message.created'));\n\t                            _this.saveInProgress = false;\n\t                            _this.$state.go('user', { id: result.id }, { reload: false });\n\t                            _this.$uibModalInstance.close(result);\n\t                        }, function (error) {\n\t                            _this.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            _this.saveInProgress = false;\n\t                        });\n\t                    } else {\n\t                        _this.User.update({ id: _this.$scope.user.id }, _this.$scope.user, function (result) {\n\t                            _this.notificationService.success((0, _messages2.default)('users.message.updated'));\n\t                            self.saveInProgress = false;\n\t                            _this.$uibModalInstance.close(result);\n\t                        }, function (error) {\n\t                            _this.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            _this.saveInProgress = false;\n\t                        });\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(_this.validationGroup);\n\t                _this.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }]);\n\t\n\t    return UserController;\n\t}();\n\t\n\texports.default = UserController;\n\n/***/ },\n/* 698 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONSTANTS = {\n\t    devExtremeStoreGenerator: function devExtremeStoreGenerator(values) {\n\t        var store = {\n\t            data: [],\n\t            key: 'value'\n\t        };\n\t        values.forEach(function (item) {\n\t            store.data.push({\n\t                value: item.value,\n\t                display: item.text\n\t            });\n\t        });\n\t        return new _array_store2.default(store);\n\t    },\n\t\n\t    states: [{ value: 1, text: (0, _messages2.default)('state.pending') }, { value: 2, text: (0, _messages2.default)('state.active') }, { value: 3, text: (0, _messages2.default)('state.archived') }],\n\t    assetStateStore: function assetStateStore() {\n\t        return this.devExtremeStoreGenerator(this.states);\n\t    },\n\t    assetStateStorePlain: function assetStateStorePlain() {\n\t        return this.states.slice(0);\n\t    },\n\t\n\t    userStateStore: function userStateStore() {\n\t        return new _array_store2.default({\n\t            data: [{ value: 2, display: (0, _messages2.default)('state.active') }, { value: 3, display: (0, _messages2.default)('state.archived') }],\n\t            key: \"value\"\n\t        });\n\t    },\n\t\n\t    brokerStateStore: function brokerStateStore() {\n\t        return new _array_store2.default({\n\t            data: [{ value: 1, display: (0, _messages2.default)('state.active') }, { value: 2, display: (0, _messages2.default)('state.archived') }],\n\t            key: \"value\"\n\t        });\n\t    },\n\t\n\t    countries: [{\n\t        value: 1,\n\t        text: (0, _messages2.default)('country.germany'),\n\t        isoCode: 'de'\n\t    }],\n\t    countryStore: function countryStore() {\n\t        return this.devExtremeStoreGenerator(this.countries);\n\t    },\n\t    countryStorePlain: function countryStorePlain() {\n\t        return this.countries.slice(0);\n\t    },\n\t\n\t    clientsStateStore: function clientsStateStore() {\n\t        return new _array_store2.default({\n\t            data: [{ value: 1, display: (0, _messages2.default)('state.active') }, { value: 2, display: (0, _messages2.default)('state.archived') }],\n\t            key: \"value\"\n\t        });\n\t    },\n\t\n\t    industry: [{ value: 1, text: (0, _messages2.default)('industry.technology') }, { value: 2, text: (0, _messages2.default)('industry.media') }, { value: 3, text: (0, _messages2.default)('industry.education') }, { value: 4, text: (0, _messages2.default)('industry.trade') }, { value: 5, text: (0, _messages2.default)('industry.government') }, { value: 6, text: (0, _messages2.default)('industry.healthcare') }, { value: 7, text: (0, _messages2.default)('industry.logistics') }, { value: 8, text: (0, _messages2.default)('industry.consulting') }, { value: 9, text: (0, _messages2.default)('industry.retail') }, { value: 10, text: (0, _messages2.default)('industry.telco') }, { value: 11, text: (0, _messages2.default)('industry.food') }, { value: 12, text: (0, _messages2.default)('industry.finance') }, { value: 13, text: (0, _messages2.default)('industry.residential') }, { value: 14, text: (0, _messages2.default)('industry.travel') }, { value: 15, text: (0, _messages2.default)('industry.wellness') }, { value: 16, text: (0, _messages2.default)('industry.hr') }, { value: 17, text: (0, _messages2.default)('industry.real-estate') }, { value: 18, text: (0, _messages2.default)('industry.industrials') }],\n\t    clientsIndustryStore: function clientsIndustryStore() {\n\t        return this.devExtremeStoreGenerator(this.industry);\n\t    },\n\t    clientsIndustryPlain: function clientsIndustryPlain() {\n\t        return this.industry;\n\t    },\n\t\n\t    defaultAvailablePageSizes: function defaultAvailablePageSizes() {\n\t        return [10, 20, 50];\n\t    },\n\t\n\t    defaultPageSize: function defaultPageSize() {\n\t        return 10;\n\t    },\n\t\n\t    defaultGridSettings: function defaultGridSettings() {\n\t        var settings = {\n\t            allowColumnResizing: true,\n\t            showBorders: true,\n\t            showRowLines: true,\n\t            paging: {\n\t                enabled: true,\n\t                pageSize: this.defaultPageSize()\n\t            },\n\t            pager: {\n\t                showPageSizeSelector: true,\n\t                allowedPageSizes: this.defaultAvailablePageSizes(),\n\t                showInfo: true\n\t            },\n\t            filterRow: {\n\t                visible: true\n\t            },\n\t            grouping: {\n\t                contextMenuEnabled: true\n\t            },\n\t            groupPanel: {\n\t                visible: true\n\t            }\n\t        };\n\t\n\t        return JSON.parse(JSON.stringify(settings));\n\t    },\n\t\n\t    spaceTypes: [{ value: 1, text: (0, _messages2.default)('assets.spaces.office') }, { value: 2, text: (0, _messages2.default)('assets.spaces.garageUnderground') }, { value: 3, text: (0, _messages2.default)('assets.spaces.roofTerrace') }, { value: 4, text: (0, _messages2.default)('assets.spaces.outerSurface') }, { value: 5, text: (0, _messages2.default)('assets.spaces.warehouse') }, { value: 6, text: (0, _messages2.default)('assets.spaces.handlesSurface') }, { value: 7, text: (0, _messages2.default)('assets.spaces.gastronomy') }, { value: 8, text: (0, _messages2.default)('assets.spaces.archive') }, { value: 9, text: (0, _messages2.default)('assets.spaces.technicalRoom') }, { value: 10, text: (0, _messages2.default)('assets.spaces.flat') }, { value: 11, text: (0, _messages2.default)('assets.spaces.retail') }],\n\t    spaceTypeStore: function spaceTypeStore() {\n\t        return this.devExtremeStoreGenerator(this.spaceTypes);\n\t    },\n\t    spaceTypeStorePlain: function spaceTypeStorePlain() {\n\t        return this.spaceTypes.slice(0);\n\t    },\n\t\n\t    spaceStateStore: function spaceStateStore() {\n\t        return new _array_store2.default({\n\t            data: [{ value: 1, display: (0, _messages2.default)('state.active') }, { value: 2, display: (0, _messages2.default)('state.archived') }],\n\t            key: \"value\"\n\t        });\n\t    },\n\t\n\t    phonePattern: function phonePattern() {\n\t        return (/^\\(\\d{3}\\)\\d{3}-\\d{4}$/i\n\t        );\n\t    }\n\t};\n\t\n\texports.default = CONSTANTS;\n\n/***/ },\n/* 699 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('users.edit.title') : Messages('users.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-email\\\" class=\\\"control-label\\\">{{Messages('users.email')}}</label>\\r\\n                    <div id=\\\"field-email\\\" dx-text-box=\\\"emailSettings\\\" dx-validator=\\\"emailValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('users.displayname')}}</label>\\r\\n                    <div id=\\\"field-name\\\" dx-text-box=\\\"displaynameSettings\\\" dx-validator=\\\"displaynameValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-role\\\" class=\\\"control-label\\\">{{Messages('users.role')}}</label>\\r\\n                    <div id=\\\"field-role\\\" dx-select-box=\\\"roleSelectSettings\\\" dx-validator=\\\"roleValidationRules\\\"></div>\\r\\n                    <p class=\\\"help-block\\\"><small>{{Messages('users.role.help')}}</small></p>\\r\\n                </div>\\r\\n                <div ng-if=\\\"user.roleId == 2\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-broker\\\" class=\\\"control-label\\\">{{Messages('users.broker')}}</label>\\r\\n                    <div id=\\\"field-broker\\\" dx-select-box=\\\"brokerSelectSettings\\\" dx-validator=\\\"brokerValidationRules\\\"></div>\\r\\n                    <p class=\\\"help-block\\\"><small>{{Messages('users.broker.help')}}</small></p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-role\\\" class=\\\"control-label\\\">{{Messages('users.locale')}}</label>\\r\\n                    <div id=\\\"field-role\\\" dx-select-box=\\\"localeSelectSettings\\\" dx-validator=\\\"localeValidationRules\\\"></div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('users.saving') : Messages('users.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('users.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 700 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BrokerEditController = function () {\n\t    BrokerEditController.$inject = ['$scope', '$state', '$timeout', '$uibModalInstance', 'brokerObject', 'Broker', 'Role', 'StoreAdapter', 'NotificationService'];\n\t\n\t    /*@ngInject*/\n\t    function BrokerEditController($scope, $state, $timeout, $uibModalInstance, brokerObject, Broker, Role, StoreAdapter, NotificationService) {\n\t        _classCallCheck(this, BrokerEditController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.brokerObject = brokerObject;\n\t        this.Broker = Broker;\n\t        this.Role = Role;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.notificationService = NotificationService;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.validationGroup = 'broker-edit';\n\t        this.addressValidationGroup = 'broker-edit-address';\n\t        this.$timeout = $timeout;\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(BrokerEditController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.$timeout(function () {\n\t                _this.initAutocomplete();\n\t            });\n\t\n\t            this.$scope.clearAddress = function () {\n\t                self.brokerObject.address = null;\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this2 = this;\n\t\n\t            var self = this;\n\t\n\t            this.$scope.editMode = this.brokerObject !== null;\n\t            this.isSaveOperationDisable = true;\n\t\n\t            if (this.$scope.editMode) {\n\t                this.$scope.broker = this.brokerObject;\n\t            } else {\n\t                this.$scope.broker = {\n\t                    name: '',\n\t                    countryId: 1,\n\t                    city: '',\n\t                    street: '',\n\t                    streetAddress: '',\n\t                    postCode: ''\n\t                };\n\t            }\n\t\n\t            this.$scope.nameSettings = {\n\t                placeholder: (0, _messages2.default)('brokers.placeholder.name'),\n\t                bindingOptions: {\n\t                    value: 'broker.name'\n\t                }\n\t            };\n\t            this.$scope.nameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 255, message: (0, _messages2.default)('validation.maxLength') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.countryStore = _constants2.default.countryStore();\n\t            this.$scope.countrySettings = {\n\t                dataSource: this.countryStore,\n\t                displayExpr: 'display',\n\t                valueExpr: 'value',\n\t                bindingOptions: {\n\t                    value: 'broker.countryId'\n\t                }\n\t            };\n\t\n\t            this.$scope.countryValidationRules = {\n\t                validationRules: [],\n\t                validationGroup: this.validationGroup,\n\t                onOptionChanged: function onOptionChanged() {\n\t                    self.setAutocompleteCountry();\n\t                }\n\t            };\n\t\n\t            this.$scope.broker.address = '';\n\t            this.$scope.addressSettings = {\n\t                bindingOptions: {\n\t                    value: 'broker.address',\n\t                    disabled: '!broker.countryId'\n\t                }\n\t            };\n\t            this.$scope.addressValidationRules = {\n\t                validationRules: [{\n\t                    type: 'custom',\n\t                    validationCallback: function validationCallback(options) {\n\t                        if (!self.$scope.broker.countryId) {\n\t                            options.rule.message = (0, _messages2.default)('address.validation.countryRequired');\n\t                            return false;\n\t                        }\n\t\n\t                        return true;\n\t                    }\n\t                }],\n\t                validationGroup: this.addressValidationGroup\n\t            };\n\t\n\t            this.$scope.citySettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.city'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'broker.city'\n\t                }\n\t            };\n\t            this.$scope.cityValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 80 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.street'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'broker.street'\n\t                }\n\t            };\n\t            this.$scope.streetValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 100 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetAddressSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.streetAddress'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'broker.streetAddress'\n\t                }\n\t            };\n\t            this.$scope.streetAddressValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.postCodeSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.postCode'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'broker.postCode'\n\t                }\n\t            };\n\t            this.$scope.postCodeValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSave = function () {\n\t                var result = _validation_engine2.default.getGroupConfig(_this2.validationGroup).validate();\n\t                if (result.isValid) {\n\t                    _this2.saveInProgress = true;\n\t                    _this2.isSaveOperationDisable = true;\n\t\n\t                    if (!_this2.$scope.editMode) {\n\t                        _this2.Broker.save(_this2.$scope.broker, function (result) {\n\t                            _this2.saveInProgress = false;\n\t                            _this2.$state.go('broker', { id: result.id });\n\t                            _this2.$uibModalInstance.close(_this2.$scope.broker);\n\t                            _this2.notificationService.success((0, _messages2.default)('assets.message.created'));\n\t                        }, function (error) {\n\t                            _this2.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            _this2.saveInProgress = false;\n\t                        });\n\t                    } else {\n\t                        _this2.Broker.update({ id: _this2.$scope.broker.id }, _this2.$scope.broker, function (result) {\n\t                            _this2.notificationService.success((0, _messages2.default)('assets.message.updated'));\n\t                            _this2.saveInProgress = false;\n\t                            _this2.$uibModalInstance.close(_this2.$scope.broker);\n\t                        }, function (error) {\n\t                            _this2.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            _this2.saveInProgress = false;\n\t                        });\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(_this2.validationGroup);\n\t                _this2.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initAutocomplete',\n\t        value: function initAutocomplete() {\n\t            var _this3 = this;\n\t\n\t            if (!window.google) {\n\t                return;\n\t            }\n\t\n\t            this.autocomplete = new google.maps.places.Autocomplete($('#broker-address-field input')[0]);\n\t            google.maps.event.addListener(this.autocomplete, 'place_changed', function () {\n\t                var place = _this3.autocomplete.getPlace(),\n\t                    citySet = void 0,\n\t                    streetSet = void 0,\n\t                    buildingSet = void 0,\n\t                    postCodeSet = void 0;\n\t\n\t                if (place.address_components instanceof Array) {\n\t                    place.address_components.forEach(function (item) {\n\t                        if (item.types.indexOf('locality') !== -1) {\n\t                            _this3.$scope.broker.city = item.long_name;\n\t                            citySet = true;\n\t                        }\n\t                        if (item.types.indexOf('route') !== -1) {\n\t                            _this3.$scope.broker.street = item.long_name;\n\t                            streetSet = true;\n\t                        }\n\t                        if (item.types.indexOf('street_number') !== -1) {\n\t                            _this3.$scope.broker.streetAddress = item.long_name;\n\t                            buildingSet = true;\n\t                        }\n\t                        if (item.types.indexOf('postal_code') !== -1) {\n\t                            _this3.$scope.broker.postCode = item.long_name;\n\t                            postCodeSet = true;\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (!citySet) {\n\t                    _this3.$scope.broker.city = null;\n\t                }\n\t                if (!streetSet) {\n\t                    _this3.$scope.broker.street = null;\n\t                }\n\t                if (!buildingSet) {\n\t                    _this3.$scope.broker.streetAddress = null;\n\t                }\n\t                if (!postCodeSet) {\n\t                    _this3.$scope.broker.postCode = null;\n\t                }\n\t                _validation_engine2.default.getGroupConfig(_this3.addressValidationGroup).validate();\n\t            });\n\t\n\t            if (this.$scope.broker.countryId) {\n\t                this.setAutocompleteCountry();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setAutocompleteCountry',\n\t        value: function setAutocompleteCountry() {\n\t            var _this4 = this;\n\t\n\t            var countries = _constants2.default.countryStorePlain(),\n\t                curCountryCode = void 0;\n\t\n\t            countries.forEach(function (country) {\n\t                if (country.value === _this4.$scope.broker.countryId) {\n\t                    curCountryCode = country.isoCode;\n\t                }\n\t            });\n\t\n\t            this.autocomplete.setComponentRestrictions({\n\t                'country': curCountryCode\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return BrokerEditController;\n\t}();\n\t\n\texports.default = BrokerEditController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 701 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('brokers.edit.title') : Messages('brokers.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('brokers.name')}}</label>\\r\\n                <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{Messages('address.country')}}</label>\\r\\n                <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"broker-address-field\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                <div id=\\\"broker-address-field\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                        <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                        <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                        <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                        <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('brokers.saving') : Messages('brokers.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('brokers.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 702 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\t__webpack_require__(703);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetEditModalController = function () {\n\t    AssetEditModalController.$inject = ['$scope', '$state', '$timeout', 'Asset', 'assetObject', '$uibModalInstance', 'NotificationService', 'StoreAdapter', 'Broker', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function AssetEditModalController($scope, $state, $timeout, Asset, assetObject, $uibModalInstance, NotificationService, StoreAdapter, Broker, UtilsService) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, AssetEditModalController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Asset = Asset;\n\t        this.assetObject = assetObject;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.notificationService = NotificationService;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.Broker = Broker;\n\t        this.utils = UtilsService;\n\t        this.validationGroup = 'asset-edit';\n\t        this.addressValidationGroup = 'asset-create-address';\n\t\n\t        this.init();\n\t        this.initForm();\n\t\n\t        $timeout(function () {\n\t            _this.initAutocomplete();\n\t        });\n\t    }\n\t\n\t    _createClass(AssetEditModalController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            this.$scope.editMode = !!this.assetObject;\n\t\n\t            if (this.$scope.editMode) {\n\t                this.$scope.asset = this.assetObject;\n\t                this.$scope.asset.address = this.utils.generateAddress(this.$scope.asset);\n\t            } else {\n\t                this.$scope.asset = {\n\t                    name: '',\n\t                    brokerId: null,\n\t                    countryId: null,\n\t                    city: '',\n\t                    street: '',\n\t                    streetAddress: '',\n\t                    description: '',\n\t                    brokerDatabaseRecordId: '',\n\t                    notes: '',\n\t                    images: [],\n\t                    documents: [],\n\t                    floors: [],\n\t                    spaces: [],\n\t                    state: 2,\n\t                    address: ''\n\t                };\n\t            }\n\t\n\t            this.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            this.$scope.clearAddress = function () {\n\t                self.$scope.asset.address = '';\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this2 = this;\n\t\n\t            var self = this;\n\t\n\t            this.$scope.nameSettings = {\n\t                placeholder: (0, _messages2.default)('assets.placeholder.name'),\n\t                bindingOptions: {\n\t                    value: 'asset.name'\n\t                }\n\t            };\n\t            this.$scope.nameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 100 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            var brokersStore = this.storeAdapter.createStore(this.Broker, {}, this.errorHandler);\n\t            brokersStore.load().done(function (result) {\n\t                _this2.$scope.brokerSelectSettings = {\n\t                    dataSource: result,\n\t                    displayExpr: 'name',\n\t                    valueExpr: 'id',\n\t                    bindingOptions: {\n\t                        value: 'asset.brokerId'\n\t                    }\n\t                };\n\t            });\n\t\n\t            this.$scope.brokerValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.description = this.$scope.$parent.description;\n\t            this.$scope.descriptionSettings = {\n\t                placeholder: (0, _messages2.default)('assets.placeholder.description'),\n\t                height: 180,\n\t                maxLength: 500,\n\t                bindingOptions: {\n\t                    value: 'asset.description'\n\t                }\n\t            };\n\t            this.$scope.descriptionValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 500 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.countryStore = _constants2.default.countryStore();\n\t            this.$scope.countrySettings = {\n\t                dataSource: this.countryStore,\n\t                displayExpr: 'display',\n\t                valueExpr: 'value',\n\t                bindingOptions: {\n\t                    value: 'asset.countryId'\n\t                }\n\t            };\n\t\n\t            this.$scope.countryValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 50 }],\n\t                validationGroup: this.validationGroup,\n\t                onOptionChanged: function onOptionChanged() {\n\t                    _this2.setAutocompleteCountry();\n\t                }\n\t            };\n\t\n\t            this.$scope.addressSettings = {\n\t                bindingOptions: {\n\t                    value: 'asset.address',\n\t                    disabled: '!asset.countryId'\n\t                }\n\t            };\n\t            this.$scope.addressValidationRules = {\n\t                validationRules: [{\n\t                    type: 'custom',\n\t                    validationCallback: function validationCallback(options) {\n\t                        if (!self.$scope.asset.countryId) {\n\t                            options.rule.message = (0, _messages2.default)('address.validation.countryRequired');\n\t                            return false;\n\t                        }\n\t\n\t                        return true;\n\t                    }\n\t                }],\n\t                validationGroup: this.addressValidationGroup\n\t            };\n\t\n\t            this.$scope.citySettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.city'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'asset.city'\n\t                }\n\t            };\n\t            this.$scope.cityValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 80 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.street'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'asset.street'\n\t                }\n\t            };\n\t            this.$scope.streetValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 100 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetAddressSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.streetAddress'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'asset.streetAddress'\n\t                }\n\t            };\n\t            this.$scope.streetAddressValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.postCodeSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.postCode'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'asset.postCode'\n\t                }\n\t            };\n\t            this.$scope.postCodeValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSaveSettings = function () {\n\t                var validation = _validation_engine2.default.getGroupConfig(self.validationGroup).validate(),\n\t                    addressValidation = _validation_engine2.default.getGroupConfig(self.addressValidationGroup).validate();\n\t\n\t                if (validation.isValid && addressValidation.isValid) {\n\t                    self.$scope.saveInProgress = true;\n\t                    self.$scope.isSaveOperationDisable = true;\n\t\n\t                    if (self.$scope.editMode) {\n\t                        self.Asset.update({ id: self.$scope.asset.id }, self.$scope.asset, function (result) {\n\t                            self.notificationService.success((0, _messages2.default)('assets.message.created'));\n\t                            self.$scope.saveInProgress = false;\n\t                            self.$uibModalInstance.close(self.$scope.asset);\n\t                        }, function (error) {\n\t                            self.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            self.$scope.saveInProgress = false;\n\t                        });\n\t                    } else {\n\t                        self.Asset.create({ id: self.$scope.asset.id }, self.$scope.asset, function (result) {\n\t                            self.notificationService.success((0, _messages2.default)('assets.message.created'));\n\t                            self.$scope.saveInProgress = false;\n\t                            self.$uibModalInstance.close(self.$scope.asset);\n\t                            self.$state.go('asset', {\n\t                                id: result.id\n\t                            });\n\t                        }, function (error) {\n\t                            self.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            self.$scope.saveInProgress = false;\n\t                        });\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(self.validationGroup);\n\t                self.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initAutocomplete',\n\t        value: function initAutocomplete() {\n\t            var _this3 = this;\n\t\n\t            if (!window.google) {\n\t                return;\n\t            }\n\t\n\t            this.autocomplete = new google.maps.places.Autocomplete($('#field-address input')[0]);\n\t            google.maps.event.addListener(this.autocomplete, 'place_changed', function () {\n\t                var place = _this3.autocomplete.getPlace(),\n\t                    citySet = void 0,\n\t                    streetSet = void 0,\n\t                    buildingSet = void 0,\n\t                    postCodeSet = void 0;\n\t\n\t                if (place.address_components instanceof Array) {\n\t                    place.address_components.forEach(function (item) {\n\t                        // if (item.types.indexOf('country') !== -1) {\n\t                        //     this.$scope.countryId = item.long_name;\n\t                        // }\n\t                        if (item.types.indexOf('locality') !== -1) {\n\t                            _this3.$scope.asset.city = item.long_name;\n\t                            citySet = true;\n\t                        }\n\t                        if (item.types.indexOf('route') !== -1) {\n\t                            _this3.$scope.asset.street = item.long_name;\n\t                            streetSet = true;\n\t                        }\n\t                        if (item.types.indexOf('street_number') !== -1) {\n\t                            _this3.$scope.asset.streetAddress = item.long_name;\n\t                            buildingSet = true;\n\t                        }\n\t                        if (item.types.indexOf('postal_code') !== -1) {\n\t                            _this3.$scope.asset.postCode = item.long_name;\n\t                            postCodeSet = true;\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (!citySet) {\n\t                    _this3.$scope.asset.city = null;\n\t                }\n\t                if (!streetSet) {\n\t                    _this3.$scope.asset.street = null;\n\t                }\n\t                if (!buildingSet) {\n\t                    _this3.$scope.asset.streetAddress = null;\n\t                }\n\t                if (!postCodeSet) {\n\t                    _this3.$scope.asset.postCode = null;\n\t                }\n\t\n\t                _validation_engine2.default.getGroupConfig(_this3.addressValidationGroup).validate();\n\t            });\n\t\n\t            if (this.$scope.asset.countryId) {\n\t                this.setAutocompleteCountry();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setAutocompleteCountry',\n\t        value: function setAutocompleteCountry() {\n\t            var _this4 = this;\n\t\n\t            var countries = _constants2.default.countryStorePlain(),\n\t                curCountryCode = void 0;\n\t\n\t            countries.forEach(function (country) {\n\t                if (country.value === _this4.$scope.asset.countryId) {\n\t                    curCountryCode = country.isoCode;\n\t                }\n\t            });\n\t\n\t            if (curCountryCode) {\n\t                this.autocomplete.setComponentRestrictions({\n\t                    'country': curCountryCode\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return AssetEditModalController;\n\t}();\n\t\n\texports.default = AssetEditModalController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 703 */,\n/* 704 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('assets.edit') : Messages('assets.add') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\" name=\\\"settingsForm\\\">\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{ Messages('assets.name') }}</label>\\r\\n                    <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-broker\\\" control-label>{{ Messages('assets.broker') }}</label>\\r\\n                    <div>\\r\\n                        <div id=\\\"field-broker\\\" dx-select-box=\\\"brokerSelectSettings\\\" dx-validator=\\\"brokerValidationRules\\\"></div>\\r\\n                        <p class=\\\"help-block\\\"><small>{{ Messages('assets.broker.help') }}</small></p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{ Messages('assets.country') }}</label>\\r\\n                    <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-address\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                    <div id=\\\"field-address\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n                <div class=\\\"panel panel-default\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                            <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                            <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                            <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                            <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSaveSettings()\\\">\\r\\n            {{ saveInProgress ? Messages('assets.saving') : Messages('assets.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 705 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ClientEditController = function () {\n\t    ClientEditController.$inject = ['$scope', '$state', '$timeout', 'Client', 'clientId', 'NotificationService', '$uibModalInstance', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function ClientEditController($scope, $state, $timeout, Client, clientId, NotificationService, $uibModalInstance, UtilsService) {\n\t        _classCallCheck(this, ClientEditController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.$timeout = $timeout;\n\t        this.Client = Client;\n\t        this.clientId = clientId;\n\t        this.notificationService = NotificationService;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.utils = UtilsService;\n\t        this.validationGroup = 'client-edit';\n\t        this.addressValidationGroup = 'client-edit-address';\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(ClientEditController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            if (this.clientId) {\n\t                this.$scope.getDataInProgress = true;\n\t                this.clientObject = {};\n\t                this.Client.getFull({ id: this.clientId }, function (result) {\n\t                    _this.$scope.client = result;\n\t                    _this.$scope.getDataInProgress = false;\n\t                    _this.$timeout(function () {\n\t                        _this.initAutocomplete();\n\t                    });\n\t                }, function (error) {\n\t                    _this.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                });\n\t            } else {\n\t                this.$timeout(function () {\n\t                    _this.initAutocomplete();\n\t                });\n\t            }\n\t\n\t            this.$scope.clearAddress = function () {\n\t                self.$scope.client.address = null;\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this2 = this;\n\t\n\t            var self = this;\n\t\n\t            this.$scope.editMode = !!this.clientObject;\n\t\n\t            if (this.$scope.editMode) {\n\t                this.$scope.client = self.clientObject;\n\t            } else {\n\t                this.$scope.client = {\n\t                    name: '',\n\t                    countryId: 1,\n\t                    city: '',\n\t                    street: '',\n\t                    streetAddress: '',\n\t                    postCode: '',\n\t                    notes: '',\n\t                    brokerId: null,\n\t                    representatives: []\n\t                };\n\t            }\n\t\n\t            this.$scope.nameSettings = {\n\t                placeholder: (0, _messages2.default)('clients.placeholder.name'),\n\t                bindingOptions: {\n\t                    value: 'client.name'\n\t                }\n\t            };\n\t            this.$scope.nameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 255 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.countryStore = _constants2.default.countryStore();\n\t            this.$scope.countrySettings = {\n\t                dataSource: this.countryStore,\n\t                displayExpr: 'display',\n\t                valueExpr: 'value',\n\t                bindingOptions: {\n\t                    value: 'client.countryId'\n\t                }\n\t            };\n\t\n\t            this.$scope.countryValidationRules = {\n\t                validationRules: [],\n\t                validationGroup: this.validationGroup,\n\t                onOptionChanged: function onOptionChanged() {\n\t                    self.setAutocompleteCountry();\n\t                }\n\t            };\n\t\n\t            this.$scope.client.address = '';\n\t            this.$scope.addressSettings = {\n\t                bindingOptions: {\n\t                    value: 'client.address',\n\t                    disabled: '!client.countryId'\n\t                }\n\t            };\n\t            this.$scope.addressValidationRules = {\n\t                validationRules: [{\n\t                    type: 'custom',\n\t                    validationCallback: function validationCallback(options) {\n\t                        if (!self.$scope.client.countryId) {\n\t                            options.rule.message = (0, _messages2.default)('address.validation.countryRequired');\n\t                            return false;\n\t                        }\n\t\n\t                        return true;\n\t                    }\n\t                }],\n\t                validationGroup: this.addressValidationGroup\n\t            };\n\t\n\t            this.$scope.citySettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.city'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'client.city'\n\t                }\n\t            };\n\t            this.$scope.cityValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 80 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.street'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'client.street'\n\t                }\n\t            };\n\t            this.$scope.streetValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 100 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetAddressSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.streetAddress'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'client.streetAddress'\n\t                }\n\t            };\n\t            this.$scope.streetAddressValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.postCodeSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.postCode'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'client.postCode'\n\t                }\n\t            };\n\t            this.$scope.postCodeValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.notesSettings = {\n\t                placeholder: (0, _messages2.default)('clients.placeholder.notes'),\n\t                height: 120,\n\t                maxLength: 500,\n\t                bindingOptions: {\n\t                    value: 'client.notes'\n\t                }\n\t            };\n\t            this.$scope.notesValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 500 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.shortNameSettings = {\n\t                placeholder: (0, _messages2.default)('clients.placeholder.shortName'),\n\t                bindingOptions: {\n\t                    value: 'client.shortName'\n\t                }\n\t            };\n\t            this.$scope.shortNameValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 100 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.industryStore = _constants2.default.clientsIndustryStore();\n\t            this.$scope.industrySettings = {\n\t                dataSource: this.industryStore,\n\t                displayExpr: 'display',\n\t                valueExpr: 'value',\n\t                bindingOptions: {\n\t                    value: 'client.industryId'\n\t                }\n\t            };\n\t\n\t            this.$scope.industryValidationRules = {\n\t                validationRules: [],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSave = function () {\n\t                var validation = _validation_engine2.default.getGroupConfig(_this2.validationGroup).validate(),\n\t                    addressValidation = _validation_engine2.default.getGroupConfig(self.addressValidationGroup).validate();\n\t\n\t                if (validation.isValid && addressValidation.isValid) {\n\t                    _this2.saveInProgress = true;\n\t                    _this2.isSaveOperationDisable = true;\n\t\n\t                    if (!self.$scope.editMode) {\n\t                        self.Client.save(_this2.$scope.client, function (result) {\n\t                            self.saveInProgress = false;\n\t                            _this2.$uibModalInstance.close(_this2.$scope.client);\n\t                            _this2.$state.go('client', { id: result.id });\n\t                            _this2.notificationService.success((0, _messages2.default)('clients.message.created'));\n\t                        }, function (error) {\n\t                            self.notificationService.error(error.data);\n\t                            self.saveInProgress = false;\n\t                        });\n\t                    } else {\n\t                        self.Client.update({ id: _this2.$scope.client.id }, _this2.$scope.client, function (result) {\n\t                            self.notificationService.success((0, _messages2.default)('clients.message.updated'));\n\t                            self.saveInProgress = false;\n\t                            if (self.$scope.client.industryId != null) {\n\t                                _constants2.default.clientsIndustryStore().byKey(self.$scope.client.industryId).done(function (dataItem) {\n\t                                    self.$scope.client.industry = dataItem.display;\n\t                                });\n\t                            }\n\t\n\t                            _this2.$uibModalInstance.close(_this2.$scope.client);\n\t                        }, function (error) {\n\t                            self.notificationService.error(error.data);\n\t                            self.saveInProgress = false;\n\t                        });\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(_this2.validationGroup);\n\t                _this2.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initAutocomplete',\n\t        value: function initAutocomplete() {\n\t            var _this3 = this;\n\t\n\t            if (!window.google) {\n\t                return;\n\t            }\n\t\n\t            this.autocomplete = new google.maps.places.Autocomplete($('#client-address-field input')[0]);\n\t            google.maps.event.addListener(this.autocomplete, 'place_changed', function () {\n\t                var place = _this3.autocomplete.getPlace(),\n\t                    citySet = void 0,\n\t                    streetSet = void 0,\n\t                    buildingSet = void 0,\n\t                    postCodeSet = void 0;\n\t\n\t                if (place.address_components instanceof Array) {\n\t                    place.address_components.forEach(function (item) {\n\t                        if (item.types.indexOf('locality') !== -1) {\n\t                            _this3.$scope.client.city = item.long_name;\n\t                            citySet = true;\n\t                        }\n\t                        if (item.types.indexOf('route') !== -1) {\n\t                            _this3.$scope.client.street = item.long_name;\n\t                            streetSet = true;\n\t                        }\n\t                        if (item.types.indexOf('street_number') !== -1) {\n\t                            _this3.$scope.client.streetAddress = item.long_name;\n\t                            buildingSet = true;\n\t                        }\n\t                        if (item.types.indexOf('postal_code') !== -1) {\n\t                            _this3.$scope.client.postCode = item.long_name;\n\t                            postCodeSet = true;\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (!citySet) {\n\t                    _this3.$scope.client.city = null;\n\t                }\n\t                if (!streetSet) {\n\t                    _this3.$scope.client.street = null;\n\t                }\n\t                if (!buildingSet) {\n\t                    _this3.$scope.client.streetAddress = null;\n\t                }\n\t                if (!postCodeSet) {\n\t                    _this3.$scope.client.postCode = null;\n\t                }\n\t\n\t                _validation_engine2.default.getGroupConfig(_this3.addressValidationGroup).validate();\n\t            });\n\t\n\t            if (this.$scope.client.countryId) {\n\t                this.setAutocompleteCountry();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setAutocompleteCountry',\n\t        value: function setAutocompleteCountry() {\n\t            var _this4 = this;\n\t\n\t            var countries = _constants2.default.countryStorePlain(),\n\t                curCountryCode = void 0;\n\t\n\t            countries.forEach(function (country) {\n\t                if (country.value === _this4.$scope.client.countryId) {\n\t                    curCountryCode = country.isoCode;\n\t                }\n\t            });\n\t\n\t            this.autocomplete.setComponentRestrictions({\n\t                'country': curCountryCode\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ClientEditController;\n\t}();\n\t\n\texports.default = ClientEditController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 706 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('clients.edit.title') : Messages('clients.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div ng-if=\\\"getDataInProgress\\\" class=\\\"modal-loader\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n        </div>\\r\\n        <form role=\\\"form\\\" ng-if=\\\"!getDataInProgress\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('clients.name')}}</label>\\r\\n                <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-short-name\\\" class=\\\"control-label\\\">{{Messages('clients.shortName')}}</label>\\r\\n                <div id=\\\"field-short-name\\\" dx-text-box=\\\"shortNameSettings\\\" dx-validator=\\\"shortNameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{Messages('address.country')}}</label>\\r\\n                <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"client-address-field\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                <div id=\\\"client-address-field\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                        <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                        <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                        <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                        <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-industry\\\" class=\\\"control-label\\\">{{Messages('clients.industry')}}</label>\\r\\n                <div id=\\\"field-industry\\\" dx-select-box=\\\"industrySettings\\\" dx-validator=\\\"industryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-notes\\\" class=\\\"control-label\\\">{{Messages('clients.notes')}}:</label>\\r\\n                <div id=\\\"field-notes\\\" dx-text-area=\\\"notesSettings\\\"></div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('clients.saving') : Messages('clients.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('clients.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 707 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<a ng-click=\\\"addNewUser()\\\" ng-if=\\\"$ctrl.item === 'user'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('users.new')}}</span>\\r\\n</a>\\r\\n\\r\\n<a ng-click=\\\"addNewBroker()\\\" ng-if=\\\"$ctrl.item === 'broker'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('brokers.new')}}</span>\\r\\n</a>\\r\\n\\r\\n<a ng-click=\\\"addNewSet()\\\" ng-if=\\\"$ctrl.item === 'asset'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('assets.new')}}</span>\\r\\n</a>\\r\\n\\r\\n<a ng-click=\\\"addNewClient()\\\" ng-if=\\\"$ctrl.item === 'client'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('clients.new')}}</span>\\r\\n</a>\"\n\n/***/ },\n/* 708 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _imagegallery = __webpack_require__(709);\n\t\n\tvar _imagegallery2 = _interopRequireDefault(_imagegallery);\n\t\n\tvar _imagegalleryTemplate = __webpack_require__(718);\n\t\n\tvar _imagegalleryTemplate2 = _interopRequireDefault(_imagegalleryTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// import template and controller from individual component directory\n\tvar ImageGalleryComponent = {\n\t    bindings: {\n\t        images: '=',\n\t        maxImageWidth: '=?',\n\t        maxImageHeight: '=?',\n\t        maxImageCount: '=?',\n\t        readonly: '=?',\n\t        imageAddCallback: '=?',\n\t        imageDeleteCallback: '=?',\n\t        sortingChangeCallback: '=?'\n\t    },\n\t    controller: _imagegallery2.default,\n\t    template: _imagegalleryTemplate2.default\n\t};\n\t\n\texports.default = ImageGalleryComponent;\n\n/***/ },\n/* 709 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _imagecropper = __webpack_require__(710);\n\t\n\tvar _imagecropper2 = _interopRequireDefault(_imagecropper);\n\t\n\tvar _imagecropperTemplate = __webpack_require__(717);\n\t\n\tvar _imagecropperTemplate2 = _interopRequireDefault(_imagecropperTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ImageGalleryController = function () {\n\t    ImageGalleryController.$inject = ['$scope', '$uibModal', 'FileService', 'ImageService', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function ImageGalleryController($scope, $uibModal, FileService, ImageService, UtilsService) {\n\t        _classCallCheck(this, ImageGalleryController);\n\t\n\t        // from component\n\t        this.images = this.images;\n\t        this.maxImageWidth = this.maxImageWidth || 500;\n\t        this.maxImageHeight = this.maxImageHeight || 500;\n\t        this.maxImageCount = this.maxImageCount || 10;\n\t        this.readonly = this.readonly || false;\n\t        this.imageAddCallback = this.imageAddCallback;\n\t        this.imageDeleteCallback = this.imageDeleteCallback;\n\t\n\t        // injected\n\t        this.$scope = $scope;\n\t        this.$uibModal = $uibModal;\n\t        this.fileService = FileService;\n\t        this.imageService = ImageService;\n\t        this.utils = UtilsService;\n\t\n\t        this.init();\n\t        this.initComponent();\n\t    }\n\t\n\t    _createClass(ImageGalleryController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            for (var i = 0; i < self.images.length; i++) {\n\t                if (!self.images[i].uniqueId) {\n\t                    self.images[i].uniqueId = self.utils.generateGuid();\n\t                }\n\t            }\n\t\n\t            self.enableUpload = true;\n\t            self.imageCount = self.images.length;\n\t\n\t            self.$scope.images = self.images;\n\t            self.$scope.readonly = self.readonly;\n\t        }\n\t    }, {\n\t        key: 'initComponent',\n\t        value: function initComponent() {\n\t            var self = this;\n\t\n\t            self.addImageBtnConfig = {\n\t                icon: 'add',\n\t                type: 'default',\n\t                text: (0, _messages2.default)('users.images.add'),\n\t                bindingOptions: {\n\t                    disabled: '!$ctrl.enableUpload'\n\t                }\n\t            };\n\t\n\t            self.uploadImage = function () {\n\t                var self = this;\n\t\n\t                if (self.readonly) {\n\t                    return;\n\t                }\n\t\n\t                var modal = this.$uibModal.open({\n\t                    controller: _imagecropper2.default,\n\t                    template: _imagecropperTemplate2.default,\n\t                    resolve: {\n\t                        maxImageHeight: self.maxImageHeight,\n\t                        maxImageWidth: self.maxImageWidth,\n\t                        viewPortType: function viewPortType() {\n\t                            return 'square';\n\t                        }\n\t                    }\n\t                    //size: 'lg'\n\t                });\n\t                modal.result.then(function (result) {\n\t                    if (self.imageCount >= self.maxImageCount) {\n\t                        self.checkImageLimit();\n\t                        return;\n\t                    }\n\t\n\t                    self.imageCount++;\n\t\n\t                    var image = self.createImage(result.file);\n\t                    image.imageFile.imageData = result.raw;\n\t\n\t                    self.addImage(image);\n\t                });\n\t\n\t                modal.closed.then(function () {});\n\t\n\t                /*$(\"#imageUploader\").val(null);\r\n\t                  setTimeout(function () {\r\n\t                    $(\"#imageUploader\").click();\r\n\t                }, 200);*/\n\t            };\n\t\n\t            self.addImage = function (image) {\n\t                if (self.readonly) return;\n\t\n\t                self.images.push(image);\n\t\n\t                if (!self.$scope.$$phase && (!self.$scope.$root || !self.$scope.$root.$$phase)) {\n\t                    self.$scope.$apply();\n\t                }\n\t\n\t                if (self.imageAddCallback) {\n\t                    self.imageAddCallback(image);\n\t                }\n\t\n\t                self.updateImageOrder();\n\t                self.checkImageLimit();\n\t            };\n\t\n\t            self.deleteImage = function (image) {\n\t                if (self.readonly) return;\n\t\n\t                for (var i = 0; i < self.images.length; i++) {\n\t                    if (self.images[i].uniqueId == image.uniqueId) {\n\t                        self.images.splice(i, 1);\n\t                        break;\n\t                    }\n\t                }\n\t\n\t                if (self.imageDeleteCallback) {\n\t                    self.imageDeleteCallback(image);\n\t                }\n\t\n\t                self.imageCount--;\n\t\n\t                self.updateImageOrder();\n\t                self.checkImageLimit();\n\t            };\n\t\n\t            self.onImageSort = function () {\n\t                self.updateImageOrder();\n\t            };\n\t\n\t            self.createImage = function (file) {\n\t                var image = {\n\t                    id: 0,\n\t                    uniqueId: self.utils.generateGuid(),\n\t                    filePath: '',\n\t                    order: 0,\n\t                    originalFileName: file.filename,\n\t                    isMain: 0,\n\t                    contentType: file.extension,\n\t                    imageFile: {\n\t                        data: [],\n\t                        imageData: file.data,\n\t                        contentType: file.extension,\n\t                        uniqueFileName: '',\n\t                        originalFileName: file.filename\n\t                    }\n\t                };\n\t\n\t                return image;\n\t            };\n\t\n\t            self.sortImage = function () {\n\t                self.images.sort(function (a, b) {\n\t                    if (a.order > b.order) {\n\t                        return 1;\n\t                    }\n\t                    if (a.order < b.order) {\n\t                        return -1;\n\t                    }\n\t                    return 0;\n\t                });\n\t            };\n\t\n\t            self.updateImageOrder = function () {\n\t                for (var i = 0; i < self.images.length; i++) {\n\t                    self.images[i].order = i;\n\t                    self.images[i].isMain = false;\n\t                }\n\t\n\t                if (self.images.length > 0) {\n\t                    self.images[0].isMain = true;\n\t                }\n\t\n\t                if (self.sortingChangeCallback) {\n\t                    self.sortingChangeCallback();\n\t                }\n\t            };\n\t\n\t            self.checkImageLimit = function () {\n\t                if (self.images.length < self.maxImageCount && !self.readonly) {\n\t                    self.enableUpload = true;\n\t                } else {\n\t                    self.enableUpload = false;\n\t                }\n\t\n\t                if (!self.$scope.$$phase && (!self.$scope.$root || !self.$scope.$root.$$phase)) {\n\t                    self.$scope.$apply();\n\t                }\n\t            };\n\t\n\t            self.loadFiles = function (files) {\n\t                if (self.readonly) return;\n\t\n\t                self.fileService.uploadFiles(files, function (singleFile) {\n\t                    if (self.imageCount >= self.maxImageCount) {\n\t                        self.checkImageLimit();\n\t                        return;\n\t                    }\n\t\n\t                    self.imageCount++;\n\t\n\t                    var image = self.createImage(singleFile);\n\t                    self.resizeImage(image, function (imageRaw) {\n\t                        image.imageFile.imageData = imageRaw;\n\t                        self.addImage(image);\n\t                    });\n\t                }, function () {\n\t                    self.checkImageLimit();\n\t                });\n\t            };\n\t\n\t            self.resizeImage = function (image, imageResizedCallback) {\n\t                var sourceImage = new Image();\n\t                sourceImage.src = image.imageFile.imageData;\n\t\n\t                var imgWidth = sourceImage.width;\n\t                var imgHeight = sourceImage.height;\n\t\n\t                if (sourceImage.width > self.maxImageWidth || sourceImage.height > self.maxImageHeight) {\n\t                    if (sourceImage.width > sourceImage.height) {\n\t                        imgWidth = self.maxImageWidth;\n\t                        imgHeight = sourceImage.height * (self.maxImageWidth / sourceImage.width);\n\t                    } else {\n\t                        imgWidth = sourceImage.width * (self.maxImageHeight / sourceImage.height);\n\t                        imgHeight = self.maxImageHeight;\n\t                    }\n\t                }\n\t\n\t                self.imageService.resizeImage(sourceImage, image.contentType, imgWidth, imgHeight, imageResizedCallback);\n\t            };\n\t\n\t            self.sortImage();\n\t\n\t            self.$scope.addImageBtnClick = self.addImageBtnClick;\n\t            self.$scope.deleteImage = self.deleteImage;\n\t            self.$scope.onImageSort = self.onImageSort;\n\t            self.$scope.Messages = _messages2.default;\n\t\n\t            angular.element(document).ready(function () {\n\t\n\t                $(\"#imageUploader\").change(function () {\n\t                    self.loadFiles($(\"#imageUploader\")[0].files);\n\t                });\n\t\n\t                self.checkImageLimit();\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ImageGalleryController;\n\t}();\n\t\n\texports.default = ImageGalleryController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 710 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _croppie = __webpack_require__(711);\n\t\n\tvar _croppie2 = _interopRequireDefault(_croppie);\n\t\n\t__webpack_require__(715);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ImageCropperController = function () {\n\t    ImageCropperController.$inject = ['$scope', '$rootScope', '$uibModalInstance', 'Upload', 'maxImageHeight', 'maxImageWidth', 'viewPortType'];\n\t\n\t    /*@ngInject*/\n\t    function ImageCropperController($scope, $rootScope, $uibModalInstance, Upload, maxImageHeight, maxImageWidth, viewPortType) {\n\t        _classCallCheck(this, ImageCropperController);\n\t\n\t        // from component\n\t\n\t        // injected\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t\n\t        this.maxImageHeight = maxImageHeight;\n\t        this.maxImageWidth = maxImageWidth;\n\t        this.viewPortType = viewPortType || 'square';\n\t\n\t        this.$croppie = null;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(ImageCropperController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            this.$scope.fileSelected = function (files, events, b) {\n\t                if (files && files.length > 0) {\n\t                    var reader = new FileReader();\n\t                    reader.onload = function (evt) {\n\t                        self.cropImage(evt.target.result);\n\t                    };\n\t                    reader.readAsDataURL(files[0]);\n\t                }\n\t            };\n\t\n\t            this.$scope.uploadImage = function () {\n\t                $(\"#upload\").val(null);\n\t\n\t                setTimeout(function () {\n\t                    $(\"#upload\").click();\n\t                }, 200);\n\t            };\n\t\n\t            this.$scope.save = function () {\n\t                self.$croppie.result({\n\t                    type: 'canvas',\n\t                    size: {\n\t                        width: self.maxImageWidth,\n\t                        height: self.maxImageHeight\n\t                    },\n\t                    format: self.getImageType(self.$scope.picFile)\n\t                }).then(function (resp) {\n\t                    self.$uibModalInstance.close({\n\t                        file: self.$scope.picFile,\n\t                        raw: resp\n\t                    });\n\t                });\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                self.$uibModalInstance.dismiss('cancel');\n\t            };\n\t\n\t            this.cropImage = function (file) {\n\t                var self = this;\n\t\n\t                setTimeout(function () {\n\t                    self.$croppie.bind({ url: file, zoom: 0 });\n\t                }, 50);\n\t            };\n\t\n\t            this.getImageType = function (file) {\n\t                if (file.name.split('.').pop().toLowerCase() == 'png') {\n\t                    return 'png';\n\t                } else {\n\t                    return 'jpeg';\n\t                }\n\t            };\n\t\n\t            angular.element(document).ready(function () {\n\t                var el = document.getElementById('cropPanel');\n\t\n\t                self.$croppie = new _croppie2.default(el, {\n\t                    enableExif: true,\n\t                    viewport: { width: 200, height: 200, type: self.viewPortType },\n\t                    boundary: { width: 300, height: 300 },\n\t                    mouseWheelZoom: true,\n\t                    showZoomer: true,\n\t                    enableOrientation: true,\n\t                    enforceBoundary: true\n\t                });\n\t\n\t                $(\"#upload\").change(function () {\n\t                    if ($(\"#upload\")[0].files && $(\"#upload\")[0].files.length > 0) {\n\t                        self.$scope.picFile = $(\"#upload\")[0].files[0];\n\t                        self.$scope.fileSelected($(\"#upload\")[0].files);\n\t\n\t                        if (!self.$rootScope.$$phase) self.$scope.$apply();\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ImageCropperController;\n\t}();\n\t\n\texports.default = ImageCropperController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n    <div class=\\\"inmodal hmodal-info image-cropper\\\">\\r\\n        <div class=\\\"color-line\\\"></div>\\r\\n        <div class=\\\"modal-header text-center\\\">\\r\\n            <h4 class=\\\"modal-title\\\">{{ Messages('image.cropper.title') }}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"up-buttons\\\">\\r\\n                <div ngf-drop ng-model=\\\"picFile\\\" ngf-change=\\\"fileSelected($files, $event, b)\\\" \\r\\n                        ngf-drag-over-class=\\\"{ accept:'dragover', reject:'dragover-err', delay:100}\\\" \\r\\n                        ngf-multiple=\\\"false\\\" ngf-pattern=\\\"image/*\\\">\\r\\n                    <div ng-show=\\\"!picFile\\\" class=\\\"upload-msg\\\">\\r\\n                        <span>{{ Messages('image.cropper.placeholder.empty') }}</span>\\r\\n                    </div>\\r\\n                    <div ng-show=\\\"picFile\\\" class=\\\"upload-image-wrap\\\">\\r\\n                        <div id=\\\"cropPanel\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"upload-button\\\">\\r\\n                <div class=\\\"add-entity-btn\\\" ng-click=\\\"uploadImage()\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    <span>{{ Messages('image.cropper.addbutton') }}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" class=\\\"hidden\\\" id=\\\"upload\\\" accept=\\\"image/*\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">\\r\\n                {{ saveInProgress ? Messages('image.cropper.saving') : Messages('image.cropper.save') }}\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n                {{ Messages('image.cropper.cancel') }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n/***/ },\n/* 718 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form class=\\\"form-horizontal image-gallery\\\" role=\\\"form\\\" name=\\\"galleryForm\\\">\\r\\n    <fieldset>\\r\\n        <div class=\\\"sortable-container grid\\\" sv-root sv-part=\\\"images\\\" sv-on-sort=\\\"onImageSort()\\\">\\r\\n            <div ng-repeat=\\\"image in images\\\" sv-element=\\\"opts\\\" class=\\\"image-list grid\\\">\\r\\n                <div class=\\\"image-item\\\">\\r\\n                    <div class=\\\"image-base\\\"><img draggable=\\\"false\\\" ng-if=\\\"image.filePath != ''\\\" ng-src=\\\"{{image.filePath}}\\\" /></div>\\r\\n                    <div class=\\\"image-base\\\"><img draggable=\\\"false\\\" ng-if=\\\"image.filePath == ''\\\" ng-src=\\\"{{image.imageFile.imageData}}\\\" /></div>\\r\\n                    <div class=\\\"image-delete\\\">\\r\\n                        <span class=\\\"fa fa-minus-circle\\\" ng-if=\\\"!readonly\\\" ng-click=\\\"deleteImage(image);\\\"></span>\\r\\n                    </div>\\r\\n                    <div class=\\\"image-favourite\\\">\\r\\n                        <div class=\\\"image-favorite-text\\\" draggable=\\\"false\\\" ng-if=\\\"image.isMain\\\">\\r\\n                            {{ Messages('assets.gallery.main') }}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"image-gallery-add-btn\\\" ng-if=\\\"$ctrl.enableUpload\\\" ng-click=\\\"$ctrl.uploadImage();\\\">\\r\\n            <div class=\\\"edge\\\"></div>\\r\\n            <div class=\\\"cont\\\">\\r\\n                <div>\\r\\n                    <i class=\\\"fa fa-picture-o\\\"></i>\\r\\n                </div>\\r\\n                {{ Messages('assets.gallery.add') }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n</form>\\r\\n<input type=\\\"file\\\" id=\\\"imageUploader\\\" multiple accept=\\\"image/*\\\" class=\\\"hidden\\\" />\"\n\n/***/ },\n/* 719 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _imagecropper = __webpack_require__(710);\n\t\n\tvar _imagecropper2 = _interopRequireDefault(_imagecropper);\n\t\n\tvar _imagecropperTemplate = __webpack_require__(717);\n\t\n\tvar _imagecropperTemplate2 = _interopRequireDefault(_imagecropperTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// import template and controller from individual component directory\n\tvar ImageCropperComponent = {\n\t    bindings: {\n\t        maxImageHeight: '=',\n\t        maxImageWidth: '=',\n\t        viewPortType: '=?'\n\t    },\n\t    controller: _imagecropper2.default,\n\t    template: _imagecropperTemplate2.default\n\t};\n\t\n\texports.default = ImageCropperComponent;\n\n/***/ },\n/* 720 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _attachements = __webpack_require__(721);\n\t\n\tvar _attachements2 = _interopRequireDefault(_attachements);\n\t\n\tvar _attachementsTemplate = __webpack_require__(722);\n\t\n\tvar _attachementsTemplate2 = _interopRequireDefault(_attachementsTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// import template and controller from individual component directory\n\tvar AttachementsComponent = {\n\t    bindings: {\n\t        documents: '=',\n\t        maxAttachementSize: '=?',\n\t        maxAttachementCount: '=?',\n\t        readonly: '=?',\n\t        documentCreateCallback: '=?',\n\t        documentAddCallback: '=?',\n\t        documentDeleteCallback: '=?'\n\t    },\n\t    controller: _attachements2.default,\n\t    template: _attachementsTemplate2.default\n\t};\n\t\n\texports.default = AttachementsComponent;\n\n/***/ },\n/* 721 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AttachementsController = function () {\n\t    AttachementsController.$inject = ['$scope', 'FileService', 'NotificationService', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function AttachementsController($scope, FileService, NotificationService, UtilsService) {\n\t        _classCallCheck(this, AttachementsController);\n\t\n\t        // from component\n\t        this.documents = this.documents;\n\t        this.maxAttachementSize = this.maxAttachementSize || 5000000;\n\t        this.maxAttachementCount = this.maxAttachementCount || 10;\n\t        this.readonly = this.readonly || false;\n\t        this.documentCreateCallback = this.documentCreateCallback;\n\t        this.documentAddCallback = this.documentAddCallback;\n\t        this.documentDeleteCallback = this.documentDeleteCallback;\n\t\n\t        // injected\n\t        this.$scope = $scope;\n\t        this.fileService = FileService;\n\t        this.notificationService = NotificationService;\n\t        this.utils = UtilsService;\n\t\n\t        this.init();\n\t        this.initComponent();\n\t        this.initList();\n\t    }\n\t\n\t    _createClass(AttachementsController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            for (var i = 0; i < self.documents.length; i++) {\n\t                if (!self.documents[i].uniqueId) {\n\t                    self.documents[i].uniqueId = self.utils.generateGuid();\n\t                }\n\t            }\n\t\n\t            self.enableUpload = true;\n\t            self.documentsCount = self.documents.length;\n\t            self.editNotesValue = ''; //dx-text-box doesn't support one way binding\n\t\n\t            self.$scope.Messages = _messages2.default;\n\t        }\n\t    }, {\n\t        key: 'initComponent',\n\t        value: function initComponent() {\n\t            var self = this;\n\t\n\t            self.editDocumentBtnConfig = {\n\t                icon: 'edit',\n\t                type: 'success',\n\t                bindingOptions: {\n\t                    visible: '!file.isEditMode'\n\t                },\n\t                onClick: function onClick(e) {\n\t                    if (e.model.file.isEditMode) {\n\t                        self.resetEditMode();\n\t                    } else {\n\t                        self.resetEditMode();\n\t\n\t                        self.editNotesValue = e.model.file.notes;\n\t                        e.model.file.isEditMode = true;\n\t                    }\n\t                }\n\t            };\n\t\n\t            self.deleteDocumentBtnConfig = {\n\t                icon: 'trash',\n\t                type: 'danger',\n\t                bindingOptions: {\n\t                    visible: '!file.isEditMode'\n\t                },\n\t                onClick: function onClick(e) {\n\t                    self.resetEditMode();\n\t                    self.deleteDocument(e.model.file);\n\t                }\n\t            };\n\t\n\t            self.saveDocumentBtnConfig = {\n\t                icon: 'save',\n\t                type: 'default',\n\t                bindingOptions: {\n\t                    visible: 'file.isEditMode'\n\t                },\n\t                onClick: function onClick(e) {\n\t                    e.model.file.notes = self.editNotesValue;\n\t                    self.resetEditMode();\n\t                }\n\t            };\n\t\n\t            self.cancelDocumentBtnConfig = {\n\t                icon: 'remove',\n\t                type: 'danger',\n\t                bindingOptions: {\n\t                    visible: 'file.isEditMode'\n\t                },\n\t                onClick: function onClick(e) {\n\t                    self.resetEditMode();\n\t                }\n\t            };\n\t\n\t            self.editDocumentTxbConfig = {\n\t                isValid: false,\n\t                bindingOptions: {\n\t                    value: '$ctrl.editNotesValue',\n\t                    visible: 'file.isEditMode'\n\t                }\n\t            };\n\t\n\t            self.editDocumentTxbValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 500 }],\n\t                validationGroup: 'documentNotes'\n\t            };\n\t\n\t            self.checkFileLimit = function () {\n\t                if (self.documents.length < self.maxAttachementCount && !self.readonly) {\n\t                    self.enableUpload = true;\n\t                } else {\n\t                    self.enableUpload = false;\n\t                }\n\t\n\t                if (!self.$scope.$$phase && (!self.$scope.$root || !self.$scope.$root.$$phase)) {\n\t                    self.$scope.$apply();\n\t                }\n\t            };\n\t\n\t            self.loadFiles = function (files) {\n\t                self.fileService.uploadFiles(files, function (singleFile) {\n\t                    if (singleFile.size > self.maxAttachementSize) {\n\t                        self.notificationService.error(\"Error loading file \" + singleFile.filename + \". Maximum file size is \" + self.maxAttachementSize + \" byte\");\n\t                        return;\n\t                    }\n\t\n\t                    if (self.documentsCount >= self.maxAttachementCount) {\n\t                        self.checkFileLimit();\n\t                        return;\n\t                    }\n\t\n\t                    self.documentsCount++;\n\t\n\t                    var document = self.createDocument(singleFile);\n\t                    self.documents.push(document);\n\t\n\t                    if (self.documentAddCallback) {\n\t                        self.documentAddCallback(document);\n\t                    }\n\t                }, function () {\n\t                    self.checkFileLimit();\n\t                    self.refreshList();\n\t                });\n\t            };\n\t\n\t            self.createDocument = function (file) {\n\t                var document = {\n\t                    id: 0,\n\t                    uniqueId: self.utils.generateGuid(),\n\t                    isEditMode: false,\n\t                    filePath: '',\n\t                    originalFileName: file.filename,\n\t                    notes: '',\n\t                    contentType: file.extension,\n\t                    documentFile: {\n\t                        data: [],\n\t                        fileData: file.data,\n\t                        contentType: file.extension,\n\t                        uniqueFileName: '',\n\t                        originalFileName: file.filename\n\t                    }\n\t                };\n\t\n\t                if (self.documentCreateCallback) {\n\t                    self.documentCreateCallback(document);\n\t                }\n\t\n\t                return document;\n\t            };\n\t\n\t            self.deleteDocument = function (file) {\n\t                for (var i = 0; i < self.documents.length; i++) {\n\t                    if (self.documents[i].uniqueId == file.uniqueId) {\n\t                        self.documents.splice(i, 1);\n\t                        break;\n\t                    }\n\t                }\n\t\n\t                self.documentsCount--;\n\t\n\t                if (self.documentDeleteCallback) {\n\t                    self.documentDeleteCallback(file);\n\t                }\n\t\n\t                self.checkFileLimit();\n\t                self.refreshList();\n\t            };\n\t\n\t            self.resetEditNotesValue = function () {\n\t                self.editNotesValue = '';\n\t            };\n\t\n\t            self.resetEditMode = function () {\n\t                self.resetEditNotesValue();\n\t\n\t                for (var i = 0; i < self.documents.length; i++) {\n\t                    self.documents[i].isEditMode = false;\n\t                }\n\t            };\n\t\n\t            angular.element(document).ready(function () {\n\t\n\t                $(\"#attachementsUploader\").change(function () {\n\t                    self.loadFiles($(\"#attachementsUploader\")[0].files);\n\t                });\n\t\n\t                self.checkFileLimit();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'initList',\n\t        value: function initList() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.notificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.store = new _array_store2.default({\n\t                data: self.documents, //self.asset.documents,\n\t                key: \"uniqueId\",\n\t                modified: function modified() {\n\t                    // 'modified' event handler\n\t                },\n\t                errorHandler: self.errorHandler.requestFailed\n\t            });\n\t\n\t            self.listDataSource = { store: self.store };\n\t\n\t            self.listOptions = {\n\t                dataSource: self.listDataSource\n\t            };\n\t\n\t            self.refreshList = function () {\n\t                $(\"#listContainer\").dxList('instance').reload();\n\t            };\n\t        }\n\t    }, {\n\t        key: 'addDocument',\n\t        value: function addDocument() {\n\t            $(\"#attachementsUploader\").val(null);\n\t            setTimeout(function () {\n\t                $(\"#attachementsUploader\").click();\n\t            }, 200);\n\t        }\n\t    }]);\n\t\n\t    return AttachementsController;\n\t}();\n\t\n\texports.default = AttachementsController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 722 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form name=\\\"settingsForm\\\">\\r\\n    <fieldset class=\\\"attachments\\\">\\r\\n        <div class=\\\"wrap\\\">\\r\\n            <div class=\\\"btn-group\\\" ng-if=\\\"$ctrl.enableUpload\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addDocument()\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    <span>{{Messages('assets.spaces.documents.add')}}</span>\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"dx-viewport\\\">\\r\\n                    <div class=\\\"list-container\\\">\\r\\n                        <div dx-list=\\\"$ctrl.listOptions\\\" id=\\\"listContainer\\\" dx-item-alias=\\\"file\\\">\\r\\n                            <div data-options=\\\"dxTemplate: {name: 'item'}\\\">\\r\\n                                <div class=\\\"col-sm-9 pull-left\\\">\\r\\n                                    <div class=\\\"file-icon pull-left\\\" data-type=\\\"{{file.contentType}}\\\"></div>\\r\\n                                    <div class=\\\"file-container\\\">\\r\\n                                        <a href=\\\"{{file.filePath ? file.filePath : '#'}}\\\">{{file.originalFileName}}</a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"wrapword\\\">\\r\\n                                        <span class=\\\"note-label\\\">Notes: </span>\\r\\n                                        <span class=\\\"note\\\" ng-show=\\\"!file.isEditMode\\\"><i>{{file.notes}}</i></span>\\r\\n                                        <div class=\\\"dx-field-value\\\" dx-text-box=\\\"$ctrl.editDocumentTxbConfig\\\" dx-validator=\\\"$ctrl.editDocumentTxbValidationRules\\\"></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-3 pull-right\\\" ng-show=\\\"!$ctrl.readonly\\\">\\r\\n                                    <div dx-button=\\\"$ctrl.deleteDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                    <div dx-button=\\\"$ctrl.editDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                    <div dx-button=\\\"$ctrl.cancelDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                    <div dx-button=\\\"$ctrl.saveDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n    <input type=\\\"file\\\" id=\\\"attachementsUploader\\\" multiple accept=\\\"*\\\" class=\\\"hidden\\\" />\\r\\n</form>\\r\\n\"\n\n/***/ },\n/* 723 */,\n/* 724 */,\n/* 725 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _breadcrumbpanel = __webpack_require__(726);\n\t\n\tvar _breadcrumbpanel2 = _interopRequireDefault(_breadcrumbpanel);\n\t\n\tvar _breadcrumbpanelTemplate = __webpack_require__(727);\n\t\n\tvar _breadcrumbpanelTemplate2 = _interopRequireDefault(_breadcrumbpanelTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BreadcrumbPanelComponent = {\n\t  bindings: {\n\t    states: '=',\n\t    title: '@'\n\t  },\n\t  transclude: true,\n\t  controller: _breadcrumbpanel2.default,\n\t  template: _breadcrumbpanelTemplate2.default\n\t};\n\t\n\texports.default = BreadcrumbPanelComponent;\n\n/***/ },\n/* 726 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BreadcrumbPanel = function () {\n\t    BreadcrumbPanel.$inject = ['$scope', '$state'];\n\t\n\t    /*@ngInject*/\n\t    function BreadcrumbPanel($scope, $state) {\n\t        _classCallCheck(this, BreadcrumbPanel);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Messages = _messages2.default;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(BreadcrumbPanel, [{\n\t        key: 'init',\n\t        value: function init() {}\n\t    }]);\n\t\n\t    return BreadcrumbPanel;\n\t}();\n\t\n\texports.default = BreadcrumbPanel;\n\n/***/ },\n/* 727 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"hpanel breadcrumb-panel\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <span ng-repeat=\\\"state in $ctrl.states\\\" ng-switch=\\\"$last\\\">\\r\\n            <a ng-if=\\\"state.path\\\" href=\\\"{{state.path}}\\\" ui-sref=\\\"{{state.path}}\\\">{{state.title}}</a>\\r\\n            <span ng-if=\\\"!state.path\\\" ng-class=\\\"{active: $last}\\\">{{state.title}}</span>\\r\\n            <span ng-switch-when=\\\"false\\\">/</span>\\r\\n        </span>\\r\\n        <ng-transclude></ng-transclude>\\r\\n        <span class=\\\"panel-title\\\">{{$ctrl.title}}</span>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 728 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _spaceDescription = __webpack_require__(729);\n\t\n\tvar _spaceDescription2 = _interopRequireDefault(_spaceDescription);\n\t\n\tvar _spaceDescriptionTemplate = __webpack_require__(730);\n\t\n\tvar _spaceDescriptionTemplate2 = _interopRequireDefault(_spaceDescriptionTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SpaceDescriptionComponent = {\n\t    bindings: {\n\t        data: '=',\n\t        context: '=?'\n\t    },\n\t    controller: _spaceDescription2.default,\n\t    template: _spaceDescriptionTemplate2.default\n\t};\n\t\n\texports.default = SpaceDescriptionComponent;\n\n/***/ },\n/* 729 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SpaceDescription = function () {\n\t    SpaceDescription.$inject = ['$scope', '$rootScope', 'uibDateParser', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function SpaceDescription($scope, $rootScope, uibDateParser, UtilsService) {\n\t        _classCallCheck(this, SpaceDescription);\n\t\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.messages = _messages2.default;\n\t        this.uibDateParser = uibDateParser;\n\t        this.utils = UtilsService;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(SpaceDescription, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.$scope.data = this.data;\n\t            this.$scope.context = this.context;\n\t        }\n\t    }, {\n\t        key: 'getOfficeType',\n\t        value: function getOfficeType(type) {\n\t            var officeType = _constants2.default.spaceTypeStorePlain().find(function (item) {\n\t                return item.value === type;\n\t            });\n\t            return officeType.text;\n\t        }\n\t    }, {\n\t        key: 'getStatus',\n\t        value: function getStatus(status) {\n\t            switch (status) {\n\t                case 2:\n\t                    return (0, _messages2.default)('assets.spaces.filter.occupied');\n\t                case 3:\n\t                    return (0, _messages2.default)('assets.spaces.filter.vacant');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getParsedDate',\n\t        value: function getParsedDate(date) {\n\t            return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\n\t        }\n\t    }, {\n\t        key: 'closeSidebar',\n\t        value: function closeSidebar() {\n\t            this.$rootScope.$broadcast('right-sidebar:close');\n\t        }\n\t    }]);\n\t\n\t    return SpaceDescription;\n\t}();\n\t\n\texports.default = SpaceDescription;\n\n/***/ },\n/* 730 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"space-descr\\\">\\r\\n    <div ng-if=\\\"context === 'sidebar'\\\" class=\\\"side-close\\\">\\r\\n        <button class=\\\"btn btn-default pull-left\\\" ng-click=\\\"$ctrl.closeSidebar()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"cont\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.status')}}</span>\\r\\n            <p class=\\\"stat-text\\\" ng-class=\\\"data.status === 3 ? 'success' : 'error'\\\">{{$ctrl.getStatus(data.status)}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"big\\\">\\r\\n        {{$ctrl.messages('assets.spaces.unit')}} {{data.number}}\\r\\n    </div>\\r\\n    <div>\\r\\n        <div class=\\\"labels_strip\\\">\\r\\n            <span class=\\\"stat-label\\\">{{data.towerName}}</span> <span class=\\\"stat-label\\\">{{data.floorName}}</span>\\r\\n        </div>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.utils.generateAddress(data)}}</p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.rentableArea')}}</span>\\r\\n        <p class=\\\"stat-text\\\">\\r\\n            <span class=\\\"huge\\\">{{data.rentableArea}}</span>\\r\\n            <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\" />\\r\\n        </p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.type')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getOfficeType(data.type)}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.availability')}}</span>\\r\\n            <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.contract && data.contract.endsAt)}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.asking_price')}}</span>\\r\\n            <p class=\\\"stat-text\\\">\\r\\n                <span ng-if=\\\"data.minAskingPrice !== null && data.maxAskingPrice !== null\\\">\\r\\n                    € {{data.minAskingPrice}} - € {{data.maxAskingPrice}}\\r\\n                </span>\\r\\n                <span ng-if=\\\"!data.minAskingPrice && !data.maxAskingPrice\\\">€ 0</span>\\r\\n                <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/>\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"stats\\\">\\r\\n        <div class=\\\"big\\\">\\r\\n            {{$ctrl.messages('assets.spaces.tenant_name')}}\\r\\n        </div>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.tenantName}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.lease_start_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.contract && data.contract.startsAt)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.lease_end_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.contract && data.contract.endsAt)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.in_place_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.inPlaceRent}} €/<span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/></p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.net_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.netRent}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.vat')}} @ {{data.vat_percent || 10}}%</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.vatCosts}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.additional_cost')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.additionalCosts}} €</p>\\r\\n\\r\\n        <hr class=\\\"total_hr\\\">\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.total_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.totalCosts}} €</p>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 731 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _tenantDescription = __webpack_require__(732);\n\t\n\tvar _tenantDescription2 = _interopRequireDefault(_tenantDescription);\n\t\n\tvar _tenantDescriptionTemplate = __webpack_require__(733);\n\t\n\tvar _tenantDescriptionTemplate2 = _interopRequireDefault(_tenantDescriptionTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar TenantDescriptionComponent = {\n\t    bindings: {\n\t        data: '=',\n\t        context: '=?'\n\t    },\n\t    controller: _tenantDescription2.default,\n\t    template: _tenantDescriptionTemplate2.default\n\t};\n\t\n\texports.default = TenantDescriptionComponent;\n\n/***/ },\n/* 732 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TenantDescription = function () {\n\t    TenantDescription.$inject = ['$scope', '$rootScope', 'uibDateParser', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function TenantDescription($scope, $rootScope, uibDateParser, UtilsService) {\n\t        _classCallCheck(this, TenantDescription);\n\t\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.messages = _messages2.default;\n\t        this.uibDateParser = uibDateParser;\n\t        this.utils = UtilsService;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(TenantDescription, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            this.$scope.data = this.data;\n\t            this.$scope.context = this.context;\n\t            this.$scope.selectedSpace = this.data.spaces[0];\n\t\n\t            this.$scope.vatCosts = 0;\n\t            this.$scope.additionalCosts = 0;\n\t            this.data.spaces.forEach(function (item) {\n\t                _this.$scope.vatCosts = (Number(_this.$scope.vatCosts) + item.vatCost).toFixed(2);\n\t                _this.$scope.additionalCosts = (Number(_this.$scope.additionalCosts) + item.additionalCost).toFixed(2);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getTowersCount',\n\t        value: function getTowersCount() {\n\t            var uniqueTowers = [];\n\t            this.$scope.data.spaces.forEach(function (space) {\n\t                if (uniqueTowers.indexOf(space.towerId) === -1) {\n\t                    uniqueTowers.push(space.towerId);\n\t                }\n\t            });\n\t\n\t            return uniqueTowers.length;\n\t        }\n\t    }, {\n\t        key: 'getIndustryType',\n\t        value: function getIndustryType(typeId) {\n\t            var industry = void 0;\n\t            _constants2.default.clientsIndustryPlain().forEach(function (item) {\n\t                if (item.value === typeId) {\n\t                    industry = item.text;\n\t                }\n\t            });\n\t            return industry;\n\t        }\n\t    }, {\n\t        key: 'getStatus',\n\t        value: function getStatus(status) {\n\t            return status === 0 ? (0, _messages2.default)('assets.tenants.filter.in_place') : (0, _messages2.default)('assets.tenants.filter.expired');\n\t        }\n\t    }, {\n\t        key: 'selectSpace',\n\t        value: function selectSpace(spaceId) {\n\t            var _this2 = this;\n\t\n\t            this.data.spaces.forEach(function (item) {\n\t                if (item.id === spaceId) {\n\t                    _this2.$scope.selectedSpace = item;\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getParsedDate',\n\t        value: function getParsedDate(date) {\n\t            return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\n\t        }\n\t    }, {\n\t        key: 'closeSidebar',\n\t        value: function closeSidebar() {\n\t            this.$rootScope.$broadcast('right-sidebar:close');\n\t        }\n\t    }]);\n\t\n\t    return TenantDescription;\n\t}();\n\t\n\texports.default = TenantDescription;\n\n/***/ },\n/* 733 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"tenant-descr\\\">\\r\\n    <div ng-if=\\\"context === 'sidebar'\\\" class=\\\"side-close\\\">\\r\\n        <button class=\\\"btn btn-default pull-left\\\" ng-click=\\\"$ctrl.closeSidebar()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"cont\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.status')}}</span>\\r\\n            <p class=\\\"stat-text\\\" ng-class=\\\"data.status === 0 ? 'success' : 'error'\\\">{{$ctrl.getStatus(data.status)}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.name')}}</span>\\r\\n            <p class=\\\"stat-text\\\">{{data.tenantName}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.type')}}</span>\\r\\n            <p class=\\\"stat-text\\\">{{$ctrl.getIndustryType(data.industryId)}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.contract_number')}}</span>\\r\\n            <p class=\\\"stat-text\\\">234234</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.total_area')}}</span>\\r\\n            <p class=\\\"stat-text\\\">\\r\\n                <span class=\\\"huge\\\">{{data.totalArea}} </span>\\r\\n                <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\" />\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"big\\\">\\r\\n        {{$ctrl.messages('assets.tenants.units')}}: {{data.spaces.length}} in {{$ctrl.getTowersCount()}} {{$ctrl.messages('assets.tenants.towers')}}\\r\\n    </div>\\r\\n    <div class=\\\"spaces\\\">\\r\\n        <span ng-repeat=\\\"space in data.spaces\\\" ng-class=\\\"space.id === selectedSpace.id ? 'selected' : ''\\\" ng-click=\\\"$ctrl.selectSpace(space.id)\\\">\\r\\n            [{{space.number}}]\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"space_descr\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-6\\\">\\r\\n                <div class=\\\"header\\\">\\r\\n                    <span class=\\\"stat-label\\\">{{selectedSpace.number}}</span>\\r\\n                    <span class=\\\"stat-label\\\">{{selectedSpace.towerName}}</span>\\r\\n                    <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.floor')}} {{selectedSpace.floorId}}</span>\\r\\n                </div>\\r\\n                <p class=\\\"stat-text\\\">{{$ctrl.utils.generateAddress(selectedSpace)}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col-xs-6\\\">\\r\\n                <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.area_in_unit')}}</span>\\r\\n                <p class=\\\"stat-text\\\">\\r\\n                    <span class=\\\"huge\\\">{{selectedSpace.rentableArea}} </span>\\r\\n                    <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/>\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"stats\\\">\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.lease_start_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.startDate)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.lease_end_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.endDate)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.in_place_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">\\r\\n            {{(data.totalRentCost / data.totalArea).toFixed(2)}} €/<span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/>\\r\\n            <span ng-if=\\\"data.spaces.length > 1\\\" class=\\\"tenants-avg-indicator\\\">\\r\\n                AVG\\r\\n            </span>\\r\\n        </p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.net_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{(data.totalRentCost - vatCosts - additionalCosts).toFixed(2)}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.vat')}} @ {{data.vat_percent || 10}}%</span>\\r\\n        <p class=\\\"stat-text\\\">{{vatCosts}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.additional_cost')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{additionalCosts}} €</p>\\r\\n\\r\\n        <hr class=\\\"total_hr\\\">\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.total_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.totalRentCost}} €</p>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 734 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _bodyBlocker = __webpack_require__(735);\n\t\n\tvar _bodyBlocker2 = _interopRequireDefault(_bodyBlocker);\n\t\n\tvar _bodyBlockerTemplate = __webpack_require__(736);\n\t\n\tvar _bodyBlockerTemplate2 = _interopRequireDefault(_bodyBlockerTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BodyBlockerComponent = {\n\t  bindings: {},\n\t  controller: _bodyBlocker2.default,\n\t  template: _bodyBlockerTemplate2.default\n\t};\n\t\n\texports.default = BodyBlockerComponent;\n\n/***/ },\n/* 735 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SpaceDescription = function () {\n\t    SpaceDescription.$inject = ['$rootScope'];\n\t\n\t    /*@ngInject*/\n\t    function SpaceDescription($rootScope) {\n\t        _classCallCheck(this, SpaceDescription);\n\t\n\t        this.$rootScope = $rootScope;\n\t    }\n\t\n\t    _createClass(SpaceDescription, [{\n\t        key: 'onClick',\n\t        value: function onClick() {\n\t            this.$rootScope.$broadcast('right-sidebar:close');\n\t        }\n\t    }]);\n\t\n\t    return SpaceDescription;\n\t}();\n\t\n\texports.default = SpaceDescription;\n\n/***/ },\n/* 736 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"blocker\\\" id=\\\"body-blocker\\\" ng-click=\\\"$ctrl.onClick()\\\"></div>\"\n\n/***/ },\n/* 737 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _usermenu = __webpack_require__(738);\n\t\n\tvar _usermenu2 = _interopRequireDefault(_usermenu);\n\t\n\tvar _usermenuTemplate = __webpack_require__(739);\n\t\n\tvar _usermenuTemplate2 = _interopRequireDefault(_usermenuTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar UserMenuComponent = {\n\t    bindings: {\n\t        userInfo: '=',\n\t        brokerInfo: '=?'\n\t    },\n\t    controller: _usermenu2.default,\n\t    template: _usermenuTemplate2.default\n\t};\n\t\n\texports.default = UserMenuComponent;\n\n/***/ },\n/* 738 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UserMenu = function () {\n\t    UserMenu.$inject = ['$scope', '$state', 'SecurityService'];\n\t\n\t    /*@ngInject*/\n\t    function UserMenu($scope, $state, SecurityService) {\n\t        _classCallCheck(this, UserMenu);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.securityService = SecurityService;\n\t        this.messages = _messages2.default;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(UserMenu, [{\n\t        key: 'init',\n\t        value: function init() {}\n\t    }, {\n\t        key: 'signOut',\n\t        value: function signOut() {\n\t            this.securityService.signOut();\n\t            this.$state.go('login', null, { reload: true });\n\t        }\n\t    }]);\n\t\n\t    return UserMenu;\n\t}();\n\t\n\texports.default = UserMenu;\n\n/***/ },\n/* 739 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--<ul class=\\\"mobile-menu mobile-navbar navbar-left user-menu\\\">\\r\\n    <div >Test</div>\\r\\n</ul>-->\\r\\n<ul class=\\\"nav navbar-nav navbar-right user-menu\\\">\\r\\n    <li class=\\\"dropdown\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">{{$ctrl.userInfo.displayName}}<span class=\\\"caret\\\"></span></a>\\r\\n\\r\\n        <div class=\\\"dropdown-menu dropdown-profile hidden-xs multi-level animated flipInX\\\">\\r\\n            <div class=\\\"media\\\">\\r\\n            <div class=\\\"profile-image pull-left\\\">\\r\\n                <img class=\\\"media-object user-photo\\\" src=\\\"img/user.svg\\\" alt=\\\"...\\\">\\r\\n            </div>\\r\\n            <div class=\\\"media-body\\\">\\r\\n                <div class=\\\"profile-name text-overflow\\\">{{$ctrl.userInfo.displayName}}</div>\\r\\n                <div class=\\\"profile-company text-overflow\\\">{{$ctrl.userInfo.roleName}}</div>\\r\\n                <div class=\\\"profile-mail text-overflow small text-muted\\\">{{$ctrl.userInfo.email}}</div>\\r\\n            </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <ul class=\\\"nav profile-links\\\">\\r\\n                <li><a ui-sref=\\\"#\\\">{{$ctrl.messages('mainheader.settings.account')}}</a></li>\\r\\n                <!--<li class=\\\"divider\\\"></li>-->\\r\\n                <li><a ng-click=\\\"$ctrl.signOut()\\\">{{$ctrl.messages('mainheader.signout')}}</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </li>\\r\\n</ul>\"\n\n/***/ },\n/* 740 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _actionmenu = __webpack_require__(741);\n\t\n\tvar _actionmenu2 = _interopRequireDefault(_actionmenu);\n\t\n\tvar _actionmenuTemplate = __webpack_require__(742);\n\t\n\tvar _actionmenuTemplate2 = _interopRequireDefault(_actionmenuTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ActionMenuComponent = {\n\t    bindings: {\n\t        userInfo: '=',\n\t        brokerInfo: '=?'\n\t    },\n\t    controller: _actionmenu2.default,\n\t    template: _actionmenuTemplate2.default\n\t};\n\t\n\texports.default = ActionMenuComponent;\n\n/***/ },\n/* 741 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ActionMenu = function () {\n\t    ActionMenu.$inject = ['$scope', '$state', 'SecurityService', 'Activities'];\n\t\n\t    /*@ngInject*/\n\t    function ActionMenu($scope, $state, SecurityService, Activities) {\n\t        _classCallCheck(this, ActionMenu);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.securityService = SecurityService;\n\t        this.activities = Activities;\n\t        this.messages = _messages2.default;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(ActionMenu, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.applyActivities();\n\t        }\n\t    }, {\n\t        key: 'applyActivities',\n\t        value: function applyActivities() {\n\t            var _this = this;\n\t\n\t            this.securityService.getActivities().then(function () {\n\t                _this.securityService.canDo(_this.activities.HomeView).then(function (result) {\n\t                    return _this.homeAvailable = result;\n\t                }, function () {\n\t                    return _this.homeAvailable = false;\n\t                });\n\t                _this.securityService.canDo(_this.activities.BrokersView).then(function (result) {\n\t                    return _this.brokersAvailable = result;\n\t                }, function () {\n\t                    return _this.brokersAvailable = false;\n\t                });\n\t                _this.securityService.canDo(_this.activities.UsersView).then(function (result) {\n\t                    return _this.usersAvailable = result;\n\t                }, function () {\n\t                    return _this.usersAvailable = false;\n\t                });\n\t                _this.securityService.canDo(_this.activities.AssetsManage).then(function (result) {\n\t                    return _this.assetsAvailable = result;\n\t                }, function () {\n\t                    return _this.assetsAvailable = false;\n\t                });\n\t                _this.securityService.canDo(_this.activities.AssetsView).then(function (result) {\n\t                    return _this.assetsViewAvailable = result;\n\t                }, function () {\n\t                    return _this.assetsViewAvailable = false;\n\t                });\n\t                _this.securityService.canDo(_this.activities.ClientsManage).then(function (result) {\n\t                    return _this.clientsAvailable = result;\n\t                }, function () {\n\t                    return _this.clientsAvailable = false;\n\t                });\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return ActionMenu;\n\t}();\n\t\n\texports.default = ActionMenu;\n\n/***/ },\n/* 742 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<ul class=\\\"nav navbar-nav navbar-right user-menu\\\">\\r\\n    <li class=\\\"dropdown\\\">\\r\\n        <div class=\\\"dropdown-toggle header-link\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n            <i class=\\\"pe-7s-keypad\\\"></i>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dropdown-menu hdropdown bigmenu animated flipInX\\\">\\r\\n            <table>\\r\\n                <tbody ng-if=\\\"$ctrl.userInfo.roleId === 2\\\">\\r\\n                    <tr>\\r\\n                        <td ng-show=\\\"$ctrl.assetsViewAvailable\\\">\\r\\n                            <a ui-sref=\\\"asset-stats\\\">\\r\\n                                <i class=\\\"pe pe-7s-culture text-info\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.assets')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td ng-show=\\\"$ctrl.clientsAvailable\\\">\\r\\n                            <a <a ui-sref=\\\"clients\\\">\\r\\n                                <i class=\\\"pe pe-7s-users text-warning\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.clients')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tbody ng-if=\\\"$ctrl.userInfo.roleId === 1\\\">\\r\\n                    <tr>\\r\\n                        <td ng-show=\\\"$ctrl.brokersAvailable\\\">\\r\\n                            <a <a ui-sref=\\\"brokers\\\">\\r\\n                                <i class=\\\"pe pe-7s-users text-warning\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.brokers')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td ng-show=\\\"$ctrl.usersAvailable\\\">\\r\\n                            <a <a ui-sref=\\\"users\\\">\\r\\n                                <i class=\\\"pe pe-7s-users text-warning\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.users')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td ng-show=\\\"$ctrl.assetsAvailable\\\">\\r\\n                            <a ui-sref=\\\"assets\\\">\\r\\n                                <i class=\\\"pe pe-7s-culture text-info\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.assets')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </li>\\r\\n</ul>\"\n\n/***/ },\n/* 743 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _footer = __webpack_require__(744);\n\t\n\tvar _footer2 = _interopRequireDefault(_footer);\n\t\n\tvar _footerTemplate = __webpack_require__(745);\n\t\n\tvar _footerTemplate2 = _interopRequireDefault(_footerTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar FooterComponent = {\n\t  bindings: {},\n\t  controller: _footer2.default,\n\t  template: _footerTemplate2.default\n\t};\n\t\n\texports.default = FooterComponent;\n\n/***/ },\n/* 744 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Footer = function () {\n\t    Footer.$inject = ['$scope', '$state'];\n\t\n\t    /*@ngInject*/\n\t    function Footer($scope, $state) {\n\t        _classCallCheck(this, Footer);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.messages = _messages2.default;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(Footer, [{\n\t        key: 'init',\n\t        value: function init() {}\n\t    }]);\n\t\n\t    return Footer;\n\t}();\n\t\n\texports.default = Footer;\n\n/***/ },\n/* 745 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"footer fixed-footer\\\">\\r\\n        <span class=\\\"pull-right\\\">\\r\\n            Tower360 GmBH 2016-17\\r\\n        </span>\\r\\n        Powered by <img src=\\\"./img/web-logo.svg\\\" style=\\\"width: 50px; height: 18px; display: inline-block\\\">\\r\\n</div>\"\n\n/***/ },\n/* 746 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery) {'use strict';\n\t\n\tvar _jquery = __webpack_require__(162);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _custom_store = __webpack_require__(412);\n\t\n\tvar _custom_store2 = _interopRequireDefault(_custom_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// export for others scripts to use\n\twindow.$ = _jquery2.default;\n\t__webpack_provided_window_dot_jQuery = _jquery2.default;\n\t\n\t(function () {\n\t    'use strict';\n\t\n\t    angular.module('tower360.utils', []);\n\t\n\t    angular.module('tower360.utils').factory('jqPromise', [function () {\n\t        return function (promise) {\n\t            var jqDeferred = _jquery2.default.Deferred();\n\t            promise.then(function (val) {\n\t                jqDeferred.resolve.apply(jqDeferred, val);\n\t            }, function (err) {\n\t                jqDeferred.reject.apply(jqDeferred, err);\n\t            });\n\t\n\t            return jqDeferred.promise();\n\t        };\n\t    }]);\n\t\n\t    angular.module('tower360.utils').factory('StoreAdapter', ['jqPromise', function (jqPromise) {\n\t        return {\n\t            createStore: function createStore(resource, queryParams, errorHandler) {\n\t                queryParams = typeof queryParams !== 'undefined' ? queryParams : {};\n\t\n\t                errorHandler = typeof errorHandler !== 'undefined' ? errorHandler : {\n\t                    requestFailed: function requestFailed(response) {}\n\t                };\n\t\n\t                var handleError = function handleError(response) {\n\t                    errorHandler.requestFailed(response);\n\t                };\n\t\n\t                return new _custom_store2.default({\n\t                    key: \"id\",\n\t                    load: function load(loadOptions) {\n\t                        var params = loadOptions.sort ? _jquery2.default.extend({}, queryParams, loadOptions.sort[0]) : queryParams;\n\t\n\t                        return jqPromise(resource.query(params).$promise.then(function (data) {\n\t                            return [data, { totalCount: data.length }];\n\t                        }, function (response) {\n\t                            handleError(response);\n\t                        }));\n\t                    },\n\t\n\t                    byKey: function byKey(key) {\n\t                        return jqPromise(resource.get({ id: key }).$promise.catch(function (response) {\n\t                            handleError(response);\n\t                        }));\n\t                    },\n\t\n\t                    insert: function insert(data) {\n\t                        return jqPromise(resource.save(data).$promise.catch(function (response) {\n\t                            handleError(response);\n\t                        }));\n\t                    },\n\t\n\t                    update: function update(key, data) {\n\t                        data.id = key;\n\t                        return jqPromise(resource.update(data).$promise.catch(function (response) {\n\t                            handleError(response);\n\t                        }));\n\t                    },\n\t\n\t                    remove: function remove(key) {\n\t                        return jqPromise(resource.delete({ id: key }).$promise.catch(function (response) {\n\t                            handleError(response);\n\t                        }));\n\t                    },\n\t\n\t                    totalCount: function totalCount(loadOptions) {\n\t                        return jqPromise(resource.count().$promise.then(function (data) {\n\t                            return [data.count];\n\t                        }, function (response) {\n\t                            handleError(response);\n\t                        }));\n\t                    }\n\t                });\n\t            }\n\t        };\n\t    }]);\n\t})();\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 747 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _paneltoolsTemplate = __webpack_require__(748);\n\t\n\tvar _paneltoolsTemplate2 = _interopRequireDefault(_paneltoolsTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PanelToolsDirective = function () {\n\t    /*@ngInject*/\n\t    function PanelToolsDirective() {\n\t        _classCallCheck(this, PanelToolsDirective);\n\t\n\t        this.restrict = 'A';\n\t        this.scope = true;\n\t        this.template = _paneltoolsTemplate2.default;\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(PanelToolsDirective, [{\n\t        key: 'controller',\n\t        value: ['$scope', '$element', '$timeout', function controller($scope, $element, $timeout) {\n\t            // Function for collapse ibox\n\t            $scope.showhide = function () {\n\t                var hpanel = $element.closest('div.hpanel');\n\t                var icon = $element.find('i:first');\n\t                var body = hpanel.find('div.panel-body');\n\t                var footer = hpanel.find('div.panel-footer');\n\t                body.slideToggle(300);\n\t                footer.slideToggle(200);\n\t                // Toggle icon from up to down\n\t                icon.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\n\t                hpanel.toggleClass('').toggleClass('panel-collapse');\n\t                $timeout(function () {\n\t                    hpanel.resize();\n\t                    hpanel.find('[id^=map-]').resize();\n\t                }, 50);\n\t            };\n\t\n\t            // Function for close ibox\n\t            $scope.closebox = function () {\n\t                var hpanel = $element.closest('div.hpanel');\n\t                hpanel.remove();\n\t            };\n\t        }]\n\t\n\t        /*@ngInject*/\n\t\n\t    }], [{\n\t        key: 'activate',\n\t        value: function activate() {\n\t            PanelToolsDirective.instance = new PanelToolsDirective();\n\t            return PanelToolsDirective.instance;\n\t        }\n\t    }]);\n\t\n\t    return PanelToolsDirective;\n\t}();\n\t\n\texports.default = PanelToolsDirective;\n\t;\n\n/***/ },\n/* 748 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!-- This is template for panel tools -->\\r\\n<!-- It contains collapse function (showhide) and close function (closebox) -->\\r\\n<!-- All function is handled from directive panelTools in directives.js file -->\\r\\n<div class=\\\"panel-tools\\\">\\r\\n    <a ng-click=\\\"showhide()\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\r\\n    <!--<a ng-click=\\\"closebox()\\\"><i class=\\\"fa fa-times\\\"></i></a>-->\\r\\n</div>\"\n\n/***/ },\n/* 749 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AnimatePanelDirective = function () {\n\t    AnimatePanelDirective.$inject = ['$timeout', '$state'];\n\t\n\t    /*@ngInject*/\n\t    function AnimatePanelDirective($timeout, $state) {\n\t        _classCallCheck(this, AnimatePanelDirective);\n\t\n\t        this.restrict = 'A';\n\t        this.$state = $state;\n\t        this.$timeout = $timeout;\n\t    }\n\t\n\t    _createClass(AnimatePanelDirective, [{\n\t        key: 'link',\n\t        value: function link(scope, element, attrs) {\n\t            var self = this;\n\t\n\t            //Set default values for start animation and delay\n\t            var startAnimation = 0,\n\t                delay = 0.06,\n\t                // seconds\n\t            start = Math.abs(delay) + startAnimation;\n\t\n\t            // Set default values for attrs\n\t            if (!attrs.effect) {\n\t                attrs.effect = 'zoomIn';\n\t            }\n\t\n\t            if (attrs.delay) {\n\t                delay = attrs.delay / 10;\n\t            } else {\n\t                delay = 0.06;\n\t            }\n\t\n\t            if (!attrs.child) {\n\t                attrs.child = '.row > div';\n\t            } else {\n\t                attrs.child = \".\" + attrs.child;\n\t            }\n\t\n\t            // Get all visible element and set opactiy to 0\n\t            var panel = element.find(attrs.child);\n\t            panel.addClass('opacity-0');\n\t\n\t            // Wrap to $timeout to execute after ng-repeat\n\t            self.$timeout(function () {\n\t\n\t                // Get all elements and add effect class\n\t                panel.addClass('animated-panel').addClass(attrs.effect);\n\t\n\t                var panelsCount = panel.length + 10,\n\t                    animateTime = panelsCount * delay * 10000 / 10;\n\t\n\t                // Add delay for each child elements\n\t                panel.each(function (i, elm) {\n\t                    start += delay;\n\t                    var rounded = Math.round(start * 10) / 10;\n\t                    $(elm).css('animation-delay', rounded + 's');\n\t                    // Remove opacity 0 after finish\n\t                    $(elm).removeClass('opacity-0');\n\t                });\n\t\n\t                // Clear animation after finish\n\t                self.$timeout(function () {\n\t                    $('.stagger').css('animation', '');\n\t                    $('.stagger').removeClass(attrs.effect).removeClass('animated-panel').removeClass('stagger');\n\t                    panel.resize();\n\t                }, animateTime);\n\t            });\n\t        }\n\t\n\t        /*@ngInject*/\n\t\n\t    }], [{\n\t        key: 'activate',\n\t        value: ['$timeout', '$state', function activate($timeout, $state) {\n\t            AnimatePanelDirective.instance = new AnimatePanelDirective($timeout, $state);\n\t            return AnimatePanelDirective.instance;\n\t        }]\n\t    }]);\n\t\n\t    return AnimatePanelDirective;\n\t}();\n\t\n\texports.default = AnimatePanelDirective;\n\t;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 750 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function ($timeout, $window) {\n\t    var _swal = $window.swal;\n\t    return {\n\t        swal: function swal(arg1, arg2, arg3) {\n\t            $timeout(function () {\n\t                if (typeof arg2 === 'function') {\n\t                    _swal(arg1, function (isConfirm) {\n\t                        $timeout(function () {\n\t                            arg2(isConfirm);\n\t                        });\n\t                    }, arg3);\n\t                } else {\n\t                    _swal(arg1, arg2, arg3);\n\t                }\n\t            }, 200);\n\t        },\n\t        success: function success(title, message) {\n\t            $timeout(function () {\n\t                _swal(title, message, 'success');\n\t            }, 200);\n\t        },\n\t        error: function error(title, message) {\n\t            $timeout(function () {\n\t                _swal(title, message, 'error');\n\t            }, 200);\n\t        },\n\t        warning: function warning(title, message) {\n\t            $timeout(function () {\n\t                _swal(title, message, 'warning');\n\t            }, 200);\n\t        },\n\t        info: function info(title, message) {\n\t            $timeout(function () {\n\t                _swal(title, message, 'info');\n\t            }, 200);\n\t        }\n\t\n\t    };\n\t};\n\n/***/ },\n/* 751 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _homeController = __webpack_require__(752);\n\t\n\tvar _homeController2 = _interopRequireDefault(_homeController);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.home', []).controller('HomeController', _homeController2.default);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 752 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HomeController = function () {\n\t    HomeController.$inject = ['$scope', '$state', 'SecurityService'];\n\t\n\t    /*@ngInject*/\n\t    function HomeController($scope, $state, SecurityService) {\n\t        _classCallCheck(this, HomeController);\n\t\n\t        this.$state = $state;\n\t        this.securityService = SecurityService;\n\t        this.init();\n\t    }\n\t\n\t    _createClass(HomeController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            this.securityService.getUserInfo().then(function (result) {\n\t                var redirectTarget = 'brokers';\n\t                if (result.roleId === 2) {\n\t                    redirectTarget = 'asset-stats';\n\t                }\n\t                _this.$state.go(redirectTarget);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return HomeController;\n\t}();\n\t\n\texports.default = HomeController;\n\n/***/ },\n/* 753 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _loginController = __webpack_require__(754);\n\t\n\tvar _loginController2 = _interopRequireDefault(_loginController);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.login', []).controller('LoginController', _loginController2.default);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 754 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar LoginController = function () {\n\t  LoginController.$inject = ['$state', '$stateParams', 'SecurityService', 'NotificationService', 'localStorageService'];\n\t\n\t  /*@ngInject*/\n\t  function LoginController($state, $stateParams, SecurityService, NotificationService, localStorageService) {\n\t    _classCallCheck(this, LoginController);\n\t\n\t    this.$state = $state;\n\t    this.securityService = SecurityService;\n\t    this.notificationService = NotificationService;\n\t\n\t    this.signInData = new SignInData();\n\t\n\t    if ($stateParams.automatic) {\n\t      this.error = (0, _messages2.default)('login.automatic.signout');\n\t    } else {\n\t      this.error = null;\n\t    }\n\t  }\n\t\n\t  _createClass(LoginController, [{\n\t    key: 'signIn',\n\t    value: function signIn() {\n\t      var _this = this;\n\t\n\t      this.securityService.signIn(this.signInData.userName, this.signInData.password).then(function (response) {\n\t        _this.securityService.reset();\n\t        _this.$state.go('home');\n\t      }, function (err) {\n\t        _this.error = err.data.error_description;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return LoginController;\n\t}();\n\t\n\texports.default = LoginController;\n\t\n\tvar SignInData = function SignInData() {\n\t  _classCallCheck(this, SignInData);\n\t\n\t  this.userName = null;\n\t  this.password = null;\n\t};\n\n/***/ },\n/* 755 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _brokers = __webpack_require__(756);\n\t\n\tvar _brokers2 = _interopRequireDefault(_brokers);\n\t\n\tvar _broker = __webpack_require__(757);\n\t\n\tvar _broker2 = _interopRequireDefault(_broker);\n\t\n\t__webpack_require__(324);\n\t\n\tvar _broker3 = __webpack_require__(758);\n\t\n\tvar _broker4 = _interopRequireDefault(_broker3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.brokers', ['dx']).controller('BrokersController', _brokers2.default).controller('BrokerController', _broker2.default).factory('Broker', _broker4.default.activate);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 756 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _brokerEditModal = __webpack_require__(700);\n\t\n\tvar _brokerEditModal2 = _interopRequireDefault(_brokerEditModal);\n\t\n\tvar _brokerEditModalTemplate = __webpack_require__(701);\n\t\n\tvar _brokerEditModalTemplate2 = _interopRequireDefault(_brokerEditModalTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BrokersController = function () {\n\t    BrokersController.$inject = ['$scope', '$state', 'SecurityService', 'NotificationService', 'Broker', 'sweetAlert', '$uibModal', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function BrokersController($scope, $state, SecurityService, NotificationService, Broker, sweetAlert, $uibModal, UtilsService) {\n\t        _classCallCheck(this, BrokersController);\n\t\n\t        this.securityService = SecurityService;\n\t        this.notificationService = NotificationService;\n\t        this.Broker = Broker;\n\t        this.$state = $state;\n\t\n\t        this.stateStore = _constants2.default.brokerStateStore();\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t\n\t        this.utils = UtilsService;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(BrokersController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.brokers = [];\n\t            self.Broker.query({}, function (result) {\n\t                self.brokers = result;\n\t\n\t                self.brokers.forEach(function (item) {\n\t                    item.address = self.utils.generateAddress(item);\n\t                });\n\t\n\t                self.store = new _array_store2.default({\n\t                    data: self.brokers,\n\t                    key: \"id\",\n\t                    modified: function modified() {\n\t                        // 'modified' event handler\n\t                    },\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t\n\t                self.gridDataSource = { store: self.store };\n\t\n\t                self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                    dataSource: self.gridDataSource,\n\t                    columns: [{\n\t                        dataField: \"id\",\n\t                        visible: false\n\t                    }, {\n\t                        dataField: \"name\",\n\t                        caption: (0, _messages2.default)('brokers.name'),\n\t                        sortOrder: \"asc\",\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains',\n\t                        cellTemplate: function cellTemplate(cellElement, cellInfo) {\n\t                            var element = $('<a>', {\n\t                                'href': '/brokers/' + cellInfo.data.id,\n\t                                'ui-sref': 'broker'\n\t                            });\n\t\n\t                            element.text(cellInfo.displayValue).appendTo(cellElement);\n\t                        }\n\t                    }, {\n\t                        dataField: \"address\",\n\t                        caption: (0, _messages2.default)('brokers.address'),\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains'\n\t                    }, {\n\t                        dataField: 'state',\n\t                        caption: (0, _messages2.default)('brokers.state'),\n\t                        width: 100,\n\t                        lookup: {\n\t                            dataSource: _this.stateStore,\n\t                            displayExpr: 'display',\n\t                            valueExpr: 'value'\n\t                        }\n\t                    }, {\n\t                        caption: (0, _messages2.default)('actions'),\n\t                        width: 90,\n\t                        alignment: 'right',\n\t                        cellTemplate: function cellTemplate(container, options) {\n\t                            container.addClass(\"actions-cell\");\n\t\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa fa-pencil\" title=\"' + (0, _messages2.default)('brokers.edit') + '\"></div>',\n\t                                onClick: function onClick(data) {\n\t                                    data.jQueryEvent.stopPropagation();\n\t                                    var modal = self.$uibModal.open({\n\t                                        controller: _brokerEditModal2.default,\n\t                                        template: _brokerEditModalTemplate2.default,\n\t                                        resolve: {\n\t                                            brokerObject: Object.assign({}, options.data)\n\t                                        }\n\t                                    });\n\t                                    modal.result.then(function (result) {\n\t                                        jQuery.extend(options.data, result);\n\t                                    });\n\t                                }\n\t                            }).appendTo(container);\n\t\n\t                            var isArchived = options.data.state === 2;\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa ' + (isArchived ? 'fa-undo' : 'fa-trash-o') + '\" title=\"' + (isArchived ? (0, _messages2.default)('brokers.activate') : (0, _messages2.default)('brokers.archive')) + '\"></div>',\n\t                                onClick: function onClick(data) {\n\t                                    if (isArchived) {\n\t                                        self.activateBroker(options.data);\n\t                                    } else {\n\t                                        self.archiveBroker(options.data);\n\t                                    }\n\t                                }\n\t                            }).appendTo(container);\n\t                        }\n\t                    }]\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'archiveBroker',\n\t        value: function archiveBroker(broker) {\n\t            broker = Object.assign({}, broker);\n\t            var self = this;\n\t            broker.state = 2;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('brokers.archive.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('brokers.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('brokers.archive.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    self.Broker.update({ id: broker.id }, broker, function (result) {\n\t                        self.store.remove(broker.id);\n\t                        self.store.insert(result);\n\t                        $('#gridContainer').dxDataGrid('instance').refresh();\n\t                        self.notificationService.success((0, _messages2.default)('brokers.message.deleted'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'activateBroker',\n\t        value: function activateBroker(broker) {\n\t            broker = Object.assign({}, broker);\n\t\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('brokers.activate.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('brokers.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('brokers.activate.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    broker.state = 1;\n\t                    self.Broker.update({ id: broker.id }, broker, function (result) {\n\t                        self.store.remove(broker.id);\n\t                        self.store.insert(result);\n\t                        $('#gridContainer').dxDataGrid('instance').refresh();\n\t                        self.notificationService.success((0, _messages2.default)('brokers.message.activated'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return BrokersController;\n\t}();\n\t\n\texports.default = BrokersController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162), __webpack_require__(162)))\n\n/***/ },\n/* 757 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _brokerEditModal = __webpack_require__(700);\n\t\n\tvar _brokerEditModal2 = _interopRequireDefault(_brokerEditModal);\n\t\n\tvar _brokerEditModalTemplate = __webpack_require__(701);\n\t\n\tvar _brokerEditModalTemplate2 = _interopRequireDefault(_brokerEditModalTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BrokerController = function () {\n\t    BrokerController.$inject = ['$scope', '$state', 'Broker', 'brokerObject', 'NotificationService', 'sweetAlert', '$filter', '$uibModal', 'NgMap', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function BrokerController($scope, $state, Broker, brokerObject, NotificationService, sweetAlert, $filter, $uibModal, NgMap, UtilsService) {\n\t        _classCallCheck(this, BrokerController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Broker = Broker;\n\t        this.brokerObject = brokerObject;\n\t        this.notificationService = NotificationService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t        this.NgMap = NgMap;\n\t        this.utils = UtilsService;\n\t        this.$filter = $filter;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(BrokerController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.$scope.isArchived = this.brokerObject.state === 2;\n\t\n\t            this.brokerObject.address = this.utils.generateAddress(this.brokerObject);\n\t\n\t            this.NgMap.getMap().then(function (map) {\n\t                _this.map = map;\n\t                if (!_this.map.marker) _this.map.marker = new google.maps.Marker();\n\t\n\t                _this.map.marker.setMap(null);\n\t\n\t                var stylez = [{\n\t                    featureType: 'all',\n\t                    elementType: 'all',\n\t                    stylers: [{\n\t                        saturation: -100 // made the map as grayscale\n\t                    }]\n\t                }];\n\t                var mapType = new google.maps.StyledMapType(stylez, {\n\t                    name: 'Grayscale'\n\t                });\n\t\n\t                map.mapTypes.set('tehgrayz', mapType);\n\t                map.setMapTypeId('tehgrayz');\n\t\n\t                _this.setMapCoordinates();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'editBroker',\n\t        value: function editBroker() {\n\t            var _this2 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _brokerEditModal2.default,\n\t                template: _brokerEditModalTemplate2.default,\n\t                resolve: {\n\t                    brokerObject: Object.assign({}, this.brokerObject)\n\t                }\n\t            });\n\t            modal.result.then(function (result) {\n\t                var newAddress = _this2.utils.generateAddress(result),\n\t                    newCountry = result.countryId,\n\t                    needToUpdateMap = void 0;\n\t\n\t                if (newAddress !== _this2.brokerObject.address || newCountry !== _this2.brokerObject.countryId) {\n\t                    needToUpdateMap = true;\n\t                }\n\t\n\t                jQuery.extend(_this2.brokerObject, result);\n\t                _this2.$scope.isArchived = result.state === 2;\n\t\n\t                _this2.brokerObject.address = newAddress;\n\t\n\t                if (needToUpdateMap) {\n\t                    _this2.setMapCoordinates();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'archiveTrigger',\n\t        value: function archiveTrigger() {\n\t            if (this.$scope.isArchived) {\n\t                this.activate();\n\t            } else {\n\t                this.archive();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'archive',\n\t        value: function archive() {\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('brokers.archive.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('brokers.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('brokers.archive.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    var broker = Object.assign({}, self.brokerObject);\n\t                    broker.state = 2;\n\t                    self.Broker.update({ id: broker.id }, broker, function () {\n\t                        self.brokerObject.state = 2;\n\t                        self.$scope.isArchived = true;\n\t                        self.notificationService.success((0, _messages2.default)('brokers.message.deleted'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'activate',\n\t        value: function activate() {\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('brokers.activate.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('brokers.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('brokers.activate.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    var broker = Object.assign({}, self.brokerObject);\n\t                    broker.state = 1;\n\t                    self.Broker.update({ id: broker.id }, broker, function () {\n\t                        self.brokerObject.state = 1;\n\t                        self.$scope.isArchived = false;\n\t                        self.notificationService.success((0, _messages2.default)('brokers.message.activated'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setMapCoordinates',\n\t        value: function setMapCoordinates() {\n\t            var _this3 = this;\n\t\n\t            this.map.marker.setMap(null);\n\t\n\t            if (this.brokerObject.address) {\n\t                var geocoder = new google.maps.Geocoder(),\n\t                    countries = _constants2.default.countryStorePlain(),\n\t                    country = this.$filter('filter')(countries, {\n\t                    value: this.brokerObject.countryId\n\t                });\n\t\n\t                if (country && country[0]) {\n\t                    country = country[0].text + ', ';\n\t                } else {\n\t                    country = '';\n\t                }\n\t\n\t                geocoder.geocode({\n\t                    address: country + this.brokerObject.address\n\t                }, function (result, status) {\n\t                    if (status === 'OK') {\n\t                        _this3.map.setCenter(result[0].geometry.location);\n\t\n\t                        _this3.map.marker.setPosition(result[0].geometry.location);\n\t                        _this3.map.marker.setMap(_this3.map);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BrokerController;\n\t}();\n\t\n\texports.default = BrokerController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 758 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Broker = function () {\n\t  Broker.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function Broker(ConfigurationService, $resource) {\n\t    _classCallCheck(this, Broker);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/brokers/:id', { id: '@id' }, {\n\t      query: {\n\t        method: 'GET',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/brokers',\n\t        isArray: true\n\t      },\n\t      update: {\n\t        method: 'PUT'\n\t      },\n\t      create: {\n\t        method: 'POST',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/brokers'\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(Broker, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      Broker.instance = new Broker(ConfigurationService, $resource);\n\t      return Broker.instance;\n\t    }]\n\t  }]);\n\t\n\t  return Broker;\n\t}();\n\t\n\texports.default = Broker;\n\n/***/ },\n/* 759 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _users = __webpack_require__(760);\n\t\n\tvar _users2 = _interopRequireDefault(_users);\n\t\n\tvar _user = __webpack_require__(761);\n\t\n\tvar _user2 = _interopRequireDefault(_user);\n\t\n\tvar _user3 = __webpack_require__(764);\n\t\n\tvar _user4 = _interopRequireDefault(_user3);\n\t\n\tvar _role = __webpack_require__(765);\n\t\n\tvar _role2 = _interopRequireDefault(_role);\n\t\n\tvar _broker = __webpack_require__(766);\n\t\n\tvar _broker2 = _interopRequireDefault(_broker);\n\t\n\tvar _locale = __webpack_require__(767);\n\t\n\tvar _locale2 = _interopRequireDefault(_locale);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.users', []).controller('UsersController', _users2.default).controller('UserController', _user2.default).factory('User', _user4.default.activate).factory('Role', _role2.default.activate).factory('Broker', _broker2.default.activate).factory('Locale', _locale2.default.activate);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 760 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _userEditModal = __webpack_require__(697);\n\t\n\tvar _userEditModal2 = _interopRequireDefault(_userEditModal);\n\t\n\tvar _userEditModalTemplate = __webpack_require__(699);\n\t\n\tvar _userEditModalTemplate2 = _interopRequireDefault(_userEditModalTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UsersController = function () {\n\t    UsersController.$inject = ['$scope', '$state', 'User', 'Broker', 'Role', 'StoreAdapter', 'currentUser', 'NotificationService', 'sweetAlert', '$uibModal'];\n\t\n\t    /*@ngInject*/\n\t    function UsersController($scope, $state, User, Broker, Role, StoreAdapter, currentUser, NotificationService, sweetAlert, $uibModal) {\n\t        _classCallCheck(this, UsersController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.User = User;\n\t        this.Broker = Broker;\n\t        this.Role = Role;\n\t        this.StoreAdapter = StoreAdapter;\n\t        this.currentUser = currentUser;\n\t        this.notificationService = NotificationService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t\n\t        this.initGrid();\n\t    }\n\t\n\t    _createClass(UsersController, [{\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.stateStore = _constants2.default.userStateStore();\n\t\n\t            self.users = [];\n\t\n\t            self.User.query({}, function (result) {\n\t                self.users = result;\n\t\n\t                self.store = new _array_store2.default({\n\t                    data: self.users,\n\t                    key: \"id\",\n\t                    modified: function modified() {\n\t                        // 'modified' event handler\n\t                    },\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t                self.gridDataSource = { store: self.store };\n\t\n\t                self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                    dataSource: self.gridDataSource,\n\t                    columns: [{\n\t                        dataField: \"id\",\n\t                        visible: false\n\t                    }, {\n\t                        dataField: \"displayName\",\n\t                        caption: (0, _messages2.default)('users.displayname'),\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains',\n\t                        cellTemplate: function cellTemplate(cellElement, cellInfo) {\n\t                            var element = $('<a>', {\n\t                                'href': '/users/' + cellInfo.data.id,\n\t                                'ui-sref': 'user'\n\t                            });\n\t\n\t                            element.text(cellInfo.displayValue).appendTo(cellElement);\n\t                        }\n\t                    }, {\n\t                        dataField: \"email\",\n\t                        caption: (0, _messages2.default)('users.email'),\n\t                        sortOrder: \"asc\",\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains'\n\t                    }, {\n\t                        dataField: \"state\",\n\t                        caption: (0, _messages2.default)('users.state'),\n\t                        lookup: {\n\t                            dataSource: self.stateStore,\n\t                            displayExpr: 'display',\n\t                            valueExpr: 'value'\n\t                        }\n\t                    }, {\n\t                        dataField: \"roleId\",\n\t                        caption: (0, _messages2.default)('users.role'),\n\t                        lookup: {\n\t                            dataSource: _this.StoreAdapter.createStore(_this.Role, {}, self.errorHandler),\n\t                            displayExpr: 'name',\n\t                            valueExpr: 'id'\n\t                        }\n\t                    }, {\n\t                        dataField: \"brokerId\",\n\t                        caption: (0, _messages2.default)('users.broker'),\n\t                        lookup: {\n\t                            dataSource: _this.StoreAdapter.createStore(_this.Broker, {}, self.errorHandler),\n\t                            displayExpr: 'name',\n\t                            valueExpr: 'id'\n\t                        }\n\t                    }, {\n\t                        caption: (0, _messages2.default)('actions'),\n\t                        width: 90,\n\t                        alignment: 'right',\n\t                        cellTemplate: function cellTemplate(container, options) {\n\t                            container.addClass(\"actions-cell\");\n\t\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa fa-pencil\" title=\"' + (0, _messages2.default)('users.edit') + '\"></div>',\n\t                                disabled: options.data.id === self.currentUser.id, // this is you\n\t                                onClick: function onClick(data) {\n\t                                    data.jQueryEvent.stopPropagation();\n\t\n\t                                    var modal = self.$uibModal.open({\n\t                                        controller: _userEditModal2.default,\n\t                                        template: _userEditModalTemplate2.default,\n\t                                        resolve: {\n\t                                            userObject: Object.assign({}, options.data)\n\t                                        }\n\t                                    });\n\t                                    modal.result.then(function (result) {\n\t                                        jQuery.extend(options.data, result);\n\t                                    });\n\t                                }\n\t                            }).appendTo(container);\n\t\n\t                            var isArchived = options.data.state === 3;\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa ' + (isArchived ? 'fa-undo' : 'fa-trash-o') + '\" title=\"' + (isArchived ? (0, _messages2.default)('users.activate') : (0, _messages2.default)('users.archive')) + '\"></div>',\n\t                                disabled: options.data.id === self.currentUser.id,\n\t                                onClick: function onClick(data) {\n\t                                    if (isArchived) {\n\t                                        self.activateUser(options.data);\n\t                                    } else {\n\t                                        self.archiveUser(options.data);\n\t                                    }\n\t                                }\n\t                            }).appendTo(container);\n\t                        }\n\t                    }]\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'archiveUser',\n\t        value: function archiveUser(user) {\n\t            var self = this;\n\t            user = Object.assign({}, user);\n\t\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('users.archive.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('users.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('users.archive.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    user.state = 3;\n\t                    self.User.update({ id: user.id }, user, function (result) {\n\t                        self.store.remove(user.id);\n\t                        self.store.insert(result);\n\t\n\t                        $('#gridContainer').dxDataGrid('instance').refresh();\n\t                        self.notificationService.success((0, _messages2.default)('users.message.archived'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'activateUser',\n\t        value: function activateUser(user) {\n\t            user = Object.assign({}, user);\n\t\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('users.activate.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('users.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('users.activate.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    user.state = 2;\n\t                    self.User.update({ id: user.id }, user, function (result) {\n\t                        self.store.remove(user.id);\n\t                        self.store.insert(result);\n\t\n\t                        $('#gridContainer').dxDataGrid('instance').refresh();\n\t                        self.notificationService.success((0, _messages2.default)('users.message.activated'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return UsersController;\n\t}();\n\t\n\texports.default = UsersController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162), __webpack_require__(162)))\n\n/***/ },\n/* 761 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _userEditModal = __webpack_require__(697);\n\t\n\tvar _userEditModal2 = _interopRequireDefault(_userEditModal);\n\t\n\tvar _userChangePasswordModal = __webpack_require__(762);\n\t\n\tvar _userChangePasswordModal2 = _interopRequireDefault(_userChangePasswordModal);\n\t\n\tvar _userEditModalTemplate = __webpack_require__(699);\n\t\n\tvar _userEditModalTemplate2 = _interopRequireDefault(_userEditModalTemplate);\n\t\n\tvar _userChangePasswordModalTemplate = __webpack_require__(763);\n\t\n\tvar _userChangePasswordModalTemplate2 = _interopRequireDefault(_userChangePasswordModalTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UserController = function () {\n\t    UserController.$inject = ['$scope', '$state', 'User', 'userObject', 'currentUser', 'StoreAdapter', 'Role', 'Locale', 'NotificationService', 'sweetAlert', '$uibModal'];\n\t\n\t    /*@ngInject*/\n\t    function UserController($scope, $state, User, userObject, currentUser, StoreAdapter, Role, Locale, NotificationService, sweetAlert, $uibModal) {\n\t        _classCallCheck(this, UserController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.User = User;\n\t        this.userObject = userObject;\n\t        this.currentUser = currentUser;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.Role = Role;\n\t        this.Locale = Locale;\n\t        this.notificationService = NotificationService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(UserController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            this.$scope.isArchived = this.userObject.state === 3;\n\t\n\t            var rolesStore = this.storeAdapter.createStore(this.Role, {}, {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            });\n\t\n\t            rolesStore.load().done(function (result) {\n\t                _this.roles = result;\n\t                _this.setRole();\n\t            });\n\t\n\t            var localesStore = this.storeAdapter.createStore(this.Locale, {}, {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            });\n\t\n\t            localesStore.load().done(function (result) {\n\t                _this.locales = result;\n\t                _this.setLocale();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setRole',\n\t        value: function setRole() {\n\t            var _this2 = this;\n\t\n\t            var role = this.roles.find(function (item) {\n\t                return item.id === _this2.userObject.roleId;\n\t            });\n\t            role = role || {};\n\t            this.$scope.role = role;\n\t        }\n\t    }, {\n\t        key: 'setLocale',\n\t        value: function setLocale() {\n\t            var _this3 = this;\n\t\n\t            var locale = this.locales.find(function (item) {\n\t                return item.id === _this3.userObject.localeId;\n\t            });\n\t            locale = locale || {};\n\t            this.$scope.locale = locale;\n\t        }\n\t    }, {\n\t        key: 'editUser',\n\t        value: function editUser() {\n\t            var _this4 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _userEditModal2.default,\n\t                template: _userEditModalTemplate2.default,\n\t                resolve: {\n\t                    userObject: Object.assign({}, this.userObject)\n\t                }\n\t            });\n\t            modal.result.then(function (result) {\n\t                jQuery.extend(_this4.userObject, result);\n\t                _this4.$scope.isArchived = result.state === 3;\n\t                _this4.setRole();\n\t                _this4.setLocale();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'archiveTrigger',\n\t        value: function archiveTrigger() {\n\t            if (this.$scope.isArchived) {\n\t                this.activate();\n\t            } else {\n\t                this.archive();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'archive',\n\t        value: function archive() {\n\t            var self = this;\n\t\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('users.archive.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('users.archive.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    var user = Object.assign({}, self.userObject);\n\t                    user.state = 3;\n\t                    self.User.update({ id: user.id }, user, function () {\n\t                        self.userObject.state = 3;\n\t                        self.$scope.isArchived = true;\n\t                        self.notificationService.success((0, _messages2.default)('users.message.archived'));\n\t                    }, function (result) {\n\t                        console.error(result);\n\t                        self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'activate',\n\t        value: function activate() {\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('users.activate.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('users.activate.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    var user = Object.assign({}, self.userObject);\n\t                    user.state = 2;\n\t                    self.User.update({ id: user.id }, user, function () {\n\t                        self.userObject.state = 1;\n\t                        self.$scope.isArchived = false;\n\t                        self.notificationService.success((0, _messages2.default)('users.message.activated'));\n\t                    }, function (result) {\n\t                        self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'changePassword',\n\t        value: function changePassword() {\n\t            var modal = this.$uibModal.open({\n\t                controller: _userChangePasswordModal2.default,\n\t                template: _userChangePasswordModalTemplate2.default,\n\t                resolve: {\n\t                    userId: this.userObject.id\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return UserController;\n\t}();\n\t\n\texports.default = UserController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 762 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UserChangePasswordController = function () {\n\t    UserChangePasswordController.$inject = ['$scope', '$state', '$uibModalInstance', 'User', 'userId', 'NotificationService', 'sweetAlert'];\n\t\n\t    /*@ngInject*/\n\t    function UserChangePasswordController($scope, $state, $uibModalInstance, User, userId, NotificationService, sweetAlert) {\n\t        _classCallCheck(this, UserChangePasswordController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.User = User;\n\t        this.userId = userId;\n\t        this.notificationService = NotificationService;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.validationGroup = 'user-change-password';\n\t        this.sweetAlert = sweetAlert;\n\t\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(UserChangePasswordController, [{\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            this.$scope.isSaveOperationDisable = false;\n\t\n\t            this.$scope.changePasswordModel = {\n\t                newPassword: null,\n\t                confirmPassword: null\n\t            };\n\t\n\t            self.$scope.isModalChanged = function () {\n\t                return self.$scope.changePasswordModel.newPassword != null && self.$scope.changePasswordModel.confirmPassword != null;\n\t            };\n\t\n\t            self.comprasionTarget = function () {\n\t                if (self.$scope.changePasswordModel.newPassword) {\n\t                    return self.$scope.changePasswordModel.newPassword;\n\t                }\n\t            };\n\t\n\t            self.$scope.isFormValid = function () {\n\t                var result = _validation_engine2.default.getGroupConfig(self.validationGroup).validate();\n\t                return result.isValid;\n\t            };\n\t\n\t            this.$scope.newPasswordSettings = {\n\t                placeholder: (0, _messages2.default)('users.placeholder.newPassword'),\n\t                bindingOptions: {\n\t                    value: 'changePasswordModel.newPassword '\n\t                },\n\t                mode: 'password'\n\t            };\n\t            this.$scope.newPasswordValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', min: 6, message: (0, _messages2.default)('validation.shortPassword') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.confirmPasswordSettings = {\n\t                placeholder: (0, _messages2.default)('users.placeholder.confirmPassword'),\n\t                bindingOptions: {\n\t                    value: 'changePasswordModel.confirmPassword '\n\t                },\n\t                mode: 'password'\n\t            };\n\t            this.$scope.confirmPasswordValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'compare', comparisonTarget: self.comprasionTarget, message: (0, _messages2.default)('validation.passwordsNotMatch') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSave = function () {\n\t                var result = _validation_engine2.default.getGroupConfig(_this.validationGroup).validate();\n\t                var self = _this;\n\t                if (result.isValid) {\n\t                    self.$scope.saveInProgress = true;\n\t                    self.$scope.isSaveOperationDisable = true;\n\t\n\t                    _this.User.changePassword({ id: _this.userId }, _this.$scope.changePasswordModel, function (result) {\n\t                        _this.notificationService.success((0, _messages2.default)('users.message.updated'));\n\t                        self.$scope.saveInProgress = false;\n\t                        _this.$uibModalInstance.close(_this.$scope.user);\n\t                        _this.sweetAlert.swal({\n\t                            title: (0, _messages2.default)('users.changePassord.title'),\n\t                            text: (0, _messages2.default)('users.changePassword.success'),\n\t                            type: 'success'\n\t                        });\n\t                    }, function (error) {\n\t                        _this.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                        self.$scope.saveInProgress = false;\n\t                        self.$scope.isSaveOperationDisable = false;\n\t                        _this.sweetAlert.swal({\n\t                            title: (0, _messages2.default)('users.changePassord.title'),\n\t                            text: (0, _messages2.default)('users.changePassword.failed'),\n\t                            type: 'warning'\n\t                        });\n\t                    });\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(_this.validationGroup);\n\t                _this.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }]);\n\t\n\t    return UserChangePasswordController;\n\t}();\n\t\n\texports.default = UserChangePasswordController;\n\n/***/ },\n/* 763 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ Messages('users.changePassord.title')  }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-new-password\\\" class=\\\"control-label\\\">{{Messages('users.newPassword')}}</label>\\r\\n                    <div id=\\\"field-new-password\\\" dx-text-box=\\\"newPasswordSettings\\\" dx-validator=\\\"newPasswordValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-confirm-password\\\" class=\\\"control-label\\\">{{Messages('users.confirmPassword')}}</label>\\r\\n                    <div id=\\\"field-confirm-password\\\" dx-text-box=\\\"confirmPasswordSettings\\\" dx-validator=\\\"confirmPasswordValidationRules\\\"></div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" ladda=\\\"saveInProgress\\\" class=\\\"btn btn-primary ladda-button\\\" data-style=\\\"expand-left\\\" ng-click=\\\"validateAndSave()\\\" \\r\\n            ng-disabled=\\\"!(isModalChanged() && isFormValid()) || isSaveOperationDisable\\\">\\r\\n            <span class=\\\"ladda-label\\\">\\r\\n                {{ saveInProgress ? Messages('users.changingPasswordBtn') : Messages('users.changePasswordBtn') }}\\r\\n            </span>\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\" ng-disabled=\\\"isSaveOperationDisable\\\">\\r\\n            {{ Messages('users.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 764 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar User = function () {\n\t  User.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function User(ConfigurationService, $resource) {\n\t    _classCallCheck(this, User);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/users/:id', { id: '@id' }, {\n\t      query: {\n\t        method: 'GET',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/users',\n\t        isArray: true\n\t      },\n\t      update: {\n\t        method: 'PUT'\n\t      },\n\t      changePassword: {\n\t        method: 'PUT',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/users/:id/password'\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(User, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      User.instance = new User(ConfigurationService, $resource);\n\t      return User.instance;\n\t    }]\n\t  }]);\n\t\n\t  return User;\n\t}();\n\t\n\texports.default = User;\n\n/***/ },\n/* 765 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Role = function () {\n\t  Role.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function Role(ConfigurationService, $resource) {\n\t    _classCallCheck(this, Role);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/roles/:id', { id: '@id' }, {\n\t      query: {\n\t        method: 'GET',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/roles',\n\t        isArray: true\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(Role, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      Role.instance = new Role(ConfigurationService, $resource);\n\t      return Role.instance;\n\t    }]\n\t  }]);\n\t\n\t  return Role;\n\t}();\n\t\n\texports.default = Role;\n\n/***/ },\n/* 766 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Broker = function () {\n\t  Broker.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function Broker(ConfigurationService, $resource) {\n\t    _classCallCheck(this, Broker);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/brokers/:id', { id: '@id' }, {\n\t      query: {\n\t        method: 'GET',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/brokers',\n\t        isArray: true\n\t      },\n\t      update: {\n\t        method: 'PUT'\n\t      },\n\t      archive: {\n\t        method: 'DELETE'\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(Broker, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      Broker.instance = new Broker(ConfigurationService, $resource);\n\t      return Broker.instance;\n\t    }]\n\t  }]);\n\t\n\t  return Broker;\n\t}();\n\t\n\texports.default = Broker;\n\n/***/ },\n/* 767 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Locale = function () {\n\t  Locale.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function Locale(ConfigurationService, $resource) {\n\t    _classCallCheck(this, Locale);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/locales/:id', { id: '@id' }, {\n\t      query: {\n\t        method: 'GET',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/locales',\n\t        isArray: true\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(Locale, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      Locale.instance = new Locale(ConfigurationService, $resource);\n\t      return Locale.instance;\n\t    }]\n\t  }]);\n\t\n\t  return Locale;\n\t}();\n\t\n\texports.default = Locale;\n\n/***/ },\n/* 768 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _assets = __webpack_require__(769);\n\t\n\tvar _assets2 = _interopRequireDefault(_assets);\n\t\n\tvar _asset = __webpack_require__(770);\n\t\n\tvar _asset2 = _interopRequireDefault(_asset);\n\t\n\tvar _assetgallary = __webpack_require__(771);\n\t\n\tvar _assetgallary2 = _interopRequireDefault(_assetgallary);\n\t\n\tvar _floor = __webpack_require__(772);\n\t\n\tvar _floor2 = _interopRequireDefault(_floor);\n\t\n\tvar _space = __webpack_require__(778);\n\t\n\tvar _space2 = _interopRequireDefault(_space);\n\t\n\tvar _spaces = __webpack_require__(781);\n\t\n\tvar _spaces2 = _interopRequireDefault(_spaces);\n\t\n\tvar _assetdocuments = __webpack_require__(784);\n\t\n\tvar _assetdocuments2 = _interopRequireDefault(_assetdocuments);\n\t\n\tvar _object = __webpack_require__(785);\n\t\n\tvar _object2 = _interopRequireDefault(_object);\n\t\n\tvar _asset3 = __webpack_require__(790);\n\t\n\tvar _asset4 = _interopRequireDefault(_asset3);\n\t\n\tvar _object3 = __webpack_require__(791);\n\t\n\tvar _object4 = _interopRequireDefault(_object3);\n\t\n\tvar _floor3 = __webpack_require__(792);\n\t\n\tvar _floor4 = _interopRequireDefault(_floor3);\n\t\n\tvar _space3 = __webpack_require__(793);\n\t\n\tvar _space4 = _interopRequireDefault(_space3);\n\t\n\t__webpack_require__(794);\n\t\n\t__webpack_require__(795);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.assets', ['ui.sortable', 'angular-sortable-view']).controller('AssetsController', _assets2.default).controller('AssetController', _asset2.default).component('assetgallery', _assetgallary2.default).component('floor', _floor2.default).component('space', _space2.default).component('spaces', _spaces2.default).component('assetdocuments', _assetdocuments2.default).factory('Asset', _asset4.default.activate).factory('AssetObject', _object4.default.activate).factory('Floor', _floor4.default.activate).factory('Space', _space4.default.activate).component('object', _object2.default);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 769 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _assetEditModal = __webpack_require__(702);\n\t\n\tvar _assetEditModal2 = _interopRequireDefault(_assetEditModal);\n\t\n\tvar _assetEditModalTemplate = __webpack_require__(704);\n\t\n\tvar _assetEditModalTemplate2 = _interopRequireDefault(_assetEditModalTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetsController = function () {\n\t    AssetsController.$inject = ['$scope', '$state', 'Asset', 'Broker', 'StoreAdapter', 'currentUser', 'NotificationService', '$uibModal', 'sweetAlert', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function AssetsController($scope, $state, Asset, Broker, StoreAdapter, currentUser, NotificationService, $uibModal, sweetAlert, UtilsService) {\n\t        _classCallCheck(this, AssetsController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Asset = Asset;\n\t        this.Broker = Broker;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.currentUser = currentUser;\n\t        this.notificationService = NotificationService;\n\t        this.$uibModal = $uibModal;\n\t        this.sweetAlert = sweetAlert;\n\t        this.utils = UtilsService;\n\t\n\t        this.initGrid();\n\t    }\n\t\n\t    _createClass(AssetsController, [{\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.stateStore = _constants2.default.assetStateStore();\n\t            self.countryStore = _constants2.default.countryStore();\n\t\n\t            self.assets = [];\n\t\n\t            self.Asset.query({}, function (result) {\n\t                self.assets = result;\n\t\n\t                self.assets.forEach(function (item) {\n\t                    item.address = self.utils.generateAddress(item);\n\t                });\n\t\n\t                self.store = new _array_store2.default({\n\t                    data: self.assets,\n\t                    key: \"id\",\n\t                    modified: function modified() {\n\t                        // 'modified' event handler\n\t                    },\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t\n\t                self.gridDataSource = { store: self.store };\n\t\n\t                self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                    dataSource: self.gridDataSource,\n\t                    editing: {\n\t                        allowAdding: false,\n\t                        allowUpdate: false,\n\t                        allowDelete: false,\n\t                        texts: {\n\t                            confirmDeleteMessage: ''\n\t                        }\n\t                    },\n\t                    columns: [{\n\t                        dataField: \"id\",\n\t                        visible: false\n\t                    }, {\n\t                        dataField: \"name\",\n\t                        caption: (0, _messages2.default)('assets.name'),\n\t                        sortOrder: \"asc\",\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains',\n\t                        cellTemplate: function cellTemplate(cellElement, cellInfo) {\n\t                            var element = $('<a>', {\n\t                                'href': '/assets/' + cellInfo.data.id,\n\t                                'ui-sref': 'asset'\n\t                            });\n\t\n\t                            element.text(cellInfo.displayValue).appendTo(cellElement);\n\t                        }\n\t                    }, {\n\t                        dataField: \"address\",\n\t                        caption: (0, _messages2.default)('assets.address'),\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains'\n\t                    }, {\n\t                        dataField: \"countryId\",\n\t                        caption: (0, _messages2.default)('assets.country'),\n\t                        lookup: {\n\t                            dataSource: self.countryStore,\n\t                            displayExpr: 'display',\n\t                            valueExpr: 'value'\n\t                        }\n\t                    }, {\n\t                        dataField: \"state\",\n\t                        caption: (0, _messages2.default)('users.state'),\n\t                        lookup: {\n\t                            dataSource: self.stateStore,\n\t                            displayExpr: 'display',\n\t                            valueExpr: 'value'\n\t                        },\n\t                        width: 100\n\t                    }, {\n\t                        dataField: \"brokerDatabaseRecordId\",\n\t                        caption: (0, _messages2.default)('assets.brokerDatabaseRecordId'),\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains',\n\t                        alignment: 'right'\n\t                    }, {\n\t                        dataField: \"brokerId\",\n\t                        caption: (0, _messages2.default)('assets.broker'),\n\t                        lookup: {\n\t                            dataSource: _this.storeAdapter.createStore(_this.Broker, {}, self.errorHandler),\n\t                            displayExpr: 'name',\n\t                            valueExpr: 'id'\n\t                        }\n\t                    }, {\n\t                        caption: (0, _messages2.default)('actions'),\n\t                        width: 90,\n\t                        alignment: 'right',\n\t                        cellTemplate: function cellTemplate(container, options) {\n\t                            container.addClass(\"actions-cell\");\n\t\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa fa-pencil\" title=\"' + (0, _messages2.default)('assets.edit') + '\"></div>',\n\t                                onClick: function onClick(data) {\n\t                                    data.jQueryEvent.stopPropagation();\n\t                                    var modal = self.$uibModal.open({\n\t                                        controller: _assetEditModal2.default,\n\t                                        template: _assetEditModalTemplate2.default,\n\t                                        resolve: {\n\t                                            assetObject: Object.assign({}, options.data)\n\t                                        }\n\t                                    });\n\t                                    modal.result.then(function (result) {\n\t                                        result.address = self.utils.generateAddress(result);\n\t                                        jQuery.extend(options.data, result);\n\t                                    });\n\t                                }\n\t                            }).appendTo(container);\n\t\n\t                            var isArchived = options.data.state === 3;\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa ' + (isArchived ? 'fa-undo' : 'fa-trash-o') + '\" title=\"' + (isArchived ? (0, _messages2.default)('assets.activate') : (0, _messages2.default)('assets.archive')) + '\"></div>',\n\t                                onClick: function onClick(data) {\n\t                                    if (isArchived) {\n\t                                        self.activateAsset(options.data);\n\t                                    } else {\n\t                                        self.archiveAsset(options.data);\n\t                                    }\n\t                                }\n\t                            }).appendTo(container);\n\t                        }\n\t                    }]\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'archiveAsset',\n\t        value: function archiveAsset(asset) {\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('assets.archive.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('assets.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('assets.archive.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    self.Asset.archive({ id: asset.id }, function (result) {\n\t                        self.store.remove(asset.id);\n\t                        result.address = self.utils.generateAddress(result);\n\t                        self.store.insert(result);\n\t\n\t                        $('#gridContainer').dxDataGrid('instance').refresh();\n\t                        self.notificationService.success((0, _messages2.default)('assets.message.archived'));\n\t                    }, function (error) {\n\t                        self.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'activateAsset',\n\t        value: function activateAsset(asset) {\n\t            asset = Object.assign({}, asset);\n\t\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('assets.activate.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('assets.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('assets.activate.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    asset.state = 2;\n\t                    self.Asset.update({ id: asset.id }, asset, function (result) {\n\t                        self.store.remove(asset.id);\n\t                        result.address = self.utils.generateAddress(result);\n\t                        self.store.insert(result);\n\t                        $('#gridContainer').dxDataGrid('instance').refresh();\n\t                        self.notificationService.success((0, _messages2.default)('assets.message.activated'));\n\t                    }, function (error) {\n\t                        self.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AssetsController;\n\t}();\n\t\n\texports.default = AssetsController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162), __webpack_require__(162)))\n\n/***/ },\n/* 770 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _assetEditModal = __webpack_require__(702);\n\t\n\tvar _assetEditModal2 = _interopRequireDefault(_assetEditModal);\n\t\n\tvar _assetEditModalTemplate = __webpack_require__(704);\n\t\n\tvar _assetEditModalTemplate2 = _interopRequireDefault(_assetEditModalTemplate);\n\t\n\t__webpack_require__(703);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetController = function () {\n\t    AssetController.$inject = ['$scope', '$state', 'Broker', 'Asset', 'assetObject', 'currentUser', 'ImageService', 'StoreAdapter', 'NotificationService', '$filter', 'NgMap', '$uibModal', 'sweetAlert', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function AssetController($scope, $state, Broker, Asset, assetObject, currentUser, ImageService, StoreAdapter, NotificationService, $filter, NgMap, $uibModal, sweetAlert, UtilsService) {\n\t        _classCallCheck(this, AssetController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.$filter = $filter;\n\t        this.Broker = Broker;\n\t        this.Asset = Asset;\n\t        this.assetObject = assetObject;\n\t        this.currentUser = currentUser;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.notificationService = NotificationService;\n\t        this.NgMap = NgMap;\n\t        this.$uibModal = $uibModal;\n\t        this.sweetAlert = sweetAlert;\n\t        this.utils = UtilsService;\n\t        this.imageService = ImageService;\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(AssetController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.asset = self.assetObject;\n\t            self.asset.address = self.utils.generateAddress(self.asset);\n\t            self.asset.images = [];\n\t\n\t            if (self.assetObject.mainImageUrl) {\n\t                self.asset.images = [{ filePath: self.assetObject.mainImageUrl }];\n\t            }\n\t\n\t            self.$scope.isArchived = self.asset.state === 3;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.updateDataSources = function (initiator) {\n\t                if (initiator == 'objects') {\n\t                    self.$scope.$broadcast('updateAssetObjectDataSource');\n\t                } else if (initiator == 'floors') {\n\t                    self.$scope.$broadcast('updateFloorDataSource');\n\t                }\n\t            };\n\t\n\t            self.NgMap.getMap().then(function (map) {\n\t                self.map = map;\n\t\n\t                if (!self.map.marker) self.map.marker = new google.maps.Marker();\n\t\n\t                self.map.marker.setMap(null);\n\t\n\t                var stylez = [{\n\t                    featureType: 'all',\n\t                    elementType: 'all',\n\t                    stylers: [{\n\t                        saturation: -100 // made the map as grayscale\n\t                    }]\n\t                }];\n\t                var mapType = new google.maps.StyledMapType(stylez, {\n\t                    name: 'Grayscale'\n\t                });\n\t\n\t                map.mapTypes.set('tehgrayz', mapType);\n\t                map.setMapTypeId('tehgrayz');\n\t\n\t                self.setMapCoordinates();\n\t            });\n\t\n\t            self.$scope.saveUpdates = function () {\n\t                self.saveUpdates();\n\t            };\n\t\n\t            self.$scope.updateImage = function () {\n\t                self.updateImage();\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var self = this;\n\t\n\t            this.stateStore = _constants2.default.assetStateStore();\n\t            this.countryStore = _constants2.default.countryStore();\n\t\n\t            var brokersStore = this.storeAdapter.createStore(this.Broker, {}, this.errorHandler);\n\t\n\t            brokersStore.load().done(function (result) {\n\t                result.forEach(function (value) {\n\t                    self.brokers.push({\n\t                        value: value.id,\n\t                        text: value.name\n\t                    });\n\t                });\n\t            });\n\t\n\t            this.brokers = [];\n\t            this.brokerId = this.asset.brokerId;\n\t            this.showBroker = function () {\n\t                var selected = self.$filter('filter')(self.brokers, {\n\t                    value: self.brokerId\n\t                });\n\t                return typeof self.brokerId === 'number' && selected.length ? selected[0].text : 'Not set';\n\t            };\n\t\n\t            this.brokerDatabaseRecordId = this.asset.brokerDatabaseRecordId || '';\n\t            this.brokerDatabaseRecordIdValidation = function (value) {\n\t                if (value.length > 10) {\n\t                    return (0, _messages2.default)('assets.brokerDatabaseRecordId.errorLength');\n\t                }\n\t            };\n\t\n\t            this.notes = this.asset.notes || '';\n\t            this.notesValidation = function (value) {\n\t                if (value.length > 500) {\n\t                    return (0, _messages2.default)('assets.notes.errorLength');\n\t                }\n\t            };\n\t        }\n\t    }, {\n\t        key: 'setMapCoordinates',\n\t        value: function setMapCoordinates() {\n\t            var _this = this;\n\t\n\t            this.map.marker.setMap(null);\n\t\n\t            if (this.assetObject.address) {\n\t                var geocoder = new google.maps.Geocoder(),\n\t                    countries = _constants2.default.countryStorePlain(),\n\t                    country = this.$filter('filter')(countries, {\n\t                    value: this.asset.countryId\n\t                });\n\t\n\t                if (country && country[0]) {\n\t                    country = country[0].text + ', ';\n\t                } else {\n\t                    country = '';\n\t                }\n\t\n\t                geocoder.geocode({\n\t                    address: country + this.assetObject.address\n\t                }, function (result, status) {\n\t                    if (status === 'OK') {\n\t                        _this.map.setCenter(result[0].geometry.location);\n\t\n\t                        _this.map.marker.setPosition(result[0].geometry.location);\n\t                        _this.map.marker.setMap(_this.map);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'updateImage',\n\t        value: function updateImage() {\n\t            var _this2 = this;\n\t\n\t            var self = this;\n\t\n\t            if (self.asset.images.length == 0) {\n\t                self.Asset.resetImage({ id: this.asset.id }, function (result) {\n\t                    self.notificationService.success((0, _messages2.default)('assets.gallery.message.deleted'));\n\t                    self.saveInProgress = false;\n\t                }, function (error) {\n\t                    _this2.notificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            } else {\n\t                var blob = self.imageService.dataURItoBlob(self.asset.images[0].imageFile.imageData);\n\t                var fd = new FormData(document.forms[0]);\n\t                fd.append(\"data\", blob, self.asset.images[0].originalFileName);\n\t\n\t                self.Asset.setImage({ id: this.asset.id }, fd, function (result) {\n\t                    self.notificationService.success((0, _messages2.default)('assets.gallery.message.added'));\n\t                    self.saveInProgress = false;\n\t                }, function (error) {\n\t                    _this2.notificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'saveUpdates',\n\t        value: function saveUpdates() {\n\t            var _this3 = this;\n\t\n\t            for (var i in this.asset) {\n\t                if (this.asset.hasOwnProperty(i)) {\n\t                    if (this[i] !== undefined) {\n\t                        this.asset[i] = this[i];\n\t                    } else if (this.$scope[i] !== undefined) {\n\t                        this.asset[i] = this.$scope[i];\n\t                    }\n\t                }\n\t            }\n\t\n\t            return this.Asset.update({ id: this.asset.id }, this.asset, function (result) {\n\t                _this3.notificationService.success((0, _messages2.default)('assets.message.updated'));\n\t                _this3.saveInProgress = false;\n\t            }, function (error) {\n\t                _this3.notificationService.error(error.data);\n\t                _this3.saveInProgress = false;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'tabGridsRefresh',\n\t        value: function tabGridsRefresh($event) {\n\t            $event.preventDefault();\n\t            var tab = $event.currentTarget.getAttribute('aria-controls');\n\t            if (tab === 'floors') {\n\t                $('#floorSettings #gridContainer').dxDataGrid('instance').refresh();\n\t            }\n\t\n\t            if (tab === 'spaces') {\n\t                $('#spaceSettings #spacesGridContainer').dxDataGrid('instance').refresh();\n\t            }\n\t\n\t            if (tab === 'objects') {\n\t                $('#objectsSettings #objectsGridContainer').dxDataGrid('instance').refresh();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'archiveTrigger',\n\t        value: function archiveTrigger() {\n\t            if (this.$scope.isArchived) {\n\t                this.activate();\n\t            } else {\n\t                this.archive();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'editAsset',\n\t        value: function editAsset() {\n\t            var _this4 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _assetEditModal2.default,\n\t                template: _assetEditModalTemplate2.default,\n\t                resolve: {\n\t                    assetObject: Object.assign({}, this.asset)\n\t                }\n\t            });\n\t            modal.result.then(function (result) {\n\t                var newAddress = _this4.utils.generateAddress(result),\n\t                    newCountry = result.countryId,\n\t                    needToUpdateMap = void 0;\n\t\n\t                if (newAddress !== _this4.asset.address || newCountry !== _this4.asset.countryId) {\n\t                    needToUpdateMap = true;\n\t                }\n\t\n\t                $.extend(_this4.asset, result);\n\t                _this4.asset.address = newAddress;\n\t\n\t                if (needToUpdateMap) {\n\t                    _this4.setMapCoordinates();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'archive',\n\t        value: function archive() {\n\t            var self = this;\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('assets.archive.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('assets.archive.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    self.Asset.archive({ id: self.asset.id }, function (result) {\n\t                        self.$scope.isArchived = true;\n\t                        self.notificationService.success((0, _messages2.default)('assets.message.archived'));\n\t                    }, function (error) {\n\t                        self.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'activate',\n\t        value: function activate() {\n\t            var self = this,\n\t                asset = Object.assign({}, this.asset);\n\t\n\t            this.sweetAlert.swal({\n\t                title: (0, _messages2.default)('assets.activate.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('assets.activate.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    asset.state = 2;\n\t                    self.Asset.update({ id: asset.id }, asset, function (result) {\n\t                        self.$scope.isArchived = false;\n\t                        self.notificationService.success((0, _messages2.default)('assets.message.activated'));\n\t                    }, function (error) {\n\t                        self.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AssetController;\n\t}();\n\t\n\texports.default = AssetController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 771 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar AssetGalleryComponent = {\n\t    bindings: {\n\t        images: '=',\n\t        maxImageWidth: '=?',\n\t        maxImageHeight: '=?',\n\t        maxImageCount: '=?',\n\t        readonly: '=?',\n\t        updateImage: '=?'\n\t    },\n\t    controller: function controller() {\n\t        var self = this;\n\t\n\t        self.maxImageCount = 1;\n\t        self.maxImageHeight = 500;\n\t        self.maxImageWidth = 500;\n\t\n\t        self.imageAddCallback = function () {\n\t            self.updateImage();\n\t        };\n\t        self.imageDeleteCallback = function () {\n\t            self.updateImage();\n\t        };\n\t        self.sortingChangeCallback = function () {};\n\t    },\n\t    template: \"<imagegallery images='$ctrl.images' \" + \"                        readonly='$ctrl.readonly' \" + \"                        max-image-count='$ctrl.maxImageCount' \" + \"                        max-image-height='$ctrl.maxImageHeight' \" + \"                        max-image-width='$ctrl.maxImageWidth' \" + \"                        image-add-callback='$ctrl.imageAddCallback' \" + \"                        image-delete-callback='$ctrl.imageDeleteCallback' \" + \"                        sorting-change-callback='$ctrl.sortingChangeCallback' \" + \"                        class='asset-gallery'></imagegallery>\"\n\t};\n\t\n\texports.default = AssetGalleryComponent;\n\n/***/ },\n/* 772 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _floor = __webpack_require__(773);\n\t\n\tvar _floor2 = _interopRequireDefault(_floor);\n\t\n\tvar _floorTemplate = __webpack_require__(777);\n\t\n\tvar _floorTemplate2 = _interopRequireDefault(_floorTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// import template and controller from individual component directory\n\tvar FloorComponent = {\n\t    bindings: {\n\t        asset: '=',\n\t        saveUpdates: '=?',\n\t        needUpdateDataSources: '&'\n\t    },\n\t    controller: _floor2.default,\n\t    template: _floorTemplate2.default\n\t};\n\t\n\texports.default = FloorComponent;\n\n/***/ },\n/* 773 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _custom_store = __webpack_require__(412);\n\t\n\tvar _custom_store2 = _interopRequireDefault(_custom_store);\n\t\n\tvar _floorsAddRangeModalController = __webpack_require__(774);\n\t\n\tvar _floorsAddRangeModalController2 = _interopRequireDefault(_floorsAddRangeModalController);\n\t\n\tvar _floorsAddRangeModalTemplate = __webpack_require__(775);\n\t\n\tvar _floorsAddRangeModalTemplate2 = _interopRequireDefault(_floorsAddRangeModalTemplate);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _data_source = __webpack_require__(776);\n\t\n\tvar _data_source2 = _interopRequireDefault(_data_source);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FloorController = function () {\n\t    FloorController.$inject = ['$scope', '$state', 'Floor', 'AssetObject', 'NotificationService', 'UtilsService', 'sweetAlert', '$uibModal'];\n\t\n\t    /*@ngInject*/\n\t    function FloorController($scope, $state, Floor, AssetObject, NotificationService, UtilsService, sweetAlert, $uibModal) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, FloorController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Floor = Floor;\n\t        this.AssetObject = AssetObject;\n\t        this.NotificationService = NotificationService;\n\t        this.utils = UtilsService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t        this.messages = _messages2.default;\n\t\n\t        this.loadData(function (t) {\n\t            _this.init();\n\t            _this.initGrid();\n\t        });\n\t    }\n\t\n\t    _createClass(FloorController, [{\n\t        key: 'loadData',\n\t        value: function loadData(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.loadAssetObjects(function () {\n\t                self.loadFloors(function () {\n\t                    if (afterExecuteCallback) afterExecuteCallback();\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'loadAssetObjects',\n\t        value: function loadAssetObjects(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.AssetObject.query({ assetId: self.asset.id }, function (result) {\n\t                self.objects = result;\n\t\n\t                if (afterExecuteCallback) {\n\t                    afterExecuteCallback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'loadFloors',\n\t        value: function loadFloors(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.Floor.getByAssetId({ assetId: self.asset.id }, function (result) {\n\t                self.floors = result;\n\t\n\t                if (afterExecuteCallback) {\n\t                    afterExecuteCallback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'createStore',\n\t        value: function createStore() {\n\t            var self = this;\n\t\n\t            self.store = new _array_store2.default({\n\t                data: self.floors,\n\t                key: \"id\",\n\t                modified: function modified() {\n\t                    // 'modified' event handler\n\t                },\n\t                errorHandler: self.errorHandler.requestFailed\n\t            });\n\t\n\t            return self.store;\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.isFloorFormVisible = false;\n\t            self.isAddFloorRangeDisabled = false;\n\t            self.$scope.Messages = _messages2.default;\n\t\n\t            self.$scope.$on('updateAssetObjectDataSource', function (e, data) {\n\t                self.updateDataSources();\n\t            });\n\t\n\t            self.updateDataSources = function () {\n\t                self.loadData(function (t) {\n\t                    var dataGrid = $(\"#gridContainer\").dxDataGrid('instance');\n\t                    dataGrid.beginUpdate();\n\t                    dataGrid.columnOption('assetObjectId', 'lookup.dataSource', { store: self.assetObjectStore });\n\t                    dataGrid.option('dataSource', []);\n\t                    dataGrid.option('dataSource', { store: self.createStore() });\n\t                    dataGrid.endUpdate();\n\t\n\t                    self.refreshGrid();\n\t                });\n\t            };\n\t\n\t            self.validateFloor = function (oldValue, newValue) {\n\t                var floors = self.floors;\n\t\n\t                if (!newValue || newValue.number == '' && newValue.number != 0) return false;\n\t\n\t                if (newValue.number == undefined) return true;\n\t\n\t                for (var i = 0; i < floors.length; i++) {\n\t                    if (!oldValue || floors[i].number !== oldValue.number) {\n\t                        if (newValue.number == floors[i].number && newValue.assetObjectId == floors[i].assetObjectId) {\n\t                            return false;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                return true;\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.createStore();\n\t\n\t            self.assetObjectStore = new _custom_store2.default({\n\t                load: function load(loadOptions) {\n\t                    return self.objects;\n\t                },\n\t                byKey: function byKey(key) {\n\t                    return { id: key };\n\t                }\n\t            });\n\t\n\t            self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                dataSource: { store: self.store },\n\t                groupPanel: {\n\t                    visible: false\n\t                },\n\t                filterRow: {\n\t                    visible: false\n\t                },\n\t                editing: {\n\t                    texts: {\n\t                        confirmDeleteMessage: ''\n\t                    }\n\t                },\n\t                columns: [{\n\t                    dataField: \"number\",\n\t                    caption: (0, _messages2.default)('assets.floors.number'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    allowSorting: false,\n\t                    validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 10 }],\n\t                    width: 150,\n\t                    alignment: 'right'\n\t                }, {\n\t                    dataField: \"description\",\n\t                    caption: (0, _messages2.default)('assets.floors.description'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    allowSorting: false,\n\t                    validationRules: [{ type: 'stringLength', max: 500 }]\n\t                }, {\n\t                    dataField: 'assetObjectId',\n\t                    caption: (0, _messages2.default)('assets.floors.assetobject'),\n\t                    width: 100,\n\t                    allowSorting: false,\n\t                    lookup: {\n\t                        dataSource: { store: self.assetObjectStore },\n\t                        displayExpr: 'name',\n\t                        valueExpr: 'id'\n\t                    },\n\t                    alignment: 'right',\n\t                    allowEditing: false\n\t                }, {\n\t                    dataField: \"order\",\n\t                    visible: false,\n\t                    sortOrder: \"asc\" }, {\n\t                    dataField: \"id\",\n\t                    caption: (0, _messages2.default)('actions'),\n\t                    width: 100,\n\t                    allowSorting: false,\n\t                    alignment: 'right',\n\t                    cellTemplate: function cellTemplate(container, options) {\n\t                        container.addClass(\"actions-cell\");\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-pencil\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                console.log(\"editing...\");\n\t                                $('#gridContainer').dxDataGrid('instance').editRow(options.rowIndex);\n\t                            }\n\t                        }).appendTo(container);\n\t\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-trash-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                if (options.data.spaces && options.data.spaces.length > 0) {\n\t                                    self.NotificationService.warning('Please remove spaces from the floor first');\n\t                                } else {\n\t                                    self.sweetAlert.swal({\n\t                                        title: (0, _messages2.default)('assets.floors.delete.title'),\n\t                                        type: 'warning',\n\t                                        showCancelButton: true,\n\t                                        cancelButtonText: (0, _messages2.default)('assets.cancel'),\n\t                                        confirmButtonColor: '#DD6B55',\n\t                                        confirmButtonText: (0, _messages2.default)('assets.floors.delete.confirmButton')\n\t                                    }, function (isConfirm) {\n\t                                        if (isConfirm) {\n\t                                            self.deleteFloor(options.data);\n\t                                        }\n\t                                    });\n\t                                }\n\t                            }\n\t                        }).appendTo(container);\n\t                    },\n\t                    editCellTemplate: function editCellTemplate(container, options) {\n\t                        container.addClass(\"actions-cell\");\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-floppy-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                $('#gridContainer').dxDataGrid('instance').saveEditData(options.rowIndex);\n\t                                if (self.updateFloor) {\n\t                                    self.updateFloor(options.data);\n\t                                }\n\t                            }\n\t                        }).appendTo(container);\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-times\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                $('#gridContainer').dxDataGrid('instance').cancelEditData(options.rowIndex);\n\t                            }\n\t                        }).appendTo(container);\n\t                    }\n\t                }],\n\t                onRowValidating: function onRowValidating(e) {\n\t                    var dataGrid = e.component;\n\t                    var rowIndex = dataGrid.getRowIndexByKey(e.key);\n\t\n\t                    if (!self.validateFloor(e.oldData, e.newData)) {\n\t                        dataGrid.getCellElement(rowIndex, 'number').find('input').css('background', 'rgba(255, 0, 0, 0.5)');\n\t                        e.isValid = false;\n\t                    }\n\t                }\n\t            });\n\t\n\t            self.refreshGrid = function () {\n\t                $(\"#gridContainer\").dxDataGrid('instance').refresh();\n\t            };\n\t\n\t            self.updateFloor = function (floor) {\n\t                self.Floor.update({ assetId: self.asset.id, objectId: floor.assetObjectId, id: floor.id }, floor, function (result) {\n\t                    self.NotificationService.success((0, _messages2.default)('assets.floors.updated'));\n\t                    self.saveInProgress = false;\n\t\n\t                    self.needUpdateDataSources();\n\t                }, function (error) {\n\t                    console.log(error);\n\t                    self.NotificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            };\n\t\n\t            self.deleteFloor = function (floor) {\n\t                self.Floor.delete({ assetId: self.asset.id, assetObjectId: floor.assetObjectId, id: floor.id }, function (result) {\n\t                    var floorIdx = self.floors.findIndex(function (t) {\n\t                        return t.id == floor.id;\n\t                    });\n\t                    self.floors.splice(floorIdx, 1);\n\t\n\t                    self.NotificationService.success((0, _messages2.default)('assets.floors.deleted'));\n\t                    self.saveInProgress = false;\n\t\n\t                    self.needUpdateDataSources();\n\t\n\t                    self.refreshGrid();\n\t                }, function (error) {\n\t                    console.log(error);\n\t                    self.NotificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            };\n\t\n\t            self.addFloorRange = function (cnt, autoNumerate, assetObjectId) {\n\t                self.Floor.createRange({ assetId: self.asset.id, assetObjectId: assetObjectId, count: cnt, autonumerate: autoNumerate }, function (result) {\n\t                    result.forEach(function (t) {\n\t                        self.floors.push(t);\n\t                    });\n\t\n\t                    self.NotificationService.success((0, _messages2.default)('assets.floors.created'));\n\t                    self.saveInProgress = false;\n\t\n\t                    self.needUpdateDataSources();\n\t\n\t                    self.refreshGrid();\n\t                }, function (error) {\n\t                    console.log(error);\n\t                    self.NotificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            };\n\t\n\t            self.temp = true;\n\t        }\n\t    }, {\n\t        key: 'addFloorsRange',\n\t        value: function addFloorsRange() {\n\t            var self = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _floorsAddRangeModalController2.default,\n\t                template: _floorsAddRangeModalTemplate2.default,\n\t                resolve: {\n\t                    asset: self.asset\n\t                }\n\t            });\n\t            modal.result.then(function (result) {\n\t                self.addFloorRange(result.addRangeFloorCount, result.autoNumerateFloors, result.assetObjectId);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return FloorController;\n\t}();\n\t\n\texports.default = FloorController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 774 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\t__webpack_require__(703);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FloorsAddRangeModalController = function () {\n\t    FloorsAddRangeModalController.$inject = ['$scope', 'asset', 'Asset', 'AssetObject', '$uibModalInstance', 'NotificationService'];\n\t\n\t    /*@ngInject*/\n\t    function FloorsAddRangeModalController($scope, asset, Asset, AssetObject, $uibModalInstance, NotificationService) {\n\t        _classCallCheck(this, FloorsAddRangeModalController);\n\t\n\t        this.$scope = $scope;\n\t        this.asset = asset;\n\t        this.Asset = Asset;\n\t        this.AssetObject = AssetObject;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.notificationService = NotificationService;\n\t        this.validationGroup = 'floors-add-range';\n\t\n\t        this.init();\n\t        this.initDataSource();\n\t    }\n\t\n\t    _createClass(FloorsAddRangeModalController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.$scope.floorRequest = { addRangeFloorCount: 1, autoNumerateFloors: false, assetObjectId: null };\n\t\n\t            self.$scope.getDataInProgress = false;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(self.validationGroup);\n\t                self.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initDataSource',\n\t        value: function initDataSource() {\n\t            var self = this;\n\t            self.$scope.getDataInProgress = true;\n\t            self.AssetObject.query({ assetId: self.asset.id }, function (result) {\n\t                self.objects = result;\n\t                self.assetObjectStore = new _array_store2.default({\n\t                    data: self.objects,\n\t                    key: \"id\",\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t                self.$scope.getDataInProgress = false;\n\t                self.initForm();\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var self = this;\n\t\n\t            self.$scope.floorRangeSettings = {\n\t                showSpinButtons: true,\n\t                showClearButton: false,\n\t                onValueChanged: function onValueChanged(e) {\n\t                    var result = _validation_engine2.default.getGroupConfig(self.validationGroup).validate();\n\t                    self.$scope.isAddFloorRangeDisabled = !result.isValid;\n\t                },\n\t                bindingOptions: {\n\t                    value: 'floorRequest.addRangeFloorCount'\n\t                }\n\t            };\n\t            self.$scope.floorRangeValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'numeric' }, { type: 'range', min: 1, max: 100 }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            self.$scope.autoNumerateFloorSettings = {\n\t                text: '',\n\t                type: 'default',\n\t                bindingOptions: {\n\t                    value: 'floorRequest.autoNumerateFloors'\n\t                }\n\t            };\n\t\n\t            self.$scope.assetObjectSelectSettings = {\n\t                dataSource: self.assetObjectStore,\n\t                displayExpr: 'name',\n\t                valueExpr: 'id',\n\t                bindingOptions: {\n\t                    value: 'floorRequest.assetObjectId'\n\t                }\n\t            };\n\t\n\t            self.$scope.assetObjectValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            self.$scope.validateAndSaveSettings = function () {\n\t                var result = _validation_engine2.default.getGroupConfig(self.validationGroup).validate();\n\t                if (result.isValid) {\n\t                    self.$scope.saveInProgress = true;\n\t                    self.$scope.isSaveOperationDisable = true;\n\t\n\t                    self.$uibModalInstance.close({\n\t                        addRangeFloorCount: self.$scope.floorRequest.addRangeFloorCount,\n\t                        autoNumerateFloors: self.$scope.floorRequest.autoNumerateFloors,\n\t                        assetObjectId: self.$scope.floorRequest.assetObjectId\n\t                    });\n\t                }\n\t            };\n\t        }\n\t    }]);\n\t\n\t    return FloorsAddRangeModalController;\n\t}();\n\t\n\texports.default = FloorsAddRangeModalController;\n\n/***/ },\n/* 775 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{ Messages('assets.floors.range.modal.title') }}</h4>\\r\\n    </div>\\r\\n    <div ng-if=\\\"getDataInProgress\\\" class=\\\"modal-loader\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" ng-if=\\\"!getDataInProgress\\\">\\r\\n        <div id=\\\"floorRangeForm\\\" class=\\\"form-horizontal\\\">\\r\\n            <h4 class=\\\"col-sm-offset-1\\\">{{ Messages('assets.floors.range.title') }}</h4><br>\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-assetobject\\\" class=\\\"col-sm-3 control-label\\\">{{ Messages('assets.floors.assetobject') }}:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div id=\\\"field-assetobject\\\" dx-select-box=\\\"assetObjectSelectSettings\\\" dx-validator=\\\"assetObjectValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>  \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-floor-number\\\" class=\\\"col-sm-3 control-label\\\">{{ Messages('assets.floors.range.field') }}:</label>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                        <div id=\\\"field-floor-number\\\" dx-number-box=\\\"floorRangeSettings\\\" dx-validator=\\\"floorRangeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-floor-settings\\\" class=\\\"col-sm-3 control-label\\\">{{ Messages('assets.floors.range.checkbox') }}:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div id=\\\"field-floor-settings\\\" dx-check-box=\\\"autoNumerateFloorSettings\\\"></div>\\r\\n                        <p class=\\\"help-block\\\"><small>{{ Messages('assets.floors.range.checkbox.help') }}</small></p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSaveSettings()\\\" ng-disabled=\\\"isAddFloorRangeDisabled\\\">\\r\\n            {{ Messages('assets.floors.addbutton') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.floors.cancelbutton') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 776 */,\n/* 777 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form name=\\\"settingsForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addFloorsRange()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('assets.floors.addrange')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\"\n\n/***/ },\n/* 778 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _space = __webpack_require__(779);\n\t\n\tvar _space2 = _interopRequireDefault(_space);\n\t\n\tvar _spaceTemplate = __webpack_require__(780);\n\t\n\tvar _spaceTemplate2 = _interopRequireDefault(_spaceTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SpaceComponent = {\n\t    bindings: {\n\t        asset: '=',\n\t        listMode: '=',\n\t        space: '='\n\t    },\n\t    controller: _space2.default,\n\t    template: _spaceTemplate2.default,\n\t    Messages: _messages2.default\n\t};\n\t\n\texports.default = SpaceComponent;\n\n/***/ },\n/* 779 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _data_source = __webpack_require__(776);\n\t\n\tvar _data_source2 = _interopRequireDefault(_data_source);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SpaceController = function () {\n\t    SpaceController.$inject = ['$scope', 'asset', 'assetObjectId', 'floorId', 'spaceId', 'AssetObject', 'Floor', 'Space', 'NotificationService', 'UtilsService', '$uibModalInstance'];\n\t\n\t    /*@ngInject*/\n\t    function SpaceController($scope, asset, assetObjectId, floorId, spaceId, AssetObject, Floor, Space, NotificationService, UtilsService, $uibModalInstance) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, SpaceController);\n\t\n\t        // from component\n\t        this.$scope = $scope;\n\t        this.asset = asset;\n\t        this.assetObjectId = assetObjectId;\n\t        this.floorId = floorId;\n\t        this.spaceId = spaceId;\n\t\n\t        this.utils = UtilsService;\n\t\n\t        this.Messages = _messages2.default;\n\t\n\t        // injected\n\t        this.AssetObject = AssetObject;\n\t        this.Floor = Floor;\n\t        this.Space = Space;\n\t        this.NotificationService = NotificationService;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t\n\t        this.validationGroup = 'spaces-add';\n\t\n\t        // initialization\n\t        this.init();\n\t        this.initDataSource(function (t) {\n\t            _this.initForm();\n\t        });\n\t        self.objects = [];\n\t        self.floors = [];\n\t    }\n\t\n\t    _createClass(SpaceController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this2 = this;\n\t\n\t            var self = this;\n\t\n\t            self.$scope.asset = self.asset;\n\t            self.$scope.Messages = _messages2.default;\n\t            self.$scope.getDataInProgress = false;\n\t            self.$scope.editMode = self.spaceId > 0;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            if (self.spaceId > 0) {\n\t                this.$scope.getDataInProgress = true;\n\t                self.Space.getFull({ assetId: self.asset.id, assetObjectId: self.assetObjectId, floorId: self.floorId, id: self.spaceId }, function (result) {\n\t                    self.space = result;\n\t                    self.$scope.space = self.space;\n\t                    _this2.$scope.getDataInProgress = false;\n\t                }, function (error) {\n\t                    _this2.NotificationService.error(error.data.message ? error.data.message : error.data);\n\t                });\n\t            } else {\n\t                self.space = {\n\t                    id: 0,\n\t                    uniqueId: self.utils.generateGuid(),\n\t                    number: '',\n\t                    type: 1,\n\t                    rentableArea: null,\n\t                    assetId: self.asset.id,\n\t                    assetObjectId: null,\n\t                    floorId: null,\n\t                    brokerId: self.asset.brokerId,\n\t                    marketingDescription: '',\n\t                    notes: ''\n\t                };\n\t                self.$scope.space = self.space;\n\t            }\n\t\n\t            self.spaceTypeStore = _constants2.default.spaceTypeStore();\n\t            self.spaceStateStore = _constants2.default.spaceStateStore();\n\t        }\n\t    }, {\n\t        key: 'loadAssetObjects',\n\t        value: function loadAssetObjects(callback) {\n\t            var self = this;\n\t            self.AssetObject.query({ assetId: self.asset.id }, function (result) {\n\t                self.objects = result;\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'loadFloors',\n\t        value: function loadFloors(assetObjectId, callback) {\n\t            var self = this;\n\t            self.Floor.query({ assetId: self.asset.id, assetObjectId: assetObjectId }, function (result) {\n\t                self.floors = result;\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'initDataSource',\n\t        value: function initDataSource(callback) {\n\t            var self = this;\n\t\n\t            self.loadAssetObjects(function (t) {\n\t                self.assetObjectStore = new _array_store2.default({\n\t                    data: self.objects,\n\t                    key: \"id\",\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t\n\t                self.floorStore = new _data_source2.default({\n\t                    load: function load(loadOptions) {\n\t                        return self.floors;\n\t                    },\n\t                    byKey: function byKey(key) {\n\t                        return { id: key };\n\t                    },\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var self = this;\n\t\n\t            self.$scope.numberSettings = {\n\t                placeholder: (0, _messages2.default)('assets.spaces.placeholder.number'),\n\t                bindingOptions: {\n\t                    value: 'space.number'\n\t                }\n\t            };\n\t            self.$scope.numberValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 20, message: (0, _messages2.default)('validation.maxLength') }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            self.$scope.typeSelectSettings = {\n\t                dataSource: self.spaceTypeStore,\n\t                displayExpr: 'display',\n\t                valueExpr: 'value',\n\t                bindingOptions: {\n\t                    value: 'space.type'\n\t                }\n\t            };\n\t\n\t            self.$scope.typeValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            self.$scope.rentableAreaSettings = {\n\t                placeholder: (0, _messages2.default)('assets.spaces.placeholder.rentableArea'),\n\t                bindingOptions: { value: 'space.rentableArea' },\n\t                value: 1,\n\t                showSpinButtons: true,\n\t                showClearButton: false,\n\t                max: 1000,\n\t                min: 1\n\t            };\n\t\n\t            self.$scope.rentableAreaValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'numeric' }, { type: 'range', min: 0 }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            self.$scope.floorSelectSettings = {\n\t                dataSource: self.floorStore,\n\t                displayExpr: 'number',\n\t                valueExpr: 'id',\n\t                bindingOptions: {\n\t                    value: 'space.floorId',\n\t                    disabled: 'editMode'\n\t                }\n\t            };\n\t\n\t            self.$scope.floorValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            self.$scope.assetObjectSelectSettings = {\n\t                dataSource: self.assetObjectStore,\n\t                displayExpr: 'name',\n\t                valueExpr: 'id',\n\t                bindingOptions: {\n\t                    value: 'space.assetObjectId',\n\t                    disabled: 'editMode'\n\t                },\n\t                onSelectionChanged: function onSelectionChanged(e) {\n\t                    self.loadFloors(e.selectedItem.id, function (t) {\n\t                        self.floorStore.load().done(function () {\n\t                            if (self.assetObjectId != self.space.assetObjectId) {\n\t                                self.space.floorId = null;\n\t                                self.assetObjectId = self.space.assetObjectId;\n\t                            }\n\t\n\t                            $(\"#field-floor\").dxSelectBox(\"instance\").repaint();\n\t                        });\n\t                    });\n\t                }\n\t            };\n\t\n\t            this.$scope.assetObjectValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.marketingDescriptionSettings = {\n\t                placeholder: (0, _messages2.default)('assets.spaces.placeholder.marketingDescription'),\n\t                height: 180,\n\t                maxLength: 500,\n\t                bindingOptions: {\n\t                    value: 'space.marketingDescription'\n\t                }\n\t            };\n\t            this.$scope.marketingDescriptionValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 500 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.notesSettings = {\n\t                placeholder: (0, _messages2.default)('assets.spaces.placeholder.notes'),\n\t                height: 180,\n\t                maxLength: 500,\n\t                bindingOptions: { value: 'space.notes' }\n\t            };\n\t            this.$scope.notesValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 500 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            self.$scope.minAskingPriceSettings = {\n\t                placeholder: (0, _messages2.default)('assets.spaces.placeholder.minAskingPrice'),\n\t                bindingOptions: {\n\t                    value: 'space.minAskingPrice'\n\t                }\n\t            };\n\t            self.$scope.minAskingPriceValidationRules = {\n\t                validationRules: [{ type: 'numeric' }, { type: 'range', min: 0 }, {\n\t                    type: 'custom',\n\t                    validationCallback: function validationCallback(options) {\n\t                        if (!options.value) return true;\n\t                        if (!self.space.maxAskingPrice) return true;\n\t\n\t                        options.rule.message = (0, _messages2.default)('assets.spaces.validation.maxAskingPrice');\n\t\n\t                        return options.value < self.space.maxAskingPrice;\n\t                    }\n\t                }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            self.$scope.maxAskingPriceSettings = {\n\t                placeholder: (0, _messages2.default)('assets.spaces.placeholder.maxAskingPrice'),\n\t                bindingOptions: {\n\t                    value: 'space.maxAskingPrice'\n\t                }\n\t            };\n\t            self.$scope.maxAskingPriceValidationRules = {\n\t                validationRules: [{ type: 'numeric' }, { type: 'range', min: 0 }, {\n\t                    type: 'custom',\n\t                    validationCallback: function validationCallback(options) {\n\t                        if (!options.value) return true;\n\t                        if (!self.space.minAskingPrice) return true;\n\t\n\t                        options.rule.message = (0, _messages2.default)('assets.spaces.validation.maxAskingPrice');\n\t\n\t                        return options.value > self.space.minAskingPrice;\n\t                    }\n\t                }],\n\t                validationGroup: self.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSave = function () {\n\t                var result = _validation_engine2.default.getGroupConfig(self.validationGroup).validate();\n\t                if (result.isValid) {\n\t                    self.$uibModalInstance.close({\n\t                        space: self.$scope.space\n\t                    });\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(self.validationGroup);\n\t                self.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }]);\n\t\n\t    return SpaceController;\n\t}();\n\t\n\texports.default = SpaceController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 780 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{ Messages('assets.spaces.modal.title') }}</h4>\\r\\n    </div>\\r\\n    <div ng-if=\\\"getDataInProgress\\\" class=\\\"modal-loader\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" ng-if=\\\"!getDataInProgress\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-number\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.number') }}:</label>\\r\\n            <div id=\\\"field-number\\\" dx-text-box=\\\"numberSettings\\\" dx-validator=\\\"numberValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-type\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.type') }}:</label>\\r\\n            <div id=\\\"field-type\\\" dx-select-box=\\\"typeSelectSettings\\\" dx-validator=\\\"typeValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-rentable-area\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.rentableArea') }}:</label>\\r\\n            <div id=\\\"field-rentable-area\\\" dx-number-box=\\\"rentableAreaSettings\\\" dx-validator=\\\"rentableAreaValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-assetobject\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.assetobject') }}:</label>\\r\\n            <div id=\\\"field-assetobject\\\" dx-select-box=\\\"assetObjectSelectSettings\\\" dx-validator=\\\"assetObjectValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-floor\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.floor') }}:</label>\\r\\n            <div id=\\\"field-floor\\\" dx-select-box=\\\"floorSelectSettings\\\" dx-validator=\\\"floorValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-min-asking-price\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.minAskingPrice') }}:</label>\\r\\n            <div id=\\\"field-min-asking-price\\\" dx-number-box=\\\"minAskingPriceSettings\\\" dx-validator=\\\"minAskingPriceValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-max-asking-price\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.maxAskingPrice') }}:</label>\\r\\n            <div id=\\\"field-max-asking-price\\\" dx-number-box=\\\"maxAskingPriceSettings\\\" dx-validator=\\\"maxAskingPriceValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-marketing-description\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.marketingDescription') }}:</label>\\r\\n            <div id=\\\"field-marketing-description\\\" dx-text-area=\\\"marketingDescriptionSettings\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-notes\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.notes') }}:</label>\\r\\n            <div id=\\\"field-notes\\\" dx-text-area=\\\"notesSettings\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('assets.spaces.saving') : Messages('assets.spaces.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.spaces.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n/* 781 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _spaces = __webpack_require__(782);\n\t\n\tvar _spaces2 = _interopRequireDefault(_spaces);\n\t\n\tvar _spacesTemplate = __webpack_require__(783);\n\t\n\tvar _spacesTemplate2 = _interopRequireDefault(_spacesTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SpacesComponent = {\n\t    bindings: {\n\t        asset: '=',\n\t        saveUpdates: '=?',\n\t        needUpdateDataSources: '&'\n\t    },\n\t    controller: _spaces2.default,\n\t    template: _spacesTemplate2.default\n\t};\n\t\n\texports.default = SpacesComponent;\n\n/***/ },\n/* 782 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _custom_store = __webpack_require__(412);\n\t\n\tvar _custom_store2 = _interopRequireDefault(_custom_store);\n\t\n\tvar _data_source = __webpack_require__(776);\n\t\n\tvar _data_source2 = _interopRequireDefault(_data_source);\n\t\n\tvar _space = __webpack_require__(779);\n\t\n\tvar _space2 = _interopRequireDefault(_space);\n\t\n\tvar _spaceTemplate = __webpack_require__(780);\n\t\n\tvar _spaceTemplate2 = _interopRequireDefault(_spaceTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SpacesController = function () {\n\t    SpacesController.$inject = ['$scope', 'AssetObject', 'Floor', 'Space', 'NotificationService', 'UtilsService', 'sweetAlert', '$uibModal'];\n\t\n\t    /*@ngInject*/\n\t    function SpacesController($scope, AssetObject, Floor, Space, NotificationService, UtilsService, sweetAlert, $uibModal) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, SpacesController);\n\t\n\t        // from component\n\t        this.asset = this.asset;\n\t\n\t        // injected\n\t        this.$scope = $scope;\n\t        this.NotificationService = NotificationService;\n\t        this.utils = UtilsService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t        this.messages = _messages2.default;\n\t\n\t        this.AssetObject = AssetObject;\n\t        this.Floor = Floor;\n\t        this.Space = Space;\n\t\n\t        this.loadData(function (t) {\n\t            _this.init();\n\t            _this.initGrid();\n\t        });\n\t    }\n\t\n\t    _createClass(SpacesController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t            self.$scope.$on('updateAssetObjectDataSource', function (e, data) {\n\t                self.updateDataSources();\n\t            });\n\t\n\t            self.$scope.$on('updateFloorDataSource', function (e, data) {\n\t                self.updateDataSources();\n\t            });\n\t\n\t            self.updateDataSources = function () {\n\t                self.loadData(function (t) {\n\t                    var dataGrid = $(\"#spacesGridContainer\").dxDataGrid('instance');\n\t                    dataGrid.beginUpdate();\n\t                    dataGrid.columnOption('floorId', 'lookup.dataSource', { store: self.floorStore });\n\t                    dataGrid.columnOption('assetObjectId', 'lookup.dataSource', { store: self.assetObjectStore });\n\t                    dataGrid.option('dataSource', []);\n\t                    dataGrid.option('dataSource', { store: self.createStore() });\n\t                    dataGrid.endUpdate();\n\t\n\t                    self.refreshGrid();\n\t                });\n\t            };\n\t        }\n\t    }, {\n\t        key: 'loadData',\n\t        value: function loadData(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.loadAssetObjects(function () {\n\t                self.loadFloors(function () {\n\t                    self.loadSpaces(function () {\n\t                        if (afterExecuteCallback) afterExecuteCallback();\n\t                    });\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'loadAssetObjects',\n\t        value: function loadAssetObjects(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.AssetObject.query({ assetId: self.asset.id }, function (result) {\n\t                self.objects = result;\n\t\n\t                if (afterExecuteCallback) {\n\t                    afterExecuteCallback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'loadFloors',\n\t        value: function loadFloors(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.Floor.getByAssetId({ assetId: self.asset.id }, function (result) {\n\t                self.floors = result;\n\t\n\t                if (afterExecuteCallback) {\n\t                    afterExecuteCallback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'loadSpaces',\n\t        value: function loadSpaces(afterExecuteCallback) {\n\t            var self = this;\n\t\n\t            self.Space.getByAssetId({ assetId: self.asset.id }, function (result) {\n\t                self.spaces = result;\n\t\n\t                if (afterExecuteCallback) {\n\t                    afterExecuteCallback();\n\t                }\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'createStore',\n\t        value: function createStore() {\n\t            var self = this;\n\t\n\t            self.store = new _array_store2.default({\n\t                data: self.spaces,\n\t                key: \"id\",\n\t                modified: function modified() {\n\t                    // 'modified' event handler\n\t                },\n\t                errorHandler: self.errorHandler.requestFailed\n\t            });\n\t\n\t            return self.store;\n\t        }\n\t    }, {\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.spaceTypeStore = _constants2.default.spaceTypeStore();\n\t\n\t            self.createStore();\n\t\n\t            self.floorStore = new _custom_store2.default({\n\t                load: function load(loadOptions) {\n\t                    return self.floors;\n\t                },\n\t                byKey: function byKey(key) {\n\t                    return { id: key };\n\t                }\n\t            });\n\t\n\t            self.assetObjectStore = new _custom_store2.default({\n\t                load: function load(loadOptions) {\n\t                    return self.objects;\n\t                },\n\t                byKey: function byKey(key) {\n\t                    return { id: key };\n\t                }\n\t            });\n\t\n\t            self.gridDataSource = self.store;\n\t\n\t            self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                dataSource: { store: self.store },\n\t                filterRow: { visible: false },\n\t                groupPanel: { visible: false },\n\t                columns: [{\n\t                    dataField: 'number',\n\t                    caption: (0, _messages2.default)('assets.spaces.number'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    sortOrder: 'asc',\n\t                    alignment: 'right'\n\t                }, {\n\t                    dataField: 'type',\n\t                    caption: (0, _messages2.default)('assets.spaces.type'),\n\t                    // width: 100,\n\t                    lookup: {\n\t                        dataSource: self.spaceTypeStore,\n\t                        displayExpr: 'display',\n\t                        valueExpr: 'value'\n\t                    }\n\t                }, {\n\t                    dataField: 'rentableArea',\n\t                    dataType: 'number',\n\t                    caption: (0, _messages2.default)('assets.spaces.rentableArea'),\n\t                    filterOperations: ['>', '<', '='],\n\t                    selectedFilterOperation: '>',\n\t                    alignment: 'right'\n\t                }, {\n\t                    dataField: 'floorId',\n\t                    caption: (0, _messages2.default)('assets.spaces.floor'),\n\t                    // width: 100,\n\t                    lookup: {\n\t                        dataSource: { store: self.floorStore },\n\t                        displayExpr: 'number',\n\t                        valueExpr: 'id'\n\t                    },\n\t                    alignment: 'right',\n\t                    allowEditing: false\n\t                }, {\n\t                    dataField: 'assetObjectId',\n\t                    caption: (0, _messages2.default)('assets.spaces.assetobject'),\n\t                    width: 100,\n\t                    lookup: {\n\t                        dataSource: { store: self.assetObjectStore },\n\t                        displayExpr: 'name',\n\t                        valueExpr: 'id'\n\t                    },\n\t                    alignment: 'right',\n\t                    allowEditing: false\n\t                }, {\n\t                    dataField: \"id\",\n\t                    caption: (0, _messages2.default)('actions'),\n\t                    width: 100,\n\t                    alignment: 'right',\n\t                    cellTemplate: function cellTemplate(container, options) {\n\t                        container.addClass(\"actions-cell\");\n\t\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-pencil\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.updateSpace(options.data);\n\t                            }\n\t                        }).appendTo(container);\n\t\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-trash-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.deleteSpace(options.data);\n\t                            }\n\t                        }).appendTo(container);\n\t                    } }]\n\t            });\n\t        }\n\t    }, {\n\t        key: 'createSpace',\n\t        value: function createSpace() {\n\t            var _this2 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _space2.default,\n\t                template: _spaceTemplate2.default,\n\t                resolve: {\n\t                    asset: this.asset,\n\t                    assetObjectId: null,\n\t                    floorId: null,\n\t                    spaceId: 0\n\t                },\n\t                size: 'lg'\n\t            });\n\t            modal.result.then(function (result) {\n\t\n\t                _this2.Space.create({ assetId: _this2.asset.id, assetObjectId: result.space.assetObjectId, floorId: result.space.floorId }, result.space, function (result) {\n\t                    _this2.spaces.push(result);\n\t                    _this2.NotificationService.success((0, _messages2.default)('assets.spaces.created'));\n\t                    _this2.saveInProgress = false;\n\t\n\t                    _this2.refreshGrid();\n\t                }, function (error) {\n\t                    console.log(error);\n\t                    _this2.NotificationService.error(error.data);\n\t                    _this2.saveInProgress = false;\n\t                });\n\t            });\n\t\n\t            modal.closed.then(function () {\n\t                //this.refreshGrid();\n\t            });\n\t\n\t            this.space = null;\n\t        }\n\t    }, {\n\t        key: 'updateSpace',\n\t        value: function updateSpace(space) {\n\t            var self = this;\n\t\n\t            var modal = self.$uibModal.open({\n\t                controller: _space2.default,\n\t                template: _spaceTemplate2.default,\n\t                resolve: {\n\t                    asset: self.asset,\n\t                    assetObjectId: space.assetObjectId,\n\t                    floorId: space.floorId,\n\t                    spaceId: space.id\n\t                },\n\t                size: 'lg'\n\t            });\n\t            modal.result.then(function (result) {\n\t                jQuery.extend(space, result.space);\n\t\n\t                self.Space.update({ assetId: self.asset.id, assetObjectId: result.space.assetObjectId, floorId: result.space.floorId, id: result.space.id }, result.space, function (result) {\n\t                    self.NotificationService.success((0, _messages2.default)('assets.spaces.updated'));\n\t                    self.saveInProgress = false;\n\t                }, function (error) {\n\t                    console.log(error);\n\t                    self.NotificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            });\n\t            modal.closed.then(function () {});\n\t        }\n\t    }, {\n\t        key: 'deleteSpace',\n\t        value: function deleteSpace(space) {\n\t            var self = this;\n\t            self.sweetAlert.swal({\n\t                title: (0, _messages2.default)('assets.spaces.delete.title'),\n\t                type: 'warning',\n\t                showCancelButton: true,\n\t                cancelButtonText: (0, _messages2.default)('assets.cancel'),\n\t                confirmButtonColor: '#DD6B55',\n\t                confirmButtonText: (0, _messages2.default)('assets.spaces.delete.confirmButton')\n\t            }, function (isConfirm) {\n\t                if (isConfirm) {\n\t                    self.Space.delete({ assetId: self.asset.id, assetObjectId: space.assetObjectId, floorId: space.floorId, id: space.id }, function (result) {\n\t                        var spaceIdx = self.spaces.findIndex(function (t) {\n\t                            return t.id == space.id;\n\t                        });\n\t                        self.spaces.splice(spaceIdx, 1);\n\t\n\t                        self.refreshGrid();\n\t                        self.NotificationService.success((0, _messages2.default)('assets.spaces.deleted'));\n\t                        self.saveInProgress = false;\n\t                    }, function (error) {\n\t                        console.log(error);\n\t                        self.NotificationService.error(error.data.message ? error.data.message : error.data);\n\t                        self.saveInProgress = false;\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'refreshGrid',\n\t        value: function refreshGrid() {\n\t            $(\"#spacesGridContainer\").dxDataGrid('instance').refresh();\n\t        }\n\t    }]);\n\t\n\t    return SpacesController;\n\t}();\n\t\n\texports.default = SpacesController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162), __webpack_require__(162)))\n\n/***/ },\n/* 783 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form name=\\\"spacesForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.createSpace()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('assets.spaces.add')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"spacesGridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\"\n\n/***/ },\n/* 784 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar AssetDocumentsComponent = {\n\t    bindings: {\n\t        documents: '=',\n\t        asset: '=',\n\t        maxAttachementSize: '=?',\n\t        maxAttachementCount: '=?',\n\t        readonly: '=?',\n\t        documentCreateCallback: '=?',\n\t        saveUpdates: '=?'\n\t    },\n\t    controller: function controller() {\n\t        var self = this;\n\t\n\t        self.maxAttachementCount = 10;\n\t        self.maxAttachementSize = 5000000;\n\t\n\t        self.documentCreateCallback = function (document) {\n\t            document.assetId = self.asset.id;\n\t            self.saveUpdates();\n\t            //spaceId: self.space.spaceId,\n\t        };\n\t        self.documentDeleteCallback = function (document) {\n\t            self.saveUpdates();\n\t        };\n\t    },\n\t    template: \"<attachements documents='$ctrl.documents' \" + \"                        readonly='$ctrl.readonly' \" + \"                        max-attachement-count='$ctrl.maxAttachementCount' \" + \"                        max-attachement-size='$ctrl.maxAttachementSize' \" + \"                        document-create-callback='$ctrl.documentCreateCallback' \" + \"                        document-delete-callback='$ctrl.documentDeleteCallback' \" + \"                        class='asset-documents'></attachements>\"\n\t};\n\t\n\texports.default = AssetDocumentsComponent;\n\n/***/ },\n/* 785 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _object = __webpack_require__(786);\n\t\n\tvar _object2 = _interopRequireDefault(_object);\n\t\n\tvar _objectTemplate = __webpack_require__(789);\n\t\n\tvar _objectTemplate2 = _interopRequireDefault(_objectTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// import template and controller from individual component directory\n\tvar AssetObjectComponent = {\n\t    bindings: {\n\t        asset: '=',\n\t        saveUpdates: '=?',\n\t        needUpdateDataSources: '&'\n\t    },\n\t    controller: _object2.default,\n\t    template: _objectTemplate2.default\n\t};\n\t\n\texports.default = AssetObjectComponent;\n\n/***/ },\n/* 786 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _assetObjectEditModal = __webpack_require__(787);\n\t\n\tvar _assetObjectEditModal2 = _interopRequireDefault(_assetObjectEditModal);\n\t\n\tvar _assetObjectEditModalTemplate = __webpack_require__(788);\n\t\n\tvar _assetObjectEditModalTemplate2 = _interopRequireDefault(_assetObjectEditModalTemplate);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetObjectController = function () {\n\t    AssetObjectController.$inject = ['$scope', '$state', 'AssetObject', 'NotificationService', 'UtilsService', 'sweetAlert', '$uibModal'];\n\t\n\t    /*@ngInject*/\n\t    function AssetObjectController($scope, $state, AssetObject, NotificationService, UtilsService, sweetAlert, $uibModal) {\n\t        _classCallCheck(this, AssetObjectController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.AssetObject = AssetObject;\n\t        this.NotificationService = NotificationService;\n\t        this.utils = UtilsService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t\n\t        this.messages = _messages2.default;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(AssetObjectController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.AssetObject.query({ assetId: self.asset.id }, function (result) {\n\t                self.objects = result;\n\t\n\t                for (var i = 0; i < self.objects.length; i++) {\n\t                    if (!self.objects[i].uniqueId) {\n\t                        self.objects[i].uniqueId = self.utils.generateGuid();\n\t                    }\n\t                    self.objects[i].address = self.utils.generateAddress(self.objects[i]);\n\t                }\n\t\n\t                self.initGrid();\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.store = new _array_store2.default({\n\t                data: self.objects,\n\t                key: \"uniqueId\",\n\t                modified: function modified() {\n\t                    // 'modified' event handler\n\t                },\n\t                errorHandler: self.errorHandler.requestFailed\n\t            });\n\t\n\t            self.gridDataSource = { store: self.store };\n\t\n\t            self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                dataSource: self.gridDataSource,\n\t                groupPanel: {\n\t                    visible: false\n\t                },\n\t                filterRow: {\n\t                    visible: false\n\t                },\n\t                columns: [{\n\t                    dataField: \"name\",\n\t                    caption: (0, _messages2.default)('assets.objects.name'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    allowSorting: false,\n\t                    width: 150,\n\t                    alignment: 'right'\n\t                }, {\n\t                    dataField: \"address\",\n\t                    caption: (0, _messages2.default)('assets.objects.address'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    allowSorting: false\n\t                }, {\n\t                    dataField: \"isDisplayOnStackingPlan\",\n\t                    caption: (0, _messages2.default)('assets.objects.isDisplayOnStackingPlan'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    allowSorting: false,\n\t                    dataType: 'boolean'\n\t                }, {\n\t                    dataField: \"id\",\n\t                    visible: false\n\t                }, {\n\t                    dataField: \"uniqueId\",\n\t                    caption: (0, _messages2.default)('actions'),\n\t                    width: 100,\n\t                    allowSorting: false,\n\t                    alignment: 'right',\n\t                    cellTemplate: function cellTemplate(container, options) {\n\t                        container.addClass(\"actions-cell\");\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-pencil\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.editAssetObject(options.data.id);\n\t                            }\n\t                        }).appendTo(container);\n\t\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-trash-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.sweetAlert.swal({\n\t                                    title: (0, _messages2.default)('assets.objects.delete.title'),\n\t                                    type: 'warning',\n\t                                    showCancelButton: true,\n\t                                    cancelButtonText: (0, _messages2.default)('assets.cancel'),\n\t                                    confirmButtonColor: '#DD6B55',\n\t                                    confirmButtonText: (0, _messages2.default)('assets.objects.delete.confirmButton')\n\t                                }, function (isConfirm) {\n\t                                    if (isConfirm) {\n\t                                        self.deleteAssetObject(options.data);\n\t                                    }\n\t                                });\n\t                            }\n\t                        }).appendTo(container);\n\t                    }\n\t                }]\n\t            });\n\t\n\t            self.refreshGrid = function () {\n\t                $(\"#objectsGridContainer\").dxDataGrid('instance').refresh();\n\t            };\n\t\n\t            self.deleteAssetObject = function (assetObject) {\n\t                self.AssetObject.archive({ assetId: self.asset.id, id: assetObject.id }, function (result) {\n\t                    var assetObjectIdx = self.objects.findIndex(function (t) {\n\t                        return t.id == assetObject.id;\n\t                    });\n\t                    self.objects.splice(assetObjectIdx, 1);\n\t\n\t                    self.NotificationService.success((0, _messages2.default)('assets.objects.message.deleted'));\n\t                    self.saveInProgress = false;\n\t\n\t                    self.needUpdateDataSources();\n\t                    self.refreshData();\n\t                }, function (error) {\n\t                    console.log(error);\n\t                    self.NotificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            };\n\t        }\n\t    }, {\n\t        key: 'addAssetObject',\n\t        value: function addAssetObject() {\n\t            var self = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _assetObjectEditModal2.default,\n\t                template: _assetObjectEditModalTemplate2.default,\n\t                resolve: {\n\t                    towerObject: null,\n\t                    assetId: self.asset.id\n\t                }\n\t            });\n\t            modal.result.then(function (result) {\n\t                self.needUpdateDataSources();\n\t                self.refreshData();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'editAssetObject',\n\t        value: function editAssetObject(objectId) {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.AssetObject.getById({ id: objectId, assetId: self.asset.id }, function (result) {\n\t                var modal = _this.$uibModal.open({\n\t                    controller: _assetObjectEditModal2.default,\n\t                    template: _assetObjectEditModalTemplate2.default,\n\t                    resolve: {\n\t                        towerObject: result,\n\t                        assetId: self.asset.id\n\t                    }\n\t                });\n\t                modal.result.then(function (result) {\n\t                    self.needUpdateDataSources();\n\t                    self.refreshData();\n\t                });\n\t            }, function (error) {\n\t                _this.notificationService.error(error.data.message ? error.data.message : error.data);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'refreshData',\n\t        value: function refreshData() {\n\t            var self = this;\n\t\n\t            self.AssetObject.query({ assetId: self.asset.id }, function (result) {\n\t                self.objects = result;\n\t\n\t                for (var i = 0; i < self.objects.length; i++) {\n\t                    if (!self.objects[i].uniqueId) {\n\t                        self.objects[i].uniqueId = self.utils.generateGuid();\n\t                    }\n\t                    self.objects[i].address = self.utils.generateAddress(self.objects[i]);\n\t                }\n\t\n\t                self.store = new _array_store2.default({\n\t                    data: self.objects,\n\t                    key: \"uniqueId\",\n\t                    modified: function modified() {},\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t                var dataGrid = $(\"#objectsGridContainer\").dxDataGrid('instance');\n\t                dataGrid.beginUpdate();\n\t                dataGrid.option('dataSource', []);\n\t                dataGrid.option('dataSource', { store: self.store });\n\t                dataGrid.endUpdate();\n\t\n\t                self.refreshGrid();\n\t            }, function (error) {});\n\t        }\n\t    }]);\n\t\n\t    return AssetObjectController;\n\t}();\n\t\n\texports.default = AssetObjectController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 787 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetObjectEditController = function () {\n\t    AssetObjectEditController.$inject = ['$scope', '$state', '$timeout', 'AssetObject', 'towerObject', 'assetId', 'NotificationService', '$uibModalInstance', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function AssetObjectEditController($scope, $state, $timeout, AssetObject, towerObject, assetId, NotificationService, $uibModalInstance, UtilsService) {\n\t        _classCallCheck(this, AssetObjectEditController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.$timeout = $timeout;\n\t        this.AssetObject = AssetObject;\n\t        this.towerObject = towerObject;\n\t        this.notificationService = NotificationService;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.utils = UtilsService;\n\t        this.validationGroup = 'asset-object-edit';\n\t        this.addressValidationGroup = 'asset-object-edit-address';\n\t        this.assetId = assetId;\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(AssetObjectEditController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t\n\t            this.$timeout(function () {\n\t                _this.initAutocomplete();\n\t            });\n\t\n\t            this.$scope.clearAddress = function () {\n\t                self.$scope.tower.address = null;\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this2 = this;\n\t\n\t            var self = this;\n\t\n\t            this.$scope.editMode = this.towerObject !== null;\n\t            this.isSaveOperationDisable = true;\n\t\n\t            if (this.$scope.editMode) {\n\t                this.$scope.tower = this.towerObject;\n\t            } else {\n\t                this.$scope.tower = {\n\t                    name: '',\n\t                    countryId: 1,\n\t                    city: '',\n\t                    street: '',\n\t                    streetAddress: '',\n\t                    postCode: '',\n\t                    isDisplayOnStackingPlan: false\n\t                };\n\t            }\n\t\n\t            this.$scope.nameSettings = {\n\t                placeholder: (0, _messages2.default)('assets.objects.placeholder.name'),\n\t                bindingOptions: {\n\t                    value: 'tower.name'\n\t                }\n\t            };\n\t            this.$scope.nameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 255, message: (0, _messages2.default)('validation.maxLength') }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.displaySettings = {\n\t                bindingOptions: {\n\t                    value: 'tower.isDisplayOnStackingPlan'\n\t                }\n\t            };\n\t            this.$scope.displayValidationRules = {\n\t                validationRules: [],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.countryStore = _constants2.default.countryStore();\n\t            this.$scope.countrySettings = {\n\t                dataSource: this.countryStore,\n\t                displayExpr: 'display',\n\t                valueExpr: 'value',\n\t                bindingOptions: {\n\t                    value: 'tower.countryId'\n\t                }\n\t            };\n\t\n\t            this.$scope.countryValidationRules = {\n\t                validationRules: [],\n\t                validationGroup: this.validationGroup,\n\t                onOptionChanged: function onOptionChanged() {\n\t                    self.setAutocompleteCountry();\n\t                }\n\t            };\n\t\n\t            this.$scope.tower.address = '';\n\t            this.$scope.addressSettings = {\n\t                bindingOptions: {\n\t                    value: 'tower.address',\n\t                    disabled: '!tower.countryId'\n\t                }\n\t            };\n\t            this.$scope.addressValidationRules = {\n\t                validationRules: [{\n\t                    type: 'custom',\n\t                    validationCallback: function validationCallback(options) {\n\t                        if (!self.$scope.tower.countryId) {\n\t                            options.rule.message = (0, _messages2.default)('address.validation.countryRequired');\n\t                            return false;\n\t                        }\n\t\n\t                        return true;\n\t                    }\n\t                }],\n\t                validationGroup: this.addressValidationGroup\n\t            };\n\t\n\t            this.$scope.citySettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.city'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'tower.city'\n\t                }\n\t            };\n\t            this.$scope.cityValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 80 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.street'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'tower.street'\n\t                }\n\t            };\n\t            this.$scope.streetValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 100 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.streetAddressSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.streetAddress'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'tower.streetAddress'\n\t                }\n\t            };\n\t            this.$scope.streetAddressValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.postCodeSettings = {\n\t                placeholder: (0, _messages2.default)('address.placeholder.postCode'),\n\t                onChange: self.$scope.clearAddress,\n\t                bindingOptions: {\n\t                    value: 'tower.postCode'\n\t                }\n\t            };\n\t            this.$scope.postCodeValidationRules = {\n\t                validationRules: [{ type: 'stringLength', max: 10 }],\n\t                validationGroup: this.validationGroup\n\t            };\n\t\n\t            this.$scope.validateAndSave = function () {\n\t                var self = _this2;\n\t\n\t                var result = _validation_engine2.default.getGroupConfig(_this2.validationGroup).validate();\n\t                if (result.isValid) {\n\t                    _this2.saveInProgress = true;\n\t                    _this2.isSaveOperationDisable = true;\n\t                    if (!_this2.$scope.editMode) {\n\t                        _this2.AssetObject.save({ assetId: self.assetId }, _this2.$scope.tower, function (result) {\n\t                            _this2.saveInProgress = false;\n\t                            _this2.$uibModalInstance.close(_this2.$scope.tower);\n\t                            _this2.notificationService.success((0, _messages2.default)('assets.objects.message.created'));\n\t                        }, function (error) {\n\t                            _this2.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            _this2.saveInProgress = false;\n\t                        });\n\t                    } else {\n\t                        _this2.AssetObject.update({ id: _this2.$scope.tower.id, assetId: self.assetId }, _this2.$scope.tower, function (result) {\n\t                            _this2.notificationService.success((0, _messages2.default)('assets.objects.message.updated'));\n\t                            _this2.saveInProgress = false;\n\t                            _this2.$uibModalInstance.close(_this2.$scope.tower);\n\t                        }, function (error) {\n\t                            _this2.notificationService.error(error.data.message ? error.data.message : error.data);\n\t                            _this2.saveInProgress = false;\n\t                        });\n\t                    }\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _validation_engine2.default.removeGroup(_this2.validationGroup);\n\t                _this2.$uibModalInstance.dismiss('cancel');\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initAutocomplete',\n\t        value: function initAutocomplete() {\n\t            var _this3 = this;\n\t\n\t            if (!window.google) {\n\t                return;\n\t            }\n\t\n\t            this.autocomplete = new google.maps.places.Autocomplete($('#tower-address-field input')[0]);\n\t            google.maps.event.addListener(this.autocomplete, 'place_changed', function () {\n\t                var place = _this3.autocomplete.getPlace(),\n\t                    citySet = void 0,\n\t                    streetSet = void 0,\n\t                    buildingSet = void 0,\n\t                    postCodeSet = void 0;\n\t\n\t                if (place.address_components instanceof Array) {\n\t                    place.address_components.forEach(function (item) {\n\t                        if (item.types.indexOf('locality') !== -1) {\n\t                            _this3.$scope.tower.city = item.long_name;\n\t                            citySet = true;\n\t                        }\n\t                        if (item.types.indexOf('route') !== -1) {\n\t                            _this3.$scope.tower.street = item.long_name;\n\t                            streetSet = true;\n\t                        }\n\t                        if (item.types.indexOf('street_number') !== -1) {\n\t                            _this3.$scope.tower.streetAddress = item.long_name;\n\t                            buildingSet = true;\n\t                        }\n\t                        if (item.types.indexOf('postal_code') !== -1) {\n\t                            _this3.$scope.tower.postCode = item.long_name;\n\t                            postCodeSet = true;\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (!citySet) {\n\t                    _this3.$scope.tower.city = null;\n\t                }\n\t                if (!streetSet) {\n\t                    _this3.$scope.tower.street = null;\n\t                }\n\t                if (!buildingSet) {\n\t                    _this3.$scope.tower.streetAddress = null;\n\t                }\n\t                if (!postCodeSet) {\n\t                    _this3.$scope.tower.postCode = null;\n\t                }\n\t                _validation_engine2.default.getGroupConfig(_this3.addressValidationGroup).validate();\n\t            });\n\t\n\t            if (this.$scope.tower.countryId) {\n\t                this.setAutocompleteCountry();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setAutocompleteCountry',\n\t        value: function setAutocompleteCountry() {\n\t            var _this4 = this;\n\t\n\t            var countries = _constants2.default.countryStorePlain(),\n\t                curCountryCode = void 0;\n\t\n\t            countries.forEach(function (country) {\n\t                if (country.value === _this4.$scope.tower.countryId) {\n\t                    curCountryCode = country.isoCode;\n\t                }\n\t            });\n\t\n\t            this.autocomplete.setComponentRestrictions({\n\t                'country': curCountryCode\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AssetObjectEditController;\n\t}();\n\t\n\texports.default = AssetObjectEditController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 788 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('assets.objects.edit.title') : Messages('assets.objects.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('assets.objects.create.name')}}</label>\\r\\n                <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-display\\\" class=\\\"control-label\\\">{{Messages('assets.objects.create.isDisplayOnStackingPlan')}}</label>\\r\\n                <div id=\\\"field-display\\\" dx-check-box=\\\"displaySettings\\\" dx-validator=\\\"displayValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{Messages('address.country')}}</label>\\r\\n                <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"tower-address-field\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                <div id=\\\"tower-address-field\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                        <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                        <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                        <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                        <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('assets.objects.saving') : Messages('assets.objects.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.objects.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 789 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form name=\\\"assetObjectsForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addAssetObject()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('assets.objects.add')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"objectsGridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\"\n\n/***/ },\n/* 790 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Asset = function () {\n\t    Asset.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function Asset(ConfigurationService, $resource) {\n\t        _classCallCheck(this, Asset);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id', { id: '@id' }, {\n\t            query: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets',\n\t                isArray: true\n\t            },\n\t            getFull: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/full'\n\t            },\n\t            setImage: {\n\t                method: 'POST',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/image',\n\t                transformRequest: angular.identity,\n\t                headers: { 'Content-Type': undefined }\n\t            },\n\t            resetImage: {\n\t                method: 'DELETE',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/image'\n\t            },\n\t            create: {\n\t                method: 'POST'\n\t            },\n\t            update: {\n\t                method: 'PUT'\n\t            },\n\t            archive: {\n\t                method: 'DELETE'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(Asset, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            Asset.instance = new Asset(ConfigurationService, $resource);\n\t            return Asset.instance;\n\t        }]\n\t    }]);\n\t\n\t    return Asset;\n\t}();\n\t\n\texports.default = Asset;\n\n/***/ },\n/* 791 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetObject = function () {\n\t    AssetObject.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function AssetObject(ConfigurationService, $resource) {\n\t        _classCallCheck(this, AssetObject);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:id', { assetId: '@assetId', id: '@id' }, {\n\t            query: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects',\n\t                isArray: true\n\t            },\n\t            create: {\n\t                method: 'POST',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects'\n\t            },\n\t            update: {\n\t                method: 'PUT'\n\t            },\n\t            archive: {\n\t                method: 'DELETE'\n\t            },\n\t            getById: {\n\t                method: 'GET'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(AssetObject, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            AssetObject.instance = new AssetObject(ConfigurationService, $resource);\n\t            return AssetObject.instance;\n\t        }]\n\t    }]);\n\t\n\t    return AssetObject;\n\t}();\n\t\n\texports.default = AssetObject;\n\n/***/ },\n/* 792 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Floor = function () {\n\t    Floor.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function Floor(ConfigurationService, $resource) {\n\t        _classCallCheck(this, Floor);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:id', { assetId: '@assetId', assetObjectId: '@assetObjectId', id: '@id', count: '@count', autonumerate: '@autonumerate' }, {\n\t            query: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors',\n\t                isArray: true\n\t            },\n\t            createRange: {\n\t                method: 'POST',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors?count=:count&autonumerate=:autonumerate',\n\t                isArray: true\n\t            },\n\t            update: {\n\t                method: 'PUT'\n\t            },\n\t            delete: {\n\t                method: 'DELETE'\n\t            },\n\t            getFull: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:id/full'\n\t            },\n\t            getByAssetId: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/floors',\n\t                isArray: true\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(Floor, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            Floor.instance = new Floor(ConfigurationService, $resource);\n\t            return Floor.instance;\n\t        }]\n\t    }]);\n\t\n\t    return Floor;\n\t}();\n\t\n\texports.default = Floor;\n\n/***/ },\n/* 793 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Space = function () {\n\t    Space.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function Space(ConfigurationService, $resource) {\n\t        _classCallCheck(this, Space);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces/:id', { assetId: '@assetId', assetObjectId: '@assetObjectId', 'floorId': '@floorId', id: '@id' }, {\n\t            query: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces',\n\t                isArray: true\n\t            },\n\t            create: {\n\t                method: 'POST',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces'\n\t            },\n\t            update: {\n\t                method: 'PUT'\n\t            },\n\t            delete: {\n\t                method: 'DELETE'\n\t            },\n\t            getFull: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces/:id/full'\n\t            },\n\t            getByAssetId: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/spaces',\n\t                isArray: true\n\t            },\n\t            getByAssetObjectId: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/spaces',\n\t                isArray: true\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(Space, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            Space.instance = new Space(ConfigurationService, $resource);\n\t            return Space.instance;\n\t        }]\n\t    }]);\n\t\n\t    return Space;\n\t}();\n\t\n\texports.default = Space;\n\n/***/ },\n/* 794 */,\n/* 795 */,\n/* 796 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _assetStats = __webpack_require__(797);\n\t\n\tvar _assetStats2 = _interopRequireDefault(_assetStats);\n\t\n\tvar _assetStatSpaces = __webpack_require__(798);\n\t\n\tvar _assetStatSpaces2 = _interopRequireDefault(_assetStatSpaces);\n\t\n\tvar _assetStatTenants = __webpack_require__(801);\n\t\n\tvar _assetStatTenants2 = _interopRequireDefault(_assetStatTenants);\n\t\n\tvar _assetStatStackingPlan = __webpack_require__(804);\n\t\n\tvar _assetStatStackingPlan2 = _interopRequireDefault(_assetStatStackingPlan);\n\t\n\tvar _assetStatStackingPlan3 = __webpack_require__(805);\n\t\n\tvar _assetStatStackingPlan4 = _interopRequireDefault(_assetStatStackingPlan3);\n\t\n\tvar _assetStats3 = __webpack_require__(806);\n\t\n\tvar _assetStats4 = _interopRequireDefault(_assetStats3);\n\t\n\tvar _assetStatSpaces3 = __webpack_require__(807);\n\t\n\tvar _assetStatSpaces4 = _interopRequireDefault(_assetStatSpaces3);\n\t\n\tvar _assetStatTenants3 = __webpack_require__(808);\n\t\n\tvar _assetStatTenants4 = _interopRequireDefault(_assetStatTenants3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.assetStats', []).controller('AssetStatsController', _assetStats2.default).controller('AssetStatSpacesController', _assetStatSpaces2.default).controller('AssetStatTenantsController', _assetStatTenants2.default).controller('AssetStatStackingPlanController', _assetStatStackingPlan4.default).factory('AssetStats', _assetStats4.default.activate).factory('AssetStatSpaces', _assetStatSpaces4.default.activate).factory('AssetStatTenants', _assetStatTenants4.default.activate).factory('AssetStatStackingPlan', _assetStatStackingPlan2.default.activate).directive('resize', ['$window', function ($window) {\n\t  return function (scope, element) {\n\t    var w = angular.element($window);\n\t    var changeHeight = function changeHeight() {\n\t      element.css('height', element.width());\n\t    };\n\t    w.bind('resize', function () {\n\t      changeHeight();\n\t    });\n\t    changeHeight();\n\t  };\n\t}]);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 797 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatsController = function () {\n\t    AssetStatsController.$inject = ['$scope', '$state', 'StoreAdapter', 'AssetStats', 'NotificationService'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatsController($scope, $state, StoreAdapter, AssetStats, NotificationService) {\n\t        _classCallCheck(this, AssetStatsController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.storeAdapter = StoreAdapter;\n\t        //this.currentUser = currentUser;\n\t        this.notificationService = NotificationService;\n\t\n\t        this.Messages = _messages2.default;\n\t\n\t        this.assetStats = AssetStats;\n\t\n\t        this.init();\n\t\n\t        this.isMore = false;\n\t        this.page = 0;\n\t        this.pageSize = 8;\n\t        this.loadedImages = [];\n\t        this.loadedImagesCount = 0;\n\t        this.totalRowsCount = 0;\n\t    }\n\t\n\t    _createClass(AssetStatsController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            this.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            this.assetStats.query({\n\t                pageNumber: this.page\n\t            }, function (result) {\n\t                var assets = [],\n\t                    rowIndex = 0;\n\t\n\t                result.forEach(function (item, i) {\n\t                    if (i % 4 === 0 && i !== 0) {\n\t                        rowIndex++;\n\t                    }\n\t                    if (!assets[rowIndex]) {\n\t                        assets[rowIndex] = [];\n\t                    }\n\t                    item.color = _this.getPanelColor();\n\t                    assets[rowIndex].push(item);\n\t                });\n\t\n\t                _this.assets = assets;\n\t                _this.assetsLength = result.length;\n\t                _this.totalRowsCount = result.length;\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'loadMore',\n\t        value: function loadMore() {\n\t            var _this2 = this;\n\t\n\t            this.page++;\n\t\n\t            this.assetStats.query({\n\t                pageNumber: this.page\n\t            }, function (result) {\n\t                _this2.assets = _this2.assets.concat(result.items);\n\t            }, function (error) {});\n\t        }\n\t    }, {\n\t        key: 'imageLoad',\n\t        value: function imageLoad() {\n\t            this.loadedImagesCount++;\n\t            if (this.loadedImagesCount === this.assetsLength) {\n\t                this.loadedImages[this.page] = true;\n\t                this.isMore = this.assetsLength < this.totalRowsCount;\n\t                this.$scope.$apply();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isShow',\n\t        value: function isShow(index) {\n\t            return this.loadedImages[Math.floor(index / this.pageSize)];\n\t        }\n\t    }, {\n\t        key: 'getPanelColor',\n\t        value: function getPanelColor() {\n\t            var panelColors = ['hgreen', 'hblue', 'hyellow', 'hviolet', 'horange', 'hred', 'hreddeep', 'hnavyblue'];\n\t            return panelColors[Math.floor(Math.random() * panelColors.length)];\n\t        }\n\t    }]);\n\t\n\t    return AssetStatsController;\n\t}();\n\t\n\texports.default = AssetStatsController;\n\n/***/ },\n/* 798 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _spacesFilterModal = __webpack_require__(799);\n\t\n\tvar _spacesFilterModal2 = _interopRequireDefault(_spacesFilterModal);\n\t\n\tvar _spacesFilterModalTemplate = __webpack_require__(800);\n\t\n\tvar _spacesFilterModalTemplate2 = _interopRequireDefault(_spacesFilterModalTemplate);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _moment = __webpack_require__(195);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatSpacesController = function () {\n\t    AssetStatSpacesController.$inject = ['$scope', '$rootScope', '$state', 'asset', 'assetId', 'AssetStatSpaces', 'AssetStatStackingPlan', '$uibModal', 'uibDateParser', '$timeout', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatSpacesController($scope, $rootScope, $state, asset, assetId, AssetStatSpaces, AssetStatStackingPlan, $uibModal, uibDateParser, $timeout, UtilsService) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, AssetStatSpacesController);\n\t\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.$state = $state;\n\t        this.asset = asset;\n\t        this.assetId = assetId;\n\t        this.AssetStatSpaces = AssetStatSpaces;\n\t        this.AssetStatStackingPlan = AssetStatStackingPlan;\n\t        this.$uibModal = $uibModal;\n\t        this.uibDateParser = uibDateParser;\n\t        this.$timeout = $timeout;\n\t        this.utils = UtilsService;\n\t\n\t        this.Messages = _messages2.default;\n\t\n\t        this.init();\n\t\n\t        $scope.$on('$destroy', function () {\n\t            $rootScope.$broadcast('right-sidebar:close');\n\t        });\n\t        $scope.$on('right-sidebar:closed', function () {\n\t            _this.selectSpaceRow([]);\n\t            _this.selectedSpace = null;\n\t        });\n\t    }\n\t\n\t    _createClass(AssetStatSpacesController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this2 = this;\n\t\n\t            this.$scope.greedData = [];\n\t\n\t            this.$scope.statuses = [{\n\t                id: 'all',\n\t                value: 1,\n\t                name: (0, _messages2.default)('assets.spaces.filter.all')\n\t            }, {\n\t                id: 'vacant',\n\t                value: 3,\n\t                name: (0, _messages2.default)('assets.spaces.filter.vacant')\n\t            }, {\n\t                id: 'occupied',\n\t                value: 2,\n\t                name: (0, _messages2.default)('assets.spaces.filter.occupied')\n\t            }, {\n\t                id: '1_month',\n\t                value: 1,\n\t                name: (0, _messages2.default)('assets.spaces.filter.in_1_month')\n\t            }, {\n\t                id: '3_month',\n\t                value: 3,\n\t                name: (0, _messages2.default)('assets.spaces.filter.in_3_month')\n\t            }, {\n\t                id: '6_month',\n\t                value: 6,\n\t                name: (0, _messages2.default)('assets.spaces.filter.in_6_month')\n\t            }, {\n\t                id: '1_year',\n\t                value: 12,\n\t                name: (0, _messages2.default)('assets.spaces.filter.in_1_year')\n\t            }, {\n\t                id: 'custom',\n\t                name: (0, _messages2.default)('assets.spaces.filter.custom_dates')\n\t            }];\n\t            this.$scope.selectedStatus = this.$scope.statuses[0];\n\t\n\t            this.$timeout(function () {\n\t                _this2.customDateElement = $('#spaces-filter-daterangepicker');\n\t                $(_this2.customDateElement).daterangepicker({\n\t                    minDate: new Date(),\n\t                    autoApply: true\n\t                });\n\t                $(_this2.customDateElement).on('apply.daterangepicker', function (ev, picker) {\n\t                    _this2.customAvailableFrom = picker.startDate;\n\t                    _this2.customAvailableTo = picker.endDate;\n\t                    _this2.$scope.customAvailableFrom = _this2.getParsedDate(picker.startDate);\n\t                    _this2.$scope.customAvailableTo = _this2.getParsedDate(picker.endDate);\n\t                    _this2.gridUpdate(1);\n\t                });\n\t            }, 1);\n\t\n\t            this.$scope.extraFilters = [];\n\t            this.$scope.towers = [];\n\t            this.$scope.sortType = 'unit';\n\t            this.$scope.sortDirection = 0;\n\t\n\t            this.gridUpdate(1);\n\t\n\t            this.AssetStatStackingPlan.getObjects({\n\t                asset: this.assetId\n\t            }, function (result) {\n\t                _this2.$scope.towers = result;\n\t            }, function (err) {});\n\t\n\t            this.statsLabelsDisctionary = {\n\t                'all': 'totalSpacesCount',\n\t                'vacant': 'totalVacantSpacesCount',\n\t                'occupied': 'totalOccupiedSpacesCount',\n\t                '1_month': 'expiresInOneMonthCount',\n\t                '3_month': 'expiresInThreeMonthCount',\n\t                '6_month': 'expiresInSixMonthCount',\n\t                '1_year': 'expiresInOneYearCount'\n\t            };\n\t        }\n\t    }, {\n\t        key: 'gridUpdate',\n\t        value: function gridUpdate(page) {\n\t            var _this3 = this;\n\t\n\t            this.$scope.update = true;\n\t            this.page = page;\n\t\n\t            var extraFilters = this.$scope.extraFilters,\n\t                status = null,\n\t                availableFrom = null,\n\t                availableTo = null,\n\t                inPlacePriceFrom = extraFilters.find(function (item) {\n\t                return item.id === 'in_place_rent_from';\n\t            }),\n\t                inPlacePriceTo = extraFilters.find(function (item) {\n\t                return item.id === 'in_place_rent_to';\n\t            }),\n\t                priceFrom = extraFilters.find(function (item) {\n\t                return item.id === 'price_from';\n\t            }),\n\t                priceTo = extraFilters.find(function (item) {\n\t                return item.id === 'price_to';\n\t            }),\n\t                areaFrom = extraFilters.find(function (item) {\n\t                return item.id === 'area_from';\n\t            }),\n\t                areaTo = extraFilters.find(function (item) {\n\t                return item.id === 'area_to';\n\t            }),\n\t                floorFrom = extraFilters.find(function (item) {\n\t                return item.id === 'floor_from';\n\t            }),\n\t                floorTo = extraFilters.find(function (item) {\n\t                return item.id === 'floor_to';\n\t            }),\n\t                towers = [],\n\t                spaceTypes = [];\n\t\n\t            extraFilters.forEach(function (item) {\n\t                if (item.id.indexOf('tower_') === 0) {\n\t                    towers.push(item.value.id);\n\t                }\n\t                if (item.id.indexOf('office_type_') === 0) {\n\t                    spaceTypes.push(item.value.id);\n\t                }\n\t            });\n\t\n\t            switch (this.$scope.selectedStatus.id) {\n\t                case 'all':\n\t                case 'vacant':\n\t                case 'occupied':\n\t                    status = this.$scope.selectedStatus.value;\n\t                    break;\n\t                case '1_month':\n\t                case '3_month':\n\t                case '6_month':\n\t                case '1_year':\n\t                    availableFrom = (0, _moment2.default)().format();\n\t                    availableTo = (0, _moment2.default)().add(this.$scope.selectedStatus.value, 'M').format();\n\t                    break;\n\t                case 'custom':\n\t                    availableFrom = (0, _moment2.default)(this.customAvailableFrom).format();\n\t                    availableTo = (0, _moment2.default)(this.customAvailableTo).format();\n\t                    break;\n\t            }\n\t\n\t            this.AssetStatSpaces.search({\n\t                id: this.assetId,\n\t                st: status,\n\t                agte: areaFrom && areaFrom.value,\n\t                alte: areaTo && areaTo.value,\n\t                apgte: priceFrom && priceFrom.value,\n\t                aplte: priceTo && priceTo.value,\n\t                ipgte: inPlacePriceFrom && inPlacePriceFrom.value,\n\t                iplte: inPlacePriceTo && inPlacePriceTo.value,\n\t                expgte: availableFrom,\n\t                explte: availableTo,\n\t                fgte: floorFrom && floorFrom.value,\n\t                flte: floorTo && floorTo.value,\n\t                twr: towers,\n\t                ot: spaceTypes,\n\t                srt: this.$scope.sortType,\n\t                ord: this.$scope.sortDirection,\n\t                pg: page || 1,\n\t                ps: 20\n\t            }, function (result) {\n\t                // console.log(result);\n\t                _this3.$scope.update = false;\n\t                _this3.floorsMax = result.maxFloor;\n\t                _this3.floorsMin = result.minFloor;\n\t\n\t                if (page === 1) {\n\t                    _this3.$scope.greedData = result.items;\n\t                    _this3.$scope.disable_infinite_scrolling = false;\n\t                    _this3.updateStatusLabels(result.stats);\n\t                } else {\n\t                    if (result.items.length === 0) {\n\t                        _this3.$scope.disable_infinite_scrolling = true;\n\t                    } else {\n\t                        _this3.$scope.disable_infinite_scrolling = false;\n\t                        _this3.$scope.greedData = _this3.$scope.greedData.concat(result.items);\n\t                    }\n\t                }\n\t\n\t                _this3.$timeout(function () {\n\t                    _this3.$scope.load_more = false;\n\t                }, 1);\n\t            }, function (error) {\n\t                console.log(error);\n\t                _this3.$scope.update = false;\n\t                _this3.$scope.error = error;\n\t            });\n\t\n\t            this.$rootScope.$broadcast('right-sidebar:close');\n\t        }\n\t    }, {\n\t        key: 'loadMoreItems',\n\t        value: function loadMoreItems() {\n\t            if (!this.$scope.greedData.length) {\n\t                return;\n\t            }\n\t\n\t            this.$scope.load_more = true;\n\t            this.gridUpdate(++this.page);\n\t        }\n\t    }, {\n\t        key: 'sortGrid',\n\t        value: function sortGrid(sortType) {\n\t            this.$scope.sortType = sortType;\n\t            this.$scope.sortDirection = this.$scope.sortDirection === 1 ? 0 : 1;\n\t            this.gridUpdate(1);\n\t        }\n\t    }, {\n\t        key: 'getOfficeType',\n\t        value: function getOfficeType(type) {\n\t            var officeType = _constants2.default.spaceTypeStorePlain().find(function (item) {\n\t                return item.value === type;\n\t            });\n\t            return officeType.text;\n\t        }\n\t    }, {\n\t        key: 'getParsedDate',\n\t        value: function getParsedDate(date) {\n\t            return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\n\t        }\n\t    }, {\n\t        key: 'selectStatus',\n\t        value: function selectStatus(e, status) {\n\t            e.preventDefault();\n\t            this.$scope.selectedStatus = status;\n\t\n\t            if (status.id !== 'custom') {\n\t                this.gridUpdate(1);\n\t                this.$scope.customAvailableFrom = null;\n\t                this.$scope.customAvailableTo = null;\n\t                $(this.customDateElement).data('daterangepicker').setStartDate(new Date());\n\t                $(this.customDateElement).data('daterangepicker').setEndDate(new Date());\n\t            } else {\n\t                this.showDateRangeSelector();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'showDateRangeSelector',\n\t        value: function showDateRangeSelector() {\n\t            $(this.customDateElement).focus();\n\t        }\n\t    }, {\n\t        key: 'showExtraFilters',\n\t        value: function showExtraFilters() {\n\t            var _this4 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _spacesFilterModal2.default,\n\t                template: _spacesFilterModalTemplate2.default,\n\t                resolve: {\n\t                    filter: {\n\t                        data: this.$scope.extraFilters\n\t                    },\n\t                    towers: {\n\t                        data: this.$scope.towers\n\t                    },\n\t                    floors: {\n\t                        min: this.floorsMin,\n\t                        max: this.floorsMax\n\t                    }\n\t                },\n\t                size: 'lg'\n\t            });\n\t            modal.result.then(function (result) {\n\t                _this4.$scope.extraFilters = result;\n\t                if (result.length) {\n\t                    _this4.gridUpdate(1);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'extraFilterRemoveItem',\n\t        value: function extraFilterRemoveItem(item) {\n\t            var id = item.id,\n\t                itemIndex = this.$scope.extraFilters.findIndex(function (item) {\n\t                return item.id === id;\n\t            });\n\t\n\t            this.$scope.extraFilters.splice(itemIndex, 1);\n\t            this.gridUpdate(1);\n\t        }\n\t    }, {\n\t        key: 'selectSpaceRow',\n\t        value: function selectSpaceRow(row) {\n\t            var cl = 'filtered-spaces-row-selected';\n\t            $('#filtered-spaces-grid tr').each(function (i, item) {\n\t                if (item === row[0]) {\n\t                    $(item).addClass(cl);\n\t                } else {\n\t                    $(item).removeClass(cl);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'showSpaceInfo',\n\t        value: function showSpaceInfo(event, data) {\n\t            if (this.selectedSpace === data.number) {\n\t                this.$rootScope.$broadcast('right-sidebar:close');\n\t                return;\n\t            }\n\t\n\t            this.selectedSpace = data.number;\n\t            var result = Object.assign({}, data),\n\t                contract = data.contract;\n\t\n\t            if (contract && contract.industryId != null) {\n\t                _constants2.default.clientsIndustryStore().byKey(contract.industryId).done(function (dataItem) {\n\t                    result.industryId = contract.industryId;\n\t                    result.industry = dataItem.display;\n\t                });\n\t            }\n\t\n\t            this.$rootScope.$broadcast('right-sidebar:open', {\n\t                type: 'spaceDescription',\n\t                data: result\n\t            });\n\t\n\t            this.selectSpaceRow($(event.target).parent('tr'));\n\t        }\n\t    }, {\n\t        key: 'updateStatusLabels',\n\t        value: function updateStatusLabels(stats) {\n\t            var self = this;\n\t            this.$scope.statuses.forEach(function (element) {\n\t                var value = Number(stats[self.statsLabelsDisctionary[element.id]]);\n\t                element.label = this.utils.formatBadgeValue(value);\n\t            }, this);\n\t        }\n\t    }]);\n\t\n\t    return AssetStatSpacesController;\n\t}();\n\t\n\texports.default = AssetStatSpacesController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 799 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SpacesFilterController = function () {\n\t    SpacesFilterController.$inject = ['$scope', '$state', 'filter', 'towers', 'floors', '$uibModalInstance', 'uibDateParser'];\n\t\n\t    /*@ngInject*/\n\t    function SpacesFilterController($scope, $state, filter, towers, floors, $uibModalInstance, uibDateParser) {\n\t        _classCallCheck(this, SpacesFilterController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.filter = filter.data;\n\t        this.towers = towers.data;\n\t        this.floors = floors;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.uibDateParser = uibDateParser;\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(SpacesFilterController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var spaceTypes = _constants2.default.spaceTypeStorePlain(),\n\t                piecesPerRow = Math.round(spaceTypes.length / 3),\n\t                typesRows = [];\n\t\n\t            for (var i = 0, l = 3; i < l; i++) {\n\t                typesRows[i] = [];\n\t                var j = 0;\n\t                for (var jl = piecesPerRow; j < jl; j++) {\n\t                    var item = spaceTypes.shift();\n\t                    if (item) {\n\t                        typesRows[i].push(item);\n\t                    } else {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.$scope.typesRows = typesRows;\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this = this;\n\t\n\t            this.$scope.fromValueChanged = function (from, to) {\n\t                if (_this.$scope[from] && _this.$scope[to] && _this.$scope[from] > _this.$scope[to]) {\n\t                    _this.$scope[to] = _this.$scope[from];\n\t                }\n\t            };\n\t            this.$scope.toValueChanged = function (from, to) {\n\t                if (_this.$scope[from] && _this.$scope[to] && _this.$scope[to] < _this.$scope[from]) {\n\t                    _this.$scope[from] = _this.$scope[to];\n\t                }\n\t            };\n\t\n\t            this.$scope.fromSelectorChanged = function (from, to) {\n\t                if (_this.$scope[from] && _this.$scope[to] && Number(_this.$scope[from]) > Number(_this.$scope[to])) {\n\t                    _this.$scope[to] = _this.$scope[from];\n\t                }\n\t            };\n\t            this.$scope.toSelectorChanged = function (from, to) {\n\t                if (_this.$scope[from] && _this.$scope[to] && Number(_this.$scope[to]) < Number(_this.$scope[from])) {\n\t                    _this.$scope[from] = _this.$scope[to];\n\t                }\n\t            };\n\t\n\t            // price\n\t            var price_from = this.filter.find(function (item) {\n\t                return item.id === 'price_from';\n\t            });\n\t            this.$scope.price_from = price_from && price_from.value;\n\t            var price_to = this.filter.find(function (item) {\n\t                return item.id === 'price_to';\n\t            });\n\t            this.$scope.price_to = price_to && price_to.value;\n\t\n\t            // area\n\t            var area_from = this.filter.find(function (item) {\n\t                return item.id === 'area_from';\n\t            });\n\t            this.$scope.area_from = area_from && area_from.value;\n\t            var area_to = this.filter.find(function (item) {\n\t                return item.id === 'area_to';\n\t            });\n\t            this.$scope.area_to = area_to && area_to.value;\n\t\n\t            // floor\n\t            var floor_from = this.filter.find(function (item) {\n\t                return item.id === 'floor_from';\n\t            });\n\t            this.$scope.floor_from = floor_from && floor_from.value;\n\t            var floor_to = this.filter.find(function (item) {\n\t                return item.id === 'floor_to';\n\t            });\n\t            this.$scope.floor_to = floor_to && floor_to.value;\n\t            this.$scope.floors = [];\n\t            for (var i = this.floors.min, l = this.floors.max; i <= l; i++) {\n\t                var name = void 0;\n\t                if (i < 0) {\n\t                    name = i + ' UG';\n\t                } else if (i > 0) {\n\t                    name = i + ' OG';\n\t                } else {\n\t                    name = 'EG';\n\t                }\n\t                this.$scope.floors.push({\n\t                    id: i,\n\t                    name: name\n\t                });\n\t            }\n\t\n\t            // asking price\n\t            var in_place_rent_from = this.filter.find(function (item) {\n\t                return item.id === 'in_place_rent_from';\n\t            });\n\t            this.$scope.in_place_rent_from = in_place_rent_from && in_place_rent_from.value;\n\t            var in_place_rent_to = this.filter.find(function (item) {\n\t                return item.id === 'in_place_rent_to';\n\t            });\n\t            this.$scope.in_place_rent_to = in_place_rent_to && in_place_rent_to.value;\n\t\n\t            // towers\n\t            this.$scope.towers = {\n\t                available: this.towers,\n\t                selected: []\n\t            };\n\t            this.filter.forEach(function (item) {\n\t                if (item.id.indexOf('tower_') === 0) {\n\t                    _this.$scope.towers.selected.push(item.value);\n\t                }\n\t            });\n\t\n\t            // office type\n\t            this.$scope.office_types = [];\n\t            this.$scope.office_types_ids = [];\n\t            this.filter.forEach(function (item) {\n\t                if (item.id.indexOf('office_type_') === 0) {\n\t                    _this.$scope.office_types.push(item.value);\n\t                    _this.$scope.office_types_ids.push(item.value.id);\n\t                }\n\t            });\n\t            this.$scope.officeTypeToggleSelection = function (type, valueString) {\n\t                var id = _this.$scope.office_types.findIndex(function (item) {\n\t                    return item.id === type;\n\t                });\n\t\n\t                if (id > -1) {\n\t                    _this.$scope.office_types.splice(id, 1);\n\t                    _this.$scope.office_types_ids.splice(id, 1);\n\t                } else {\n\t                    _this.$scope.office_types.push({\n\t                        id: type,\n\t                        name: valueString\n\t                    });\n\t                    _this.$scope.office_types_ids.push(type);\n\t                }\n\t            };\n\t\n\t            this.$scope.cancel = function () {\n\t                _this.$uibModalInstance.dismiss('cancel');\n\t            };\n\t\n\t            this.$scope.save = function () {\n\t                var result = [];\n\t                if (_this.$scope.price_from) {\n\t                    result.push({\n\t                        id: 'price_from',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.asking_price_from'),\n\t                        value: _this.$scope.price_from,\n\t                        text: _this.$scope.price_from + ' [\\u20AC/' + (0, _messages2.default)('square.meter') + ']'\n\t                    });\n\t                }\n\t                if (_this.$scope.price_to) {\n\t                    result.push({\n\t                        id: 'price_to',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.asking_price_to'),\n\t                        value: _this.$scope.price_to,\n\t                        text: _this.$scope.price_to + ' [\\u20AC/' + (0, _messages2.default)('square.meter') + ']'\n\t                    });\n\t                }\n\t                if (_this.$scope.area_from) {\n\t                    result.push({\n\t                        id: 'area_from',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.rentable_area_from'),\n\t                        value: _this.$scope.area_from,\n\t                        text: _this.$scope.area_from + ' ' + (0, _messages2.default)('square.meter')\n\t                    });\n\t                }\n\t                if (_this.$scope.area_to) {\n\t                    result.push({\n\t                        id: 'area_to',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.rentable_area_to'),\n\t                        value: _this.$scope.area_to,\n\t                        text: _this.$scope.area_to + ' ' + (0, _messages2.default)('square.meter')\n\t                    });\n\t                }\n\t                if (_this.$scope.floor_from) {\n\t                    var florFrom = _this.$scope.floors.find(function (item) {\n\t                        return item.id === Number(_this.$scope.floor_from);\n\t                    });\n\t                    result.push({\n\t                        id: 'floor_from',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.floor_from'),\n\t                        value: _this.$scope.floor_from,\n\t                        text: '' + florFrom.name\n\t                    });\n\t                }\n\t                if (_this.$scope.floor_to) {\n\t                    var florTo = _this.$scope.floors.find(function (item) {\n\t                        return item.id === Number(_this.$scope.floor_to);\n\t                    });\n\t                    result.push({\n\t                        id: 'floor_to',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.floor_to'),\n\t                        value: _this.$scope.floor_to,\n\t                        text: '' + florTo.name\n\t                    });\n\t                }\n\t                if (_this.$scope.in_place_rent_from) {\n\t                    result.push({\n\t                        id: 'in_place_rent_from',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.in_place_rent_from'),\n\t                        value: _this.$scope.in_place_rent_from,\n\t                        text: _this.$scope.in_place_rent_from + ' [\\u20AC/' + (0, _messages2.default)('square.meter') + ']'\n\t                    });\n\t                }\n\t                if (_this.$scope.in_place_rent_to) {\n\t                    result.push({\n\t                        id: 'in_place_rent_to',\n\t                        name: (0, _messages2.default)('assets.spaces.filter.in_place_rent_to'),\n\t                        value: _this.$scope.in_place_rent_to,\n\t                        text: _this.$scope.in_place_rent_to + ' [\\u20AC/' + (0, _messages2.default)('square.meter') + ']'\n\t                    });\n\t                }\n\t                if (_this.$scope.towers.selected.length) {\n\t                    _this.$scope.towers.selected.forEach(function (item) {\n\t                        result.push({\n\t                            id: 'tower_' + item.name,\n\t                            value: item,\n\t                            text: item.name\n\t                        });\n\t                    });\n\t                }\n\t                if (_this.$scope.office_types.length) {\n\t                    _this.$scope.office_types.forEach(function (item) {\n\t                        result.push({\n\t                            id: 'office_type_' + item.id,\n\t                            value: item,\n\t                            text: item.name\n\t                        });\n\t                    });\n\t                }\n\t                _this.$uibModalInstance.close(result);\n\t            };\n\t        }\n\t    }]);\n\t\n\t    return SpacesFilterController;\n\t}();\n\t\n\texports.default = SpacesFilterController;\n\n/***/ },\n/* 800 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\" class=\\\"o-hidden\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.asking_price')}} [€/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            id=\\\"asking_price_from\\\"\\r\\n                            ng-model=\\\"price_from\\\"\\r\\n                            ng-blur=\\\"fromValueChanged('asking_price_from', 'asking_price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.from')}}\\\"\\r\\n                        >\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            ng-model=\\\"price_to\\\"\\r\\n                            ng-blur=\\\"toValueChanged('asking_price_from', 'asking_price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.to')}}\\\"\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.in_place_rent')}} [€/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            id=\\\"price_from\\\"\\r\\n                            ng-model=\\\"in_place_rent_from\\\"\\r\\n                            ng-blur=\\\"fromValueChanged('price_from', 'price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.from')}}\\\"\\r\\n                        >\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            ng-model=\\\"in_place_rent_to\\\"\\r\\n                            ng-blur=\\\"toValueChanged('price_from', 'price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.to')}}\\\"\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.rentable_area')}} [<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            id=\\\"areaFrom\\\"\\r\\n                            ng-model=\\\"area_from\\\"\\r\\n                            ng-blur=\\\"fromValueChanged('area_from', 'area_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.from')}}\\\"\\r\\n                        >\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            ng-model=\\\"area_to\\\"\\r\\n                            ng-blur=\\\"toValueChanged('area_from', 'area_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.to')}}\\\"\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.floor')}}</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <select class=\\\"input-sm form-control\\\" ng-model=\\\"floor_from\\\" ng-change=\\\"fromSelectorChanged('floor_from', 'floor_to')\\\">\\r\\n                            <option value=\\\"{{floor.id}}\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                {{floor.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <select class=\\\"input-sm form-control\\\" ng-model=\\\"floor_to\\\" ng-change=\\\"toSelectorChanged('floor_from', 'floor_to')\\\">\\r\\n                            <option value=\\\"{{floor.id}}\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                {{floor.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 m-b-xl\\\">\\r\\n                <p>{{Messages('assets.spaces.filter.towers')}}</p>\\r\\n                <ui-select multiple ng-model=\\\"towers.selected\\\" close-on-select=\\\"false\\\" theme=\\\"bootstrap\\\">\\r\\n                    <ui-select-match placeholder=\\\"{{Messages('assets.spaces.filter.towers.placeholder')}}\\\">\\r\\n                        {{$item.name}}\\r\\n                    </ui-select-match>\\r\\n                    <ui-select-choices repeat=\\\"item in towers.available | filter: $select.search\\\">\\r\\n                        {{item.name}}\\r\\n                    </ui-select-choices>\\r\\n                </ui-select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 m-b-xl\\\" ng-repeat=\\\"row in typesRows\\\">\\r\\n                <p ng-if=\\\"$index === 0\\\">{{Messages('assets.spaces.filter.type')}}</p>\\r\\n                <p ng-if=\\\"$index !== 0\\\">&nbsp;</p>\\r\\n                <div class=\\\"checkbox green\\\" ng-repeat=\\\"item in row\\\">\\r\\n                    <label>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            class=\\\"i-checks\\\"\\r\\n                            name=\\\"office_type\\\"\\r\\n                            ng-checked=\\\"office_types_ids.indexOf(item.value) !== -1\\\"\\r\\n                            ng-click=\\\"officeTypeToggleSelection(item.value, item.text)\\\"\\r\\n                        >\\r\\n                        <span class=\\\"icheckbox_square\\\"></span>\\r\\n                        <span class=\\\"label\\\">{{item.text}}</span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">\\r\\n            {{Messages('assets.spaces.filter.apply')}}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{Messages('assets.spaces.filter.cancel')}}\\r\\n        </button>\\r\\n       \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 801 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tenantsFilterModal = __webpack_require__(802);\n\t\n\tvar _tenantsFilterModal2 = _interopRequireDefault(_tenantsFilterModal);\n\t\n\tvar _tenantsFilterModalTemplate = __webpack_require__(803);\n\t\n\tvar _tenantsFilterModalTemplate2 = _interopRequireDefault(_tenantsFilterModalTemplate);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _moment = __webpack_require__(195);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatsTenantsController = function () {\n\t    AssetStatsTenantsController.$inject = ['$scope', '$rootScope', '$state', 'asset', 'assetId', 'AssetStatTenants', 'AssetStatStackingPlan', 'sweetAlert', '$uibModal', 'uibDateParser', 'UtilsService', '$timeout'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatsTenantsController($scope, $rootScope, $state, asset, assetId, AssetStatTenants, AssetStatStackingPlan, sweetAlert, $uibModal, uibDateParser, UtilsService, $timeout) {\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, AssetStatsTenantsController);\n\t\n\t        this.$scope = $scope;\n\t        this.$rootScope = $rootScope;\n\t        this.asset = asset;\n\t        this.assetId = assetId;\n\t        this.$state = $state;\n\t        this.AssetStatTenants = AssetStatTenants;\n\t        this.AssetStatStackingPlan = AssetStatStackingPlan;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t        this.uibDateParser = uibDateParser;\n\t        this.utils = UtilsService;\n\t        this.$timeout = $timeout;\n\t\n\t        this.init();\n\t\n\t        $scope.$on('$destroy', function () {\n\t            $rootScope.$broadcast('right-sidebar:close');\n\t        });\n\t        $scope.$on('right-sidebar:closed', function () {\n\t            _this.selectSpaceRow([]);\n\t            _this.selectedTenant = null;\n\t        });\n\t    }\n\t\n\t    _createClass(AssetStatsTenantsController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this2 = this;\n\t\n\t            this.$scope.greedData = [];\n\t\n\t            this.$scope.statuses = [{\n\t                id: 'in_place',\n\t                value: 0,\n\t                name: (0, _messages2.default)('assets.tenants.filter.in_place')\n\t            }, {\n\t                id: 'expired',\n\t                value: 1,\n\t                name: (0, _messages2.default)('assets.tenants.filter.expired')\n\t            }, {\n\t                id: '1_month',\n\t                value: 1,\n\t                name: (0, _messages2.default)('assets.tenants.filter.within_1_month')\n\t            }, {\n\t                id: '3_month',\n\t                value: 3,\n\t                name: (0, _messages2.default)('assets.tenants.filter.within_3_month')\n\t            }, {\n\t                id: '6_month',\n\t                value: 6,\n\t                name: (0, _messages2.default)('assets.tenants.filter.within_6_month')\n\t            }, {\n\t                id: '1_year',\n\t                value: 12,\n\t                name: (0, _messages2.default)('assets.tenants.filter.within_1_year')\n\t            }, {\n\t                id: 'custom',\n\t                name: (0, _messages2.default)('assets.tenants.filter.custom_dates')\n\t            }];\n\t            this.$scope.selectedStatus = this.$scope.statuses[0];\n\t\n\t            this.$timeout(function () {\n\t                _this2.customDateElement = $('#spaces-filter-daterangepicker');\n\t                $(_this2.customDateElement).daterangepicker({\n\t                    minDate: new Date(),\n\t                    autoApply: true,\n\t                    opens: 'left'\n\t                });\n\t                $(_this2.customDateElement).on('apply.daterangepicker', function (ev, picker) {\n\t                    _this2.customExpirationFrom = picker.startDate;\n\t                    _this2.customExpirationTo = picker.endDate;\n\t                    _this2.$scope.customExpirationFrom = _this2.getParsedDate(picker.startDate);\n\t                    _this2.$scope.customExpirationTo = _this2.getParsedDate(picker.endDate);\n\t                    _this2.gridUpdate(1);\n\t                });\n\t            }, 1);\n\t\n\t            this.statsLabelsDisctionary = {\n\t                'in_place': 'totalAreaActiveContract',\n\t                '1_month': 'totalAreaExpiresInOneMonth',\n\t                '3_month': 'totalAreaExpiresInThreeMonth',\n\t                '6_month': 'totalAreaExpiresInSixMonth',\n\t                '1_year': 'totalAreaExpiresInOneYear'\n\t            };\n\t\n\t            this.$scope.extraFilters = [];\n\t            this.$scope.towers = [];\n\t\n\t            this.AssetStatStackingPlan.getObjects({\n\t                asset: this.assetId\n\t            }, function (result) {\n\t                _this2.$scope.towers = result;\n\t            }, function (err) {});\n\t\n\t            this.gridUpdate(1);\n\t        }\n\t    }, {\n\t        key: 'selectStatus',\n\t        value: function selectStatus(e, status) {\n\t            e.preventDefault();\n\t            this.$scope.selectedStatus = status;\n\t\n\t            if (status.id !== 'custom') {\n\t                this.gridUpdate(1);\n\t                this.$scope.customExpirationFrom = null;\n\t                this.$scope.customExpirationTo = null;\n\t                $(this.customDateElement).data('daterangepicker').setStartDate(new Date());\n\t                $(this.customDateElement).data('daterangepicker').setEndDate(new Date());\n\t            } else {\n\t                $(this.customDateElement).focus();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'gridUpdate',\n\t        value: function gridUpdate(page) {\n\t            var _this3 = this;\n\t\n\t            this.$scope.update = true;\n\t            this.page = page;\n\t\n\t            var extraFilters = this.$scope.extraFilters,\n\t                status = void 0,\n\t                expirationFrom = void 0,\n\t                expirationTo = void 0,\n\t                pricePerMeterFrom = extraFilters.find(function (item) {\n\t                return item.id === 'area_from';\n\t            }),\n\t                pricePerMeterTo = extraFilters.find(function (item) {\n\t                return item.id === 'area_to';\n\t            }),\n\t                contractStartDate = extraFilters.find(function (item) {\n\t                return item.id === 'lease_start';\n\t            }),\n\t                contractEndDate = extraFilters.find(function (item) {\n\t                return item.id === 'lease_end';\n\t            }),\n\t                towers = [],\n\t                spaceTypes = [],\n\t                industries = [];\n\t\n\t            extraFilters.forEach(function (item) {\n\t                if (item.id.indexOf('tower_') === 0) {\n\t                    towers.push(item.value.id);\n\t                }\n\t                if (item.id.indexOf('office_type_') === 0) {\n\t                    spaceTypes.push(item.value.id);\n\t                }\n\t                if (item.id.indexOf('industry_') === 0) {\n\t                    industries.push(item.value.value);\n\t                }\n\t            });\n\t\n\t            switch (this.$scope.selectedStatus.id) {\n\t                case 'in_place':\n\t                case 'expired':\n\t                    status = this.$scope.selectedStatus.value;\n\t                    break;\n\t                case '1_month':\n\t                case '3_month':\n\t                case '6_month':\n\t                case '1_year':\n\t                    expirationFrom = (0, _moment2.default)().format();\n\t                    expirationTo = (0, _moment2.default)().add(this.$scope.selectedStatus.value, 'M').format();\n\t                    break;\n\t                case 'custom':\n\t                    expirationFrom = (0, _moment2.default)(this.customExpirationFrom).format();\n\t                    expirationTo = (0, _moment2.default)(this.customExpirationTo).format();\n\t                    break;\n\t            }\n\t\n\t            this.AssetStatTenants.query({\n\t                id: this.assetId,\n\t                st: status,\n\t                expgte: expirationFrom,\n\t                explte: expirationTo,\n\t                ipgte: pricePerMeterFrom && pricePerMeterFrom.value,\n\t                iplte: pricePerMeterTo && pricePerMeterTo.value,\n\t                stgte: contractStartDate && (0, _moment2.default)(contractStartDate.value).format(),\n\t                stlte: contractEndDate && (0, _moment2.default)(contractEndDate.value).format(),\n\t                twr: towers,\n\t                ot: spaceTypes,\n\t                ind: industries,\n\t                srt: this.$scope.sortType,\n\t                ord: this.$scope.sortDirection,\n\t                pg: page || 1,\n\t                ps: 20\n\t            }, function (result) {\n\t                _this3.$scope.update = false;\n\t\n\t                if (page === 1) {\n\t                    _this3.$scope.greedData = result.items;\n\t                    _this3.$scope.disable_infinite_scrolling = false;\n\t                    _this3.updateStatusLabels(result.stats);\n\t                } else {\n\t                    if (result.items.length === 0) {\n\t                        _this3.$scope.disable_infinite_scrolling = true;\n\t                    } else {\n\t                        _this3.$scope.disable_infinite_scrolling = false;\n\t                        _this3.$scope.greedData = _this3.$scope.greedData.concat(result.items);\n\t                    }\n\t                }\n\t\n\t                _this3.$timeout(function () {\n\t                    _this3.$scope.load_more = false;\n\t                }, 1);\n\t            }, function (error) {\n\t                console.log(error);\n\t                _this3.$scope.update = false;\n\t                _this3.$scope.error = error;\n\t            });\n\t\n\t            this.$rootScope.$broadcast('right-sidebar:close');\n\t        }\n\t    }, {\n\t        key: 'loadMoreItems',\n\t        value: function loadMoreItems() {\n\t            if (!this.$scope.greedData.length) {\n\t                return;\n\t            }\n\t\n\t            this.$scope.load_more = true;\n\t            this.gridUpdate(++this.page);\n\t        }\n\t    }, {\n\t        key: 'sortGrid',\n\t        value: function sortGrid(sortType) {\n\t            this.$scope.sortType = sortType;\n\t            this.$scope.sortDirection = this.$scope.sortDirection === 1 ? 0 : 1;\n\t            this.gridUpdate(1);\n\t        }\n\t    }, {\n\t        key: 'showExtraFilters',\n\t        value: function showExtraFilters() {\n\t            var _this4 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _tenantsFilterModal2.default,\n\t                template: _tenantsFilterModalTemplate2.default,\n\t                resolve: {\n\t                    filter: {\n\t                        data: this.$scope.extraFilters\n\t                    },\n\t                    towers: {\n\t                        data: this.$scope.towers\n\t                    }\n\t                },\n\t                size: 'lg'\n\t            });\n\t            modal.result.then(function (result) {\n\t                _this4.$scope.extraFilters = result;\n\t                if (result.length) {\n\t                    _this4.gridUpdate(1);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'extraFilterRemoveItem',\n\t        value: function extraFilterRemoveItem(item) {\n\t            var id = item.id,\n\t                itemIndex = this.$scope.extraFilters.findIndex(function (item) {\n\t                return item.id === id;\n\t            });\n\t\n\t            this.$scope.extraFilters.splice(itemIndex, 1);\n\t            this.gridUpdate(1);\n\t        }\n\t    }, {\n\t        key: 'getParsedDate',\n\t        value: function getParsedDate(date) {\n\t            return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\n\t        }\n\t    }, {\n\t        key: 'selectSpaceRow',\n\t        value: function selectSpaceRow(row) {\n\t            var cl = 'filtered-spaces-row-selected';\n\t            $('#filtered-spaces-grid tr').each(function (i, item) {\n\t                if (item === row[0]) {\n\t                    $(item).addClass(cl);\n\t                } else {\n\t                    $(item).removeClass(cl);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getOfficeType',\n\t        value: function getOfficeType(type) {\n\t            var officeType = _constants2.default.spaceTypeStorePlain().find(function (item) {\n\t                return item.value === type;\n\t            });\n\t            return officeType.text;\n\t        }\n\t    }, {\n\t        key: 'getUniqueSpacesTowers',\n\t        value: function getUniqueSpacesTowers(spaces) {\n\t            var uniqueSpacesTowers = [];\n\t            spaces.forEach(function (item) {\n\t                if (uniqueSpacesTowers.indexOf(item.towerName) === -1) {\n\t                    uniqueSpacesTowers.push(item.towerName);\n\t                }\n\t            });\n\t            return uniqueSpacesTowers;\n\t        }\n\t    }, {\n\t        key: 'showSpaceInfo',\n\t        value: function showSpaceInfo(space) {\n\t            var _this5 = this;\n\t\n\t            this.$rootScope.$broadcast('right-sidebar:open', {\n\t                type: 'loading'\n\t            });\n\t            this.AssetStatTenants.getSpaceInfo({\n\t                assetId: this.assetId,\n\t                assetObjectId: space.assetObjectId,\n\t                floorId: space.floorId,\n\t                id: space.id\n\t            }, function (result) {\n\t                var contract = result.contract;\n\t\n\t                result.spaceTypeString = _this5.getOfficeType(result.type);\n\t                result.spaceNumber = result.number;\n\t                result.spaceArea = result.rentableArea;\n\t                if (contract && contract.industryId != null) {\n\t                    _constants2.default.clientsIndustryStore().byKey(contract.industryId).done(function (dataItem) {\n\t                        result.industryId = contract.industryId;\n\t                        result.industry = dataItem.display;\n\t                    });\n\t                }\n\t                result.tenantName = contract && contract.tenantName;\n\t                result.leaseStartDate = contract && contract.startsAt;\n\t                result.leaseEndDate = contract && contract.endsAt;\n\t                if (result.leaseStartDate && result.leaseEndDate) {\n\t                    result.expires = ((0, _moment2.default)(_moment2.default.utc()).diff((0, _moment2.default)(result.leaseStartDate)) / (0, _moment2.default)(result.leaseEndDate).diff((0, _moment2.default)(result.leaseStartDate))).toFixed(2) * 100;\n\t                }\n\t                result.totalCosts = contract && contract.totalCosts;\n\t                result.inPlaceRent = contract && contract.inPlaceRent;\n\t                result.netRent = contract && contract.netRent;\n\t                result.additionalCosts = contract && contract.additionalCosts;\n\t                result.otherCosts = contract && contract.otherCosts;\n\t                result.vatCosts = contract && contract.vatCosts;\n\t\n\t                _this5.$rootScope.$broadcast('right-sidebar:open', {\n\t                    type: 'spaceDescription',\n\t                    data: result\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'showTenantInfo',\n\t        value: function showTenantInfo(event, tenant) {\n\t            if (event.target.nodeName === 'A') {\n\t                return;\n\t            }\n\t\n\t            var row = $(event.target).parent('tr');\n\t            if (this.selectedTenant === row[0]) {\n\t                this.$rootScope.$broadcast('right-sidebar:close');\n\t                return;\n\t            }\n\t            this.selectedTenant = row[0];\n\t\n\t            this.$rootScope.$broadcast('right-sidebar:open', {\n\t                type: 'tenantDescription',\n\t                data: tenant\n\t            });\n\t            this.selectSpaceRow(row);\n\t        }\n\t    }, {\n\t        key: 'updateStatusLabels',\n\t        value: function updateStatusLabels(stats) {\n\t            var _this6 = this;\n\t\n\t            stats = stats || [];\n\t            this.$scope.statuses.forEach(function (element) {\n\t                var value = Number(stats[_this6.statsLabelsDisctionary[element.id]]);\n\t                element.label = _this6.utils.formatBadgeValue(value);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return AssetStatsTenantsController;\n\t}();\n\t\n\texports.default = AssetStatsTenantsController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 802 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _moment = __webpack_require__(195);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SpacesFilterController = function () {\n\t    SpacesFilterController.$inject = ['$scope', '$state', 'filter', 'towers', '$uibModalInstance', 'uibDateParser', '$timeout'];\n\t\n\t    /*@ngInject*/\n\t    function SpacesFilterController($scope, $state, filter, towers, $uibModalInstance, uibDateParser, $timeout) {\n\t        _classCallCheck(this, SpacesFilterController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.filter = filter.data;\n\t        this.towers = towers.data;\n\t        this.$uibModalInstance = $uibModalInstance;\n\t        this.uibDateParser = uibDateParser;\n\t        this.$timeout = $timeout;\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(SpacesFilterController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var spaceTypes = _constants2.default.spaceTypeStorePlain(),\n\t                piecesPerRow = Math.round(spaceTypes.length / 3),\n\t                typesRows = [];\n\t\n\t            for (var i = 0, l = 3; i < l; i++) {\n\t                typesRows[i] = [];\n\t                var j = 0;\n\t                for (var jl = piecesPerRow; j < jl; j++) {\n\t                    var item = spaceTypes.shift();\n\t                    if (item) {\n\t                        typesRows[i].push(item);\n\t                    } else {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.$scope.typesRows = typesRows;\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var _this = this;\n\t\n\t            this.$scope.fromValueChanged = function (from, to) {\n\t                if (_this.$scope[from] && _this.$scope[to] && _this.$scope[from] > _this.$scope[to]) {\n\t                    _this.$scope[to] = _this.$scope[from];\n\t                }\n\t            };\n\t            this.$scope.toValueChanged = function (from, to) {\n\t                if (_this.$scope[from] && _this.$scope[to] && _this.$scope[to] < _this.$scope[from]) {\n\t                    _this.$scope[from] = _this.$scope[to];\n\t                }\n\t            };\n\t\n\t            // area\n\t            var area_from = this.filter.find(function (item) {\n\t                return item.id === 'area_from';\n\t            });\n\t            this.$scope.area_from = area_from && area_from.value;\n\t            var area_to = this.filter.find(function (item) {\n\t                return item.id === 'area_to';\n\t            });\n\t            this.$scope.area_to = area_to && area_to.value;\n\t\n\t            // towers\n\t            this.$scope.towers = {\n\t                available: this.towers,\n\t                selected: []\n\t            };\n\t\n\t            // industry\n\t            this.$scope.industry = {\n\t                available: _constants2.default.clientsIndustryPlain(),\n\t                selected: []\n\t            };\n\t\n\t            // office type\n\t            this.$scope.office_types = [];\n\t            this.$scope.office_types_ids = [];\n\t            this.$scope.officeTypeToggleSelection = function (type, valueString) {\n\t                var id = _this.$scope.office_types.findIndex(function (item) {\n\t                    return item.id === type;\n\t                });\n\t\n\t                if (id > -1) {\n\t                    _this.$scope.office_types.splice(id, 1);\n\t                    _this.$scope.office_types_ids.splice(id, 1);\n\t                } else {\n\t                    _this.$scope.office_types.push({\n\t                        id: type,\n\t                        name: valueString\n\t                    });\n\t                    _this.$scope.office_types_ids.push(type);\n\t                }\n\t            };\n\t\n\t            this.leaseDateStart = null;\n\t            this.leaseDateEnd = null;\n\t\n\t            this.filter.forEach(function (item) {\n\t                if (item.id.indexOf('tower_') === 0) {\n\t                    _this.$scope.towers.selected.push(item.value);\n\t                } else if (item.id.indexOf('industry_') === 0) {\n\t                    _this.$scope.industry.selected.push(item.value);\n\t                } else if (item.id.indexOf('office_type_') === 0) {\n\t                    _this.$scope.office_types.push(item.value);\n\t                    _this.$scope.office_types_ids.push(item.value.id);\n\t                } else if (item.id.indexOf('lease_start') === 0) {\n\t                    _this.leaseDateStart = item.value;\n\t                } else if (item.id.indexOf('lease_end') === 0) {\n\t                    _this.leaseDateEnd = item.value;\n\t                }\n\t            });\n\t\n\t            if (this.leaseDateStart && this.leaseDateEnd) {\n\t                this.$scope.lease_date = this.getParsedDate(this.leaseDateStart) + ' - ' + this.getParsedDate(this.leaseDateEnd);\n\t            }\n\t\n\t            this.$timeout(function () {\n\t                var _ranges;\n\t\n\t                var pickerField = $('#tenants-filter-daterangepicker');\n\t                pickerField.daterangepicker({\n\t                    startDate: _this.leaseDateStart || new Date(),\n\t                    endDate: _this.leaseDateEnd || new Date(),\n\t                    locale: {\n\t                        cancelLabel: (0, _messages2.default)('assets.tenants.filter.datepicker.clear')\n\t                    },\n\t                    autoUpdateInput: false,\n\t                    ranges: (_ranges = {}, _defineProperty(_ranges, (0, _messages2.default)('assets.tenants.filter.this_month'), [(0, _moment2.default)().startOf('month'), (0, _moment2.default)().endOf('month')]), _defineProperty(_ranges, (0, _messages2.default)('assets.tenants.filter.last_month'), [(0, _moment2.default)().subtract(1, 'month').startOf('month'), (0, _moment2.default)().subtract(1, 'month').endOf('month')]), _defineProperty(_ranges, (0, _messages2.default)('assets.tenants.filter.this_year'), [(0, _moment2.default)().startOf('year'), (0, _moment2.default)().endOf('year')]), _defineProperty(_ranges, (0, _messages2.default)('assets.tenants.filter.last_year'), [(0, _moment2.default)().subtract(1, 'year').startOf('year'), (0, _moment2.default)().subtract(1, 'year').endOf('year')]), _ranges)\n\t                });\n\t                pickerField.on('apply.daterangepicker', function (ev, picker) {\n\t                    _this.leaseDateStart = picker.startDate;\n\t                    _this.leaseDateEnd = picker.endDate;\n\t                    pickerField.val(_this.getParsedDate(picker.startDate) + ' - ' + _this.getParsedDate(picker.endDate));\n\t                });\n\t                pickerField.on('cancel.daterangepicker', function (ev, picker) {\n\t                    pickerField.val('');\n\t                    var d = new Date();\n\t                    _this.leaseDateStart = null;\n\t                    _this.leaseDateEnd = null;\n\t                    pickerField.data('daterangepicker').setStartDate(d);\n\t                    pickerField.data('daterangepicker').setEndDate(d);\n\t                });\n\t            }, 10);\n\t\n\t            this.$scope.cancel = function () {\n\t                _this.$uibModalInstance.dismiss('cancel');\n\t            };\n\t\n\t            this.$scope.save = function () {\n\t                var result = [];\n\t                if (_this.$scope.area_from) {\n\t                    result.push({\n\t                        id: 'area_from',\n\t                        name: (0, _messages2.default)('assets.tenants.filter.rentable_area_from'),\n\t                        value: _this.$scope.area_from,\n\t                        text: _this.$scope.area_from + ' ' + (0, _messages2.default)('square.meter')\n\t                    });\n\t                }\n\t                if (_this.$scope.area_to) {\n\t                    result.push({\n\t                        id: 'area_to',\n\t                        name: (0, _messages2.default)('assets.tenants.filter.rentable_area_to'),\n\t                        value: _this.$scope.area_to,\n\t                        text: _this.$scope.area_to + ' ' + (0, _messages2.default)('square.meter')\n\t                    });\n\t                }\n\t                if (_this.$scope.towers.selected.length) {\n\t                    _this.$scope.towers.selected.forEach(function (item) {\n\t                        result.push({\n\t                            id: 'tower_' + item.name,\n\t                            value: item,\n\t                            text: item.name\n\t                        });\n\t                    });\n\t                }\n\t                if (_this.$scope.industry.selected.length) {\n\t                    _this.$scope.industry.selected.forEach(function (item) {\n\t                        result.push({\n\t                            id: 'industry_' + item.value,\n\t                            value: item,\n\t                            text: item.text\n\t                        });\n\t                    });\n\t                }\n\t                if (_this.$scope.office_types.length) {\n\t                    _this.$scope.office_types.forEach(function (item) {\n\t                        result.push({\n\t                            id: 'office_type_' + item.id,\n\t                            value: item,\n\t                            text: item.name\n\t                        });\n\t                    });\n\t                }\n\t                if (_this.leaseDateStart) {\n\t                    result.push({\n\t                        id: 'lease_start',\n\t                        name: (0, _messages2.default)('assets.tenants.filter.lease_start_date'),\n\t                        value: _this.leaseDateStart,\n\t                        text: _this.getParsedDate(_this.leaseDateStart)\n\t                    });\n\t                }\n\t                if (_this.leaseDateEnd) {\n\t                    result.push({\n\t                        id: 'lease_end',\n\t                        name: (0, _messages2.default)('assets.tenants.filter.lease_end_date'),\n\t                        value: _this.leaseDateEnd,\n\t                        text: _this.getParsedDate(_this.leaseDateEnd)\n\t                    });\n\t                }\n\t                _this.$uibModalInstance.close(result);\n\t            };\n\t        }\n\t    }, {\n\t        key: 'getParsedDate',\n\t        value: function getParsedDate(date) {\n\t            return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\n\t        }\n\t    }]);\n\t\n\t    return SpacesFilterController;\n\t}();\n\t\n\texports.default = SpacesFilterController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 803 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\" class=\\\"o-hidden\\\">\\r\\n            <div class=\\\"col-md-6 m-b-xl\\\">\\r\\n                <p>{{Messages('assets.tenants.filter.towers')}}</p>\\r\\n                <ui-select multiple ng-model=\\\"towers.selected\\\" close-on-select=\\\"false\\\" theme=\\\"bootstrap\\\">\\r\\n                    <ui-select-match placeholder=\\\"{{Messages('assets.tenants.filter.towers.placeholder')}}\\\">\\r\\n                        {{$item.name}}\\r\\n                    </ui-select-match>\\r\\n                    <ui-select-choices repeat=\\\"item in towers.available | filter: $select.search\\\">\\r\\n                        {{item.name}}\\r\\n                    </ui-select-choices>\\r\\n                </ui-select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 m-b-xl\\\">\\r\\n                <p>{{Messages('assets.tenants.filter.industry')}}</p>\\r\\n                <ui-select multiple ng-model=\\\"industry.selected\\\" close-on-select=\\\"false\\\" theme=\\\"bootstrap\\\">\\r\\n                    <ui-select-match placeholder=\\\"{{Messages('assets.tenants.filter.industry.placeholder')}}\\\">\\r\\n                        {{$item.text}}\\r\\n                    </ui-select-match>\\r\\n                    <ui-select-choices repeat=\\\"item in industry.available | filter: $select.search\\\">\\r\\n                        {{item.text}}\\r\\n                    </ui-select-choices>\\r\\n                </ui-select>\\r\\n            </div>\\r\\n            <div class=\\\"clear\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"m-b-xl\\\">\\r\\n                        <p>{{Messages('assets.tenants.filter.lease_date')}}</p>\\r\\n                        <div class='input-group date' id='datetimepicker1'>\\r\\n                            <input type='text' class=\\\"input-sm form-control\\\" ng-model=\\\"lease_date\\\" id=\\\"tenants-filter-daterangepicker\\\">\\r\\n                            <span class=\\\"input-group-addon\\\">\\r\\n                                <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"m-b-xl\\\">\\r\\n                        <p>{{Messages('assets.tenants.filter.rentable_area')}} [<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                        <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                            <input\\r\\n                                type=\\\"number\\\"\\r\\n                                class=\\\"input-sm form-control\\\"\\r\\n                                id=\\\"areaFrom\\\"\\r\\n                                ng-model=\\\"area_from\\\"\\r\\n                                ng-blur=\\\"fromValueChanged('area_from', 'area_to')\\\"\\r\\n                                placeholder=\\\"{{Messages('assets.tenants.filter.from')}}\\\"\\r\\n                            >\\r\\n                            <span class=\\\"input-group-addon\\\">-</span>\\r\\n                            <input\\r\\n                                type=\\\"number\\\"\\r\\n                                class=\\\"input-sm form-control\\\"\\r\\n                                ng-model=\\\"area_to\\\"\\r\\n                                ng-blur=\\\"toValueChanged('area_from', 'area_to')\\\"\\r\\n                                placeholder=\\\"{{Messages('assets.tenants.filter.to')}}\\\"\\r\\n                            >\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 m-b-xl\\\" ng-repeat=\\\"row in typesRows\\\">\\r\\n                <p ng-if=\\\"$index === 0\\\">{{Messages('assets.tenants.filter.type')}}</p>\\r\\n                <p ng-if=\\\"$index !== 0\\\">&nbsp;</p>\\r\\n                <div class=\\\"checkbox green\\\" ng-repeat=\\\"item in row\\\">\\r\\n                    <label>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            class=\\\"i-checks\\\"\\r\\n                            name=\\\"office_type\\\"\\r\\n                            ng-checked=\\\"office_types_ids.indexOf(item.value) !== -1\\\"\\r\\n                            ng-click=\\\"officeTypeToggleSelection(item.value, item.text)\\\"\\r\\n                        >\\r\\n                        <span class=\\\"icheckbox_square\\\"></span>\\r\\n                        <span class=\\\"label\\\">{{item.text}}</span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">\\r\\n            {{Messages('assets.tenants.filter.apply')}}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{Messages('assets.tenants.filter.cancel')}}\\r\\n        </button>\\r\\n       \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n/***/ },\n/* 804 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatStackingPlan = function () {\n\t    AssetStatStackingPlan.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatStackingPlan(ConfigurationService, $resource) {\n\t        _classCallCheck(this, AssetStatStackingPlan);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:asset/objects', { asset: '@asset', object: '@object' }, {\n\t            getObjects: {\n\t                method: 'GET',\n\t                isArray: true\n\t            },\n\t            getObjectData: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:asset/objects/:object/plan'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(AssetStatStackingPlan, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            AssetStatStackingPlan.instance = new AssetStatStackingPlan(ConfigurationService, $resource);\n\t            return AssetStatStackingPlan.instance;\n\t        }]\n\t    }]);\n\t\n\t    return AssetStatStackingPlan;\n\t}();\n\t\n\texports.default = AssetStatStackingPlan;\n\n/***/ },\n/* 805 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _moment = __webpack_require__(195);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatStackingPlanController = function () {\n\t    AssetStatStackingPlanController.$inject = ['$scope', '$timeout', 'asset', 'assetId', 'AssetStatStackingPlan'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatStackingPlanController($scope, $timeout, asset, assetId, AssetStatStackingPlan) {\n\t        _classCallCheck(this, AssetStatStackingPlanController);\n\t\n\t        this.$scope = $scope;\n\t        this.viewHeight = 0;\n\t        this.assetId = assetId;\n\t        this.asset = asset;\n\t        this.AssetStatStackingPlan = AssetStatStackingPlan;\n\t        this.$timeout = $timeout;\n\t\n\t        this.Messages = _messages2.default;\n\t\n\t        this.onMouseDownOnScrollDriverEventHandler = this.onMouseDownOnScrollDriverEventHandler.bind(this);\n\t        this.onContentScrollEventHandler = this.onContentScrollEventHandler.bind(this);\n\t        this.onMouseMoveOnDocumentEventHandler = this.onMouseMoveOnDocumentEventHandler.bind(this);\n\t        this.onMouseUpOnDocumentEventHandler = this.onMouseUpOnDocumentEventHandler.bind(this);\n\t        this.breadcrumbStates = [{ path: 'asset-stats', title: this.Messages('assets.title') }, { title: this.Messages('stacking-plan.title') }];\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(AssetStatStackingPlanController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            this.$scope.isTabsLoadingState = true;\n\t            this.$scope.noStackingPlan = false;\n\t            this.AssetStatStackingPlan.getObjects({\n\t                asset: this.assetId\n\t            }, function (result) {\n\t                _this.$scope.tabs = result;\n\t                _this.$scope.isTabsLoadingState = false;\n\t                if (result.length) {\n\t                    _this.$scope.isLoadingState = true;\n\t                    _this.getFloorData(result[0]);\n\t                } else {\n\t                    _this.$scope.noStackingPlan = true;\n\t                }\n\t            }, function (err) {\n\t                _this.$scope.isTabsLoadingState = false;\n\t                _this.$scope.noStackingPlan = true;\n\t                _this.$scope.noStackingPlanMessage = err.data.message;\n\t            });\n\t\n\t            this.$scope.$on(\"$destroy\", function () {\n\t                _this.clearScrollHandlers();\n\t            });\n\t\n\t            this.legendYears = this.generateYearsList();\n\t        }\n\t    }, {\n\t        key: 'setSizes',\n\t        value: function setSizes() {\n\t            this.scrollDriverBlockerEl = $('#plan-scroll-blocker');\n\t            this.scrollDriverWrap = $('#plan-scroll-wrap');\n\t            this.contentWrap = $('#plan-wrap');\n\t\n\t            this.scrollDriverBlockerHeight = this.scrollDriverBlockerEl.height();\n\t            this.scrollDriverHeight = $('#plan-scroll-cont').outerHeight();\n\t            this.contentHeight = $('#plan-cont').height();\n\t\n\t            var wrapperOffset = $('#plan-page-wrap').offset(),\n\t                height = $(window).height() - wrapperOffset.top - 260,\n\t                scrollDriverTargetHeight = void 0;\n\t\n\t            this.viewHeight = height;\n\t\n\t            this.contentWrap.height(height);\n\t\n\t            if (this.scrollDriverHeight > height) {\n\t                scrollDriverTargetHeight = height;\n\t            } else if (this.scrollDriverHeight < this.scrollDriverBlockerHeight) {\n\t                scrollDriverTargetHeight = this.scrollDriverBlockerHeight;\n\t            } else {\n\t                scrollDriverTargetHeight = this.scrollDriverHeight;\n\t            }\n\t            this.scrollDriverWrap.height(scrollDriverTargetHeight);\n\t            this.scrollDriverWrapHeight = scrollDriverTargetHeight;\n\t\n\t            this.initScrollHandlers();\n\t        }\n\t    }, {\n\t        key: 'initScrollHandlers',\n\t        value: function initScrollHandlers() {\n\t            var _this2 = this;\n\t\n\t            this.scrollDriverWrap.on('mousewheel', this.onMouseWheelOnScrollDriverEventHandler);\n\t\n\t            this.contentWrap.hover(function () {\n\t                _this2.contentWrap.on('scroll', _this2.onContentScrollEventHandler);\n\t            }, function () {\n\t                _this2.contentWrap.off('scroll', _this2.onContentScrollEventHandler);\n\t            });\n\t\n\t            this.blockerInitialTop = null;\n\t            this.blockerCurPosition = null;\n\t\n\t            this.scrollDriverBlockerEl.on('mousedown', this.onMouseDownOnScrollDriverEventHandler);\n\t            $(document.body).on('mousemove', this.onMouseMoveOnDocumentEventHandler);\n\t            $(document.body).on('mouseup', this.onMouseUpOnDocumentEventHandler);\n\t        }\n\t    }, {\n\t        key: 'clearScrollHandlers',\n\t        value: function clearScrollHandlers() {\n\t            if (!this.scrollDriverWrap) {\n\t                return;\n\t            }\n\t\n\t            this.scrollDriverWrap.off('mousewheel', this.onMouseWheelOnScrollDriverEventHandler);\n\t            this.scrollDriverBlockerEl.off('mousedown', this.onMouseDownOnScrollDriverEventHandler);\n\t            $(document.body).off('mousemove', this.onMouseMoveOnDocumentEventHandler);\n\t            $(document.body).off('mouseup', this.onMouseUpOnDocumentEventHandler);\n\t        }\n\t    }, {\n\t        key: 'onMouseWheelOnScrollDriverEventHandler',\n\t        value: function onMouseWheelOnScrollDriverEventHandler(e) {\n\t            e.originalEvent.preventDefault();\n\t        }\n\t    }, {\n\t        key: 'onMouseDownOnScrollDriverEventHandler',\n\t        value: function onMouseDownOnScrollDriverEventHandler(e) {\n\t            e = e.originalEvent;\n\t\n\t            this.blockerInitialTop = e.pageY;\n\t            this.blockerCurPosition = parseInt(this.scrollDriverBlockerEl.css('top'), 10);\n\t        }\n\t    }, {\n\t        key: 'onContentScrollEventHandler',\n\t        value: function onContentScrollEventHandler(e) {\n\t            var curScroll = e.target.scrollTop,\n\t                scrollInPercents = curScroll / ((this.contentHeight - this.viewHeight) / 100),\n\t                targetPositionForBlocker = void 0;\n\t\n\t            if (scrollInPercents > 100) {\n\t                scrollInPercents = 100;\n\t            }\n\t\n\t            if (this.scrollDriverHeight > this.viewHeight) {\n\t                this.scrollDriverWrap[0].scrollTop = (this.scrollDriverHeight - this.viewHeight) / 100 * scrollInPercents;\n\t            }\n\t\n\t            targetPositionForBlocker = (this.scrollDriverWrapHeight - this.scrollDriverBlockerHeight) / 100 * scrollInPercents;\n\t            this.scrollDriverBlockerEl.css({\n\t                top: targetPositionForBlocker + 'px'\n\t            });\n\t        }\n\t    }, {\n\t        key: 'onMouseMoveOnDocumentEventHandler',\n\t        value: function onMouseMoveOnDocumentEventHandler(e) {\n\t            if (this.blockerInitialTop === null) {\n\t                return;\n\t            }\n\t\n\t            e = e.originalEvent;\n\t\n\t            var position = this.blockerCurPosition - (this.blockerInitialTop - e.pageY);\n\t\n\t            if (position < 0) {\n\t                position = 0;\n\t            } else if (position + this.scrollDriverBlockerHeight > this.scrollDriverWrapHeight) {\n\t                position = this.scrollDriverWrapHeight - this.scrollDriverBlockerHeight;\n\t            }\n\t\n\t            this.scrollDriverBlockerEl.css({\n\t                top: position + 'px'\n\t            });\n\t\n\t            var positionInPercents = position / ((this.scrollDriverWrapHeight - this.scrollDriverBlockerHeight) / 100);\n\t            this.contentWrap[0].scrollTop = (this.contentHeight - this.viewHeight) / 100 * positionInPercents;\n\t            this.scrollDriverWrap[0].scrollTop = (this.scrollDriverHeight - this.viewHeight) / 100 * positionInPercents;\n\t        }\n\t    }, {\n\t        key: 'onMouseUpOnDocumentEventHandler',\n\t        value: function onMouseUpOnDocumentEventHandler() {\n\t            this.blockerInitialTop = null;\n\t        }\n\t    }, {\n\t        key: 'showSpaceDescription',\n\t        value: function showSpaceDescription(data) {\n\t            var _this3 = this;\n\t\n\t            var self = this;\n\t\n\t            self.$scope.description = data;\n\t            self.$scope.details = null;\n\t\n\t            self.$timeout(function () {\n\t                self.$scope.details = data;\n\t\n\t                if (data.leaseStartDate && data.leaseEndDate) {\n\t                    self.$scope.details.expires = ((0, _moment2.default)(_moment2.default.utc()).diff((0, _moment2.default)(data.leaseStartDate)) / (0, _moment2.default)(data.leaseEndDate).diff((0, _moment2.default)(data.leaseStartDate))).toFixed(2) * 100;\n\t                } else {\n\t                    self.$scope.details.expires = null;\n\t                }\n\t\n\t                // additional data\n\t                _constants2.default.spaceTypeStore().byKey(_this3.$scope.details.spaceType).done(function (dataItem) {\n\t                    self.$scope.details.spaceTypeString = dataItem.display;\n\t                });\n\t            }, 51);\n\t        }\n\t    }, {\n\t        key: 'hideSpaceDescription',\n\t        value: function hideSpaceDescription() {\n\t            var self = this;\n\t\n\t            self.$scope.description = null;\n\t            self.$scope.details = null;\n\t        }\n\t    }, {\n\t        key: 'tabSelected',\n\t        value: function tabSelected(e, data) {\n\t            e.preventDefault();\n\t            this.$scope.description = null;\n\t            this.$scope.isLoadingState = true;\n\t            this.clearScrollHandlers();\n\t            this.getFloorData(data);\n\t        }\n\t    }, {\n\t        key: 'getMaxOfFloorArea',\n\t        value: function getMaxOfFloorArea(floors) {\n\t            var maxFloorArea = 0;\n\t\n\t            floors.forEach(function (floor) {\n\t                if (floor.totalFloorArea > maxFloorArea) {\n\t                    maxFloorArea = floor.totalFloorArea;\n\t                }\n\t            });\n\t\n\t            return maxFloorArea;\n\t        }\n\t    }, {\n\t        key: 'getFloorData',\n\t        value: function getFloorData(object) {\n\t            var _this4 = this;\n\t\n\t            this.AssetStatStackingPlan.getObjectData({\n\t                asset: this.assetId,\n\t                object: object.id\n\t            }, function (result) {\n\t                var maxFloorArea = _this4.getMaxOfFloorArea(result.floors);\n\t                result.floors.forEach(function (floor) {\n\t                    var floorWidth = void 0;\n\t\n\t                    if (_this4.$scope.view === 'actual') {\n\t                        floorWidth = floor.totalFloorArea / (maxFloorArea / 100) + '%';\n\t                    } else {\n\t                        floorWidth = '100%';\n\t                    }\n\t                    floor.width = floorWidth;\n\t\n\t                    var _loop = function _loop(i, l) {\n\t                        var space = floor.spaces[i],\n\t                            spaceInPercents = void 0;\n\t                        //filling industry name\n\t                        if (space.industryId != null) {\n\t                            _constants2.default.clientsIndustryStore().byKey(space.industryId).done(function (dataItem) {\n\t                                space.industry = dataItem.display;\n\t                            });\n\t                        }\n\t                        //end filling industry name\n\t                        space.leaseEndYearIndex = _this4.getLeaseEndYearIndex(space.leaseEndDate);\n\t\n\t                        // let spaceWithTheSameTenantId = floor.spaces.find(function(item) {\n\t                        //     return item.tenantId === space.tenantId;\n\t                        // });\n\t\n\t                        // if (spaceWithTheSameTenantId && spaceWithTheSameTenantId.spaceId !== space.spaceId) {\n\t                        //     spaceWithTheSameTenantId.spaceArea += space.spaceArea;\n\t\n\t                        //     spaceInPercents = spaceWithTheSameTenantId.spaceArea / (floor.totalFloorArea / 100);\n\t\n\t                        //     if (!(spaceWithTheSameTenantId.spaceId instanceof Array)) {\n\t                        //         spaceWithTheSameTenantId.spaceId = [spaceWithTheSameTenantId.spaceId];\n\t                        //     }\n\t                        //     spaceWithTheSameTenantId.spaceId.push(space.spaceId);\n\t\n\t                        //     spaceWithTheSameTenantId.weight = spaceInPercents;\n\t\n\t                        //     floor.spaces.splice(i, 1);\n\t                        //     i--; l--;\n\t                        // } else {\n\t                        spaceInPercents = space.spaceArea / (floor.totalFloorArea / 100);\n\t                        space.weight = spaceInPercents;\n\t                        //}\n\t                    };\n\t\n\t                    for (var i = 0, l = floor.spaces.length; i < l; i++) {\n\t                        _loop(i, l);\n\t                    }\n\t                    floor.spaces.sort(function (a, b) {\n\t                        if (!a.tenantId && b.tenantId) {\n\t                            return 1;\n\t                        } else if (a.tenantId && !b.tenantId) {\n\t                            return -1;\n\t                        } else {\n\t                            return 0;\n\t                        }\n\t                    });\n\t                });\n\t                result.floors.sort(function (a, b) {\n\t                    if (a.floorOrder > b.floorOrder) {\n\t                        return -1;\n\t                    } else if (a.floorOrder < b.floorOrder) {\n\t                        return 1;\n\t                    } else {\n\t                        return 0;\n\t                    }\n\t                });\n\t\n\t                _this4.$scope.floors = result.floors;\n\t                _this4.$scope.isLoadingState = false;\n\t                _this4.$timeout(function () {\n\t                    _this4.setSizes();\n\t                }, 201);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'viewChanged',\n\t        value: function viewChanged(e) {\n\t            var _this5 = this;\n\t\n\t            e.originalEvent.preventDefault();\n\t\n\t            var target = e.originalEvent.target,\n\t                activeCl = 'active',\n\t                viewType = target.getAttribute('data-type');\n\t\n\t            $('.plan-tabs .view-tab').each(function (key, item) {\n\t                var type = item.getAttribute('data-type');\n\t                if (type !== viewType) {\n\t                    $(item).removeClass(activeCl);\n\t                } else {\n\t                    $(item).addClass(activeCl);\n\t                }\n\t            });\n\t\n\t            var maxFloorArea = this.getMaxOfFloorArea(this.$scope.floors);\n\t            this.$scope.floors.forEach(function (floor) {\n\t                _this5.$scope.view = viewType;\n\t                var floorWidth = void 0;\n\t                if (viewType === 'actual') {\n\t                    floorWidth = floor.totalFloorArea / (maxFloorArea / 100) + '%';\n\t                } else {\n\t                    floorWidth = '100%';\n\t                }\n\t                floor.width = floorWidth;\n\t            });\n\t\n\t            this.clearScrollHandlers();\n\t            this.$timeout(function () {\n\t                _this5.setSizes();\n\t            }, 350);\n\t        }\n\t    }, {\n\t        key: 'generateYearsList',\n\t        value: function generateYearsList() {\n\t            var currentYear = new Date().getFullYear();\n\t\n\t            var result = [];\n\t\n\t            for (var i = 0; i < 5; i++) {\n\t                result.push({ title: currentYear + i, index: i });\n\t            }\n\t\n\t            return result;\n\t        }\n\t    }, {\n\t        key: 'getLeaseEndYearIndex',\n\t        value: function getLeaseEndYearIndex(leaseEndDate) {\n\t            if (leaseEndDate == null) return null;\n\t\n\t            var date = new Date(leaseEndDate);\n\t            var leaseEndYear = date.getFullYear();\n\t\n\t            var currentYear = new Date().getFullYear();\n\t\n\t            var result = leaseEndYear - currentYear;\n\t\n\t            if (result > 4) result = 4;\n\t\n\t            return result;\n\t        }\n\t    }]);\n\t\n\t    return AssetStatStackingPlanController;\n\t}();\n\t\n\texports.default = AssetStatStackingPlanController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 806 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStats = function () {\n\t  AssetStats.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function AssetStats(ConfigurationService, $resource) {\n\t    _classCallCheck(this, AssetStats);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id', { id: '@id' }, {\n\t      query: {\n\t        method: 'GET',\n\t        url: ConfigurationService.getApiBaseUrl() + 'api/assets',\n\t        isArray: true\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(AssetStats, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      AssetStats.instance = new AssetStats(ConfigurationService, $resource);\n\t      return AssetStats.instance;\n\t    }]\n\t  }]);\n\t\n\t  return AssetStats;\n\t}();\n\t\n\texports.default = AssetStats;\n\n/***/ },\n/* 807 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatSpaces = function () {\n\t    AssetStatSpaces.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatSpaces(ConfigurationService, $resource) {\n\t        _classCallCheck(this, AssetStatSpaces);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id/spaces', { id: '@id' }, {\n\t            query: {\n\t                method: 'GET',\n\t                //url: ConfigurationService.getApiBaseUrl() + 'api/assets',\n\t                isArray: true\n\t            },\n\t            search: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/spaces/search'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(AssetStatSpaces, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            AssetStatSpaces.instance = new AssetStatSpaces(ConfigurationService, $resource);\n\t            return AssetStatSpaces.instance;\n\t        }]\n\t    }]);\n\t\n\t    return AssetStatSpaces;\n\t}();\n\t\n\texports.default = AssetStatSpaces;\n\n/***/ },\n/* 808 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AssetStatTenants = function () {\n\t    AssetStatTenants.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function AssetStatTenants(ConfigurationService, $resource) {\n\t        _classCallCheck(this, AssetStatTenants);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id/contracts/search', { id: '@id' }, {\n\t            query: {\n\t                method: 'GET'\n\t            },\n\t            getSpaceInfo: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces/:id/full'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(AssetStatTenants, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            AssetStatTenants.instance = new AssetStatTenants(ConfigurationService, $resource);\n\t            return AssetStatTenants.instance;\n\t        }]\n\t    }]);\n\t\n\t    return AssetStatTenants;\n\t}();\n\t\n\texports.default = AssetStatTenants;\n\n/***/ },\n/* 809 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _client = __webpack_require__(810);\n\t\n\tvar _client2 = _interopRequireDefault(_client);\n\t\n\tvar _clients = __webpack_require__(811);\n\t\n\tvar _clients2 = _interopRequireDefault(_clients);\n\t\n\t__webpack_require__(324);\n\t\n\tvar _client3 = __webpack_require__(812);\n\t\n\tvar _client4 = _interopRequireDefault(_client3);\n\t\n\tvar _representatives = __webpack_require__(813);\n\t\n\tvar _representatives2 = _interopRequireDefault(_representatives);\n\t\n\tvar _representatives3 = __webpack_require__(816);\n\t\n\tvar _representatives4 = _interopRequireDefault(_representatives3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.clients', ['dx']).controller('ClientController', _client2.default).controller('ClientsController', _clients2.default).factory('Client', _client4.default.activate).component('representatives', _representatives2.default).factory('Representative', _representatives4.default.activate);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 810 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _clientEditModal = __webpack_require__(705);\n\t\n\tvar _clientEditModal2 = _interopRequireDefault(_clientEditModal);\n\t\n\tvar _clientEditModalTemplate = __webpack_require__(706);\n\t\n\tvar _clientEditModalTemplate2 = _interopRequireDefault(_clientEditModalTemplate);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ClientController = function () {\n\t    ClientController.$inject = ['$scope', '$state', 'Client', 'clientObject', 'NotificationService', '$filter', '$uibModal', 'NgMap', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function ClientController($scope, $state, Client, clientObject, NotificationService, $filter, $uibModal, NgMap, UtilsService) {\n\t        _classCallCheck(this, ClientController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Client = Client;\n\t        this.clientObject = clientObject;\n\t        this.notificationService = NotificationService;\n\t        this.$filter = $filter;\n\t        this.$uibModal = $uibModal;\n\t        this.NgMap = NgMap;\n\t        this.utils = UtilsService;\n\t\n\t        this.init();\n\t    }\n\t\n\t    _createClass(ClientController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var _this = this;\n\t\n\t            var self = this;\n\t            this.clientObject.address = this.utils.generateAddress(this.clientObject);\n\t            if (this.clientObject.industryId != null) {\n\t                _constants2.default.clientsIndustryStore().byKey(this.clientObject.industryId).done(function (dataItem) {\n\t                    self.clientObject.industry = dataItem.display;\n\t                });\n\t            }\n\t\n\t            this.NgMap.getMap().then(function (map) {\n\t                _this.map = map;\n\t                if (!_this.map.marker) _this.map.marker = new google.maps.Marker();\n\t\n\t                _this.map.marker.setMap(null);\n\t\n\t                var stylez = [{\n\t                    featureType: 'all',\n\t                    elementType: 'all',\n\t                    stylers: [{\n\t                        saturation: -100 // made the map as grayscale\n\t                    }]\n\t                }];\n\t                var mapType = new google.maps.StyledMapType(stylez, {\n\t                    name: 'Grayscale'\n\t                });\n\t\n\t                map.mapTypes.set('tehgrayz', mapType);\n\t                map.setMapTypeId('tehgrayz');\n\t\n\t                _this.setMapCoordinates();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'editClient',\n\t        value: function editClient() {\n\t            var _this2 = this;\n\t\n\t            var modal = this.$uibModal.open({\n\t                controller: _clientEditModal2.default,\n\t                template: _clientEditModalTemplate2.default,\n\t                resolve: {\n\t                    clientId: this.clientObject.id\n\t                }\n\t            });\n\t            modal.result.then(function (result) {\n\t                var newAddress = _this2.utils.generateAddress(result),\n\t                    newCountry = result.countryId,\n\t                    needToUpdateMap = void 0;\n\t\n\t                if (newAddress !== _this2.clientObject.address || newCountry !== _this2.clientObject.countryId) {\n\t                    needToUpdateMap = true;\n\t                }\n\t\n\t                jQuery.extend(_this2.clientObject, result);\n\t                _this2.clientObject.address = newAddress;\n\t\n\t                if (needToUpdateMap) {\n\t                    _this2.setMapCoordinates();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setMapCoordinates',\n\t        value: function setMapCoordinates() {\n\t            var _this3 = this;\n\t\n\t            this.map.marker.setMap(null);\n\t\n\t            if (this.clientObject.address) {\n\t                var geocoder = new google.maps.Geocoder(),\n\t                    countries = _constants2.default.countryStorePlain(),\n\t                    country = this.$filter('filter')(countries, {\n\t                    value: this.clientObject.countryId\n\t                });\n\t\n\t                if (country && country[0]) {\n\t                    country = country[0].text + ', ';\n\t                } else {\n\t                    country = '';\n\t                }\n\t\n\t                geocoder.geocode({\n\t                    address: country + this.clientObject.address\n\t                }, function (result, status) {\n\t                    if (status === 'OK') {\n\t                        _this3.map.setCenter(result[0].geometry.location);\n\t\n\t                        _this3.map.marker.setPosition(result[0].geometry.location);\n\t                        _this3.map.marker.setMap(_this3.map);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ClientController;\n\t}();\n\t\n\texports.default = ClientController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 811 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, jQuery) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tvar _clientEditModal = __webpack_require__(705);\n\t\n\tvar _clientEditModal2 = _interopRequireDefault(_clientEditModal);\n\t\n\tvar _clientEditModalTemplate = __webpack_require__(706);\n\t\n\tvar _clientEditModalTemplate2 = _interopRequireDefault(_clientEditModalTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ClientsController = function () {\n\t    ClientsController.$inject = ['$scope', '$state', 'Client', 'StoreAdapter', 'currentUser', 'NotificationService', 'DialogService', 'sweetAlert', '$uibModal', 'UtilsService'];\n\t\n\t    /*@ngInject*/\n\t    function ClientsController($scope, $state, Client, StoreAdapter, currentUser, NotificationService, DialogService, sweetAlert, $uibModal, UtilsService) {\n\t        _classCallCheck(this, ClientsController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Client = Client;\n\t        this.storeAdapter = StoreAdapter;\n\t        this.currentUser = currentUser;\n\t        this.notificationService = NotificationService;\n\t        this.dialogService = DialogService;\n\t        this.sweetAlert = sweetAlert;\n\t        this.$uibModal = $uibModal;\n\t        this.utils = UtilsService;\n\t\n\t        this.initGrid();\n\t    }\n\t\n\t    _createClass(ClientsController, [{\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.stateStore = _constants2.default.clientsStateStore();\n\t            self.countryStore = _constants2.default.countryStore();\n\t\n\t            self.clients = [];\n\t\n\t            self.Client.query({}, function (result) {\n\t                self.clients = result;\n\t\n\t                self.clients.forEach(function (item) {\n\t                    item.address = self.utils.generateAddress(item);\n\t                });\n\t\n\t                self.store = new _array_store2.default({\n\t                    data: self.clients,\n\t                    key: \"id\",\n\t                    modified: function modified() {\n\t                        // 'modified' event handler\n\t                    },\n\t                    errorHandler: self.errorHandler.requestFailed\n\t                });\n\t\n\t                self.gridDataSource = { store: self.store };\n\t\n\t                self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                    dataSource: self.gridDataSource,\n\t                    columns: [{\n\t                        dataField: \"id\",\n\t                        visible: false\n\t                    }, {\n\t                        dataField: \"name\",\n\t                        caption: (0, _messages2.default)('clients.name'),\n\t                        sortOrder: \"asc\",\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains',\n\t                        cellTemplate: function cellTemplate(cellElement, cellInfo) {\n\t                            var element = $('<a>', {\n\t                                'href': '/clients/' + cellInfo.data.id,\n\t                                'ui-sref': 'client'\n\t                            });\n\t\n\t                            element.text(cellInfo.displayValue).appendTo(cellElement);\n\t                        }\n\t                    }, {\n\t                        dataField: \"address\",\n\t                        caption: (0, _messages2.default)('clients.address'),\n\t                        filterOperations: ['contains', 'startswith', '='],\n\t                        selectedFilterOperation: 'contains'\n\t                    }, {\n\t                        dataField: \"countryId\",\n\t                        caption: (0, _messages2.default)('clients.country'),\n\t                        lookup: {\n\t                            dataSource: self.countryStore,\n\t                            displayExpr: 'display',\n\t                            valueExpr: 'value'\n\t                        }\n\t                    }, {\n\t                        dataField: \"state\",\n\t                        caption: (0, _messages2.default)('clients.state'),\n\t                        lookup: {\n\t                            dataSource: self.stateStore,\n\t                            displayExpr: 'display',\n\t                            valueExpr: 'value'\n\t                        },\n\t                        width: 100\n\t                    }, {\n\t                        caption: (0, _messages2.default)('actions'),\n\t                        width: 90,\n\t                        alignment: 'right',\n\t                        cellTemplate: function cellTemplate(container, options) {\n\t                            container.addClass(\"actions-cell\");\n\t\n\t                            $(\"<div />\").dxButton({\n\t                                type: 'custom',\n\t                                template: '<div class=\"fa fa-pencil\" title=\"' + (0, _messages2.default)('clients.edit') + '\"></div>',\n\t                                onClick: function onClick(data) {\n\t                                    data.jQueryEvent.stopPropagation();\n\t\n\t                                    var modal = self.$uibModal.open({\n\t                                        controller: _clientEditModal2.default,\n\t                                        template: _clientEditModalTemplate2.default,\n\t                                        resolve: {\n\t                                            clientId: options.data.id\n\t                                        }\n\t                                    });\n\t                                    modal.result.then(function (result) {\n\t                                        result.address = self.utils.generateAddress(result);\n\t                                        jQuery.extend(options.data, result);\n\t                                    });\n\t                                }\n\t                            }).appendTo(container);\n\t\n\t                            // let isArchived = options.data.state === 2;\n\t                            // $(\"<div />\").dxButton({\n\t                            //     type: 'custom',\n\t                            //     template: `<div class=\"fa ${isArchived ? 'fa-undo' : 'fa-trash-o'}\" title=\"${isArchived ? Messages('clients.activate') : Messages('clients.archive')}\"></div>`,\n\t                            //     disabled: options.data.state === 2,\n\t                            //     onClick: function (data) {\n\t                            //         if (isArchived) {\n\t                            //             self.activateClient(options.data);\n\t                            //         } else {\n\t                            //             self.archiveClient(options.data);\n\t                            //         }\n\t                            //     }\n\t                            // }).appendTo(container);\n\t                        }\n\t                    }],\n\t                    selection: {\n\t                        mode: 'single' // 'multiple'\n\t                    },\n\t                    onSelectionChanged: function onSelectionChanged(selectedItems) {\n\t                        self.selectedClient = selectedItems.selectedRowsData[0];\n\t                    }\n\t                });\n\t            });\n\t        }\n\t\n\t        // archiveClient(client) {\n\t        //     client = Object.assign({}, client);\n\t        //     let self = this;\n\t        //     client.state = 2;\n\t        //     this.sweetAlert.swal(\n\t        //         {\n\t        //             title: Messages('clients.archive.title'),\n\t        //             type: 'warning',\n\t        //             showCancelButton: true,\n\t        //             confirmButtonColor: '#DD6B55',\n\t        //             confirmButtonText: Messages('clients.archive.confirmButton'),\n\t        //         },\n\t        //         function (isConfirm) {\n\t        //             if (isConfirm) {\n\t        //                 self.Client.update({id: client.id}, client,\n\t        //                     function(result) {\n\t        //                         self.store.remove(client.id);\n\t        //                         self.store.insert(result);\n\t        //\n\t        //                         $('#gridContainer').dxDataGrid('instance').refresh();\n\t        //                         self.notificationService.success(Messages('clients.message.archived'));\n\t        //                     },\n\t        //                     function(result) {\n\t        //                         self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t        //                     });\n\t        //             }\n\t        //         }\n\t        //     );\n\t        // }\n\t        //\n\t        // activateClient(client) {\n\t        //     client = Object.assign({}, client);\n\t        //\n\t        //     let self = this;\n\t        //     this.sweetAlert.swal(\n\t        //         {\n\t        //             title: Messages('clients.activate.title'),\n\t        //             type: 'warning',\n\t        //             showCancelButton: true,\n\t        //             confirmButtonColor: '#DD6B55',\n\t        //             confirmButtonText: Messages('clients.activate.confirmButton'),\n\t        //         },\n\t        //         function (isConfirm) {\n\t        //             if (isConfirm) {\n\t        //                 clients.state = 1;\n\t        //                 self.Client.update({ id: client.id }, client,\n\t        //                     function(result) {\n\t        //                         self.store.remove(client.id);\n\t        //                         self.store.insert(result);\n\t        //\n\t        //                         $('#gridContainer').dxDataGrid('instance').refresh();\n\t        //                         self.notificationService.success(Messages('clients.message.archived'));\n\t        //                     },\n\t        //                     function(result) {\n\t        //                         self.notificationService.error(result.data.message ? result.data.message : result.data);\n\t        //                     });\n\t        //             }\n\t        //         }\n\t        //     );\n\t        // }\n\t\n\t    }]);\n\t\n\t    return ClientsController;\n\t}();\n\t\n\texports.default = ClientsController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162), __webpack_require__(162)))\n\n/***/ },\n/* 812 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Client = function () {\n\t    Client.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function Client(ConfigurationService, $resource) {\n\t        _classCallCheck(this, Client);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/clients/:id', { id: '@id' }, {\n\t            query: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/clients',\n\t                isArray: true\n\t            },\n\t            update: {\n\t                method: 'PUT'\n\t            },\n\t            create: {\n\t                method: 'POST',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/clients'\n\t            },\n\t            getFull: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/clients/:id/full'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(Client, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            Client.instance = new Client(ConfigurationService, $resource);\n\t            return Client.instance;\n\t        }]\n\t    }]);\n\t\n\t    return Client;\n\t}();\n\t\n\texports.default = Client;\n\n/***/ },\n/* 813 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _representatives = __webpack_require__(814);\n\t\n\tvar _representatives2 = _interopRequireDefault(_representatives);\n\t\n\tvar _representativesTemplate = __webpack_require__(815);\n\t\n\tvar _representativesTemplate2 = _interopRequireDefault(_representativesTemplate);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar RepresentativesComponent = {\n\t    bindings: {\n\t        client: '='\n\t    },\n\t    controller: _representatives2.default,\n\t    template: _representativesTemplate2.default,\n\t    Messages: _messages2.default\n\t};\n\t\n\texports.default = RepresentativesComponent;\n\n/***/ },\n/* 814 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tvar _constants = __webpack_require__(698);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _array_store = __webpack_require__(411);\n\t\n\tvar _array_store2 = _interopRequireDefault(_array_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RepresentativesController = function () {\n\t    RepresentativesController.$inject = ['$scope', 'NotificationService', 'UtilsService', 'Representative', 'DialogService'];\n\t\n\t    /*@ngInject*/\n\t    function RepresentativesController($scope, NotificationService, UtilsService, Representative, DialogService) {\n\t        _classCallCheck(this, RepresentativesController);\n\t\n\t        // from component\n\t        this.client = this.client;\n\t\n\t        // injected\n\t        this.$scope = $scope;\n\t        this.NotificationService = NotificationService;\n\t        this.utils = UtilsService;\n\t        this.messages = _messages2.default;\n\t        this.dialogService = DialogService;\n\t        this.Representative = Representative;\n\t        // initialization\n\t        this.init();\n\t        this.initGrid();\n\t    }\n\t\n\t    _createClass(RepresentativesController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.client.representatives.forEach(function (rep) {\n\t                if (!rep.uniqueId) {\n\t                    rep.uniqueId = self.utils.generateGuid();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'initGrid',\n\t        value: function initGrid() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    self.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.store = new _array_store2.default({\n\t                data: self.client.representatives,\n\t                key: \"uniqueId\",\n\t                errorHandler: self.errorHandler.requestFailed\n\t            });\n\t\n\t            self.gridDataSource = { store: self.store };\n\t\n\t            self.gridSettings = $.extend(_constants2.default.defaultGridSettings(), {\n\t                dataSource: self.gridDataSource,\n\t                onInitialized: function onInitialized(e) {\n\t                    self.gridInstance = e.component;\n\t                },\n\t                filterRow: { visible: false },\n\t                groupPanel: { visible: false },\n\t                editing: {\n\t                    allowUpdate: true,\n\t                    allowDelete: true\n\t                },\n\t                columns: [{\n\t                    dataField: 'name',\n\t                    caption: (0, _messages2.default)('clients.representatives.name'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    sortOrder: 'asc',\n\t                    alignment: 'left',\n\t                    validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', max: 255 }]\n\t                }, {\n\t                    dataField: 'email',\n\t                    caption: (0, _messages2.default)('clients.representatives.email'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    alignment: 'left',\n\t                    validationRules: [{ type: 'email' }]\n\t                }, {\n\t                    dataField: 'phone',\n\t                    caption: (0, _messages2.default)('clients.representatives.phone'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    validationRules: [{\n\t                        type: \"pattern\",\n\t                        message: (0, _messages2.default)('validation.phone'),\n\t                        pattern: _constants2.default.phonePattern()\n\t                    }]\n\t                }, {\n\t                    dataField: 'position',\n\t                    caption: (0, _messages2.default)('clients.representatives.position'),\n\t                    filterOperations: ['contains', 'startswith', '='],\n\t                    selectedFilterOperation: 'contains',\n\t                    alignment: 'right',\n\t                    validationRules: [{ type: 'stringLength', max: 100 }]\n\t                }, {\n\t                    dataField: \"id\",\n\t                    caption: (0, _messages2.default)('actions'),\n\t                    width: 100,\n\t                    alignment: 'right',\n\t                    cellTemplate: function cellTemplate(container, options) {\n\t                        container.addClass(\"actions-cell\");\n\t\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-pencil\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.gridInstance.editRow(options.rowIndex);\n\t                            }\n\t                        }).appendTo(container);\n\t\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-trash-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.gridInstance.deleteRow(options.rowIndex);\n\t                            }\n\t                        }).appendTo(container);\n\t                    },\n\t                    editCellTemplate: function editCellTemplate(container, options) {\n\t                        container.addClass(\"actions-cell\");\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-floppy-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.gridInstance.saveEditData(options.rowIndex);\n\t                            }\n\t                        }).appendTo(container);\n\t                        $(\"<div />\").dxButton({\n\t                            type: 'custom',\n\t                            template: '<div class=\"fa fa-trash-o\"></div>',\n\t                            onClick: function onClick(e) {\n\t                                self.gridInstance.cancelEditData(options.rowIndex);\n\t                            }\n\t                        }).appendTo(container);\n\t                    }\n\t                }],\n\t                onRowInserting: function onRowInserting(e) {\n\t                    self.create(e);\n\t                },\n\t                onRowUpdating: function onRowUpdating(e) {\n\t                    self.update(e);\n\t                },\n\t                onRowRemoving: function onRowRemoving(e) {\n\t                    self.delete(e);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'addRow',\n\t        value: function addRow() {\n\t            this.gridInstance.addRow();\n\t        }\n\t    }, {\n\t        key: 'create',\n\t        value: function create(e) {\n\t            var self = this;\n\t\n\t            var d = $.Deferred();\n\t            self.Representative.create({ clientId: self.client.id }, e.data, function (result) {\n\t                self.NotificationService.success((0, _messages2.default)('clients.representatives.message.created'));\n\t                e.data.id = result.id;\n\t                d.resolve();\n\t            }, function (error) {\n\t                self.NotificationService.error(error.data);\n\t                d.resolve(true);\n\t            });\n\t\n\t            e.cancel = d.promise();\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(e) {\n\t            var data = e.oldData;\n\t            if (e.newData.name != null) data.name == e.newData.name;\n\t            if (e.newData.phone != null) data.phone == e.newData.phone;\n\t            if (e.newData.position != null) data.position == e.newData.position;\n\t            if (e.newData.email != null) data.email == e.newData.email;\n\t\n\t            var self = this;\n\t\n\t            var d = $.Deferred();\n\t            self.Representative.update({ clientId: self.client.id, id: data.id }, data, function (result) {\n\t                self.NotificationService.success((0, _messages2.default)('clients.representatives.message.updated'));\n\t                d.resolve();\n\t            }, function (error) {\n\t                self.NotificationService.error(error.data);\n\t                d.resolve(true);\n\t            });\n\t\n\t            e.cancel = d.promise();\n\t        }\n\t    }, {\n\t        key: 'delete',\n\t        value: function _delete(e) {\n\t            var self = this;\n\t            var d = $.Deferred();\n\t            self.Representative.delete({ clientId: self.client.id, id: e.data.id }, function (result) {\n\t                self.NotificationService.success((0, _messages2.default)('clients.representatives.message.deleted'));\n\t                d.resolve();\n\t            }, function (error) {\n\t                self.NotificationService.error(error.data);\n\t                d.resolve(true);\n\t            });\n\t\n\t            e.cancel = d.promise();\n\t        }\n\t    }]);\n\t\n\t    return RepresentativesController;\n\t}();\n\t\n\texports.default = RepresentativesController;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162)))\n\n/***/ },\n/* 815 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<form name=\\\"representativesForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addRow()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('clients.representatives.new')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"repsGridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\\r\\n\"\n\n/***/ },\n/* 816 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Representative = function () {\n\t    Representative.$inject = ['ConfigurationService', '$resource'];\n\t\n\t    /*@ngInject*/\n\t    function Representative(ConfigurationService, $resource) {\n\t        _classCallCheck(this, Representative);\n\t\n\t        return $resource(ConfigurationService.getApiBaseUrl() + 'api/clients/:clientId/representatives/:id', { id: '@id', clientId: '@clientId' }, {\n\t            query: {\n\t                method: 'GET',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/clients/:clientId/representatives',\n\t                isArray: true\n\t            },\n\t            update: {\n\t                method: 'PUT'\n\t            },\n\t            create: {\n\t                method: 'POST',\n\t                url: ConfigurationService.getApiBaseUrl() + 'api/clients/:clientId/representatives'\n\t            },\n\t            delete: {\n\t                method: 'DELETE'\n\t            }\n\t        });\n\t    }\n\t\n\t    /*@ngInject*/\n\t\n\t\n\t    _createClass(Representative, null, [{\n\t        key: 'activate',\n\t        value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t            Representative.instance = new Representative(ConfigurationService, $resource);\n\t            return Representative.instance;\n\t        }]\n\t    }]);\n\t\n\t    return Representative;\n\t}();\n\t\n\texports.default = Representative;\n\n/***/ },\n/* 817 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _registration = __webpack_require__(818);\n\t\n\tvar _registration2 = _interopRequireDefault(_registration);\n\t\n\tvar _registration3 = __webpack_require__(819);\n\t\n\tvar _registration4 = _interopRequireDefault(_registration3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = angular.module('tower360.registration', []).controller('RegistrationController', _registration2.default).factory('Registration', _registration4.default.activate);\n\t\n\texports.default = _module;\n\n/***/ },\n/* 818 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validation_engine = __webpack_require__(475);\n\t\n\tvar _validation_engine2 = _interopRequireDefault(_validation_engine);\n\t\n\tvar _messages = __webpack_require__(670);\n\t\n\tvar _messages2 = _interopRequireDefault(_messages);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RegistrationController = function () {\n\t    RegistrationController.$inject = ['$scope', '$state', '$stateParams', 'Registration', 'registrationObject', 'NotificationService', 'SecurityService'];\n\t\n\t    /*@ngInject*/\n\t    function RegistrationController($scope, $state, $stateParams, Registration, registrationObject, NotificationService, SecurityService) {\n\t        _classCallCheck(this, RegistrationController);\n\t\n\t        this.$scope = $scope;\n\t        this.$state = $state;\n\t        this.Registration = Registration;\n\t        this.registrationObject = registrationObject;\n\t        this.notificationService = NotificationService;\n\t        this.$stateParams = $stateParams;\n\t        this.securityService = SecurityService;\n\t\n\t        this.init();\n\t        this.initForm();\n\t    }\n\t\n\t    _createClass(RegistrationController, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var self = this;\n\t\n\t            self.validate = function () {\n\t                var validateGroup = _validation_engine2.default.getGroupConfig('settings');\n\t                var result = validateGroup.validate();\n\t                return result.isValid;\n\t            };\n\t\n\t            self.comprasionTarget = function () {\n\t                if (self.registrationObject.password) return self.registrationObject.password;\n\t            };\n\t        }\n\t    }, {\n\t        key: 'initForm',\n\t        value: function initForm() {\n\t            var self = this;\n\t\n\t            self.errorHandler = {\n\t                requestFailed: function requestFailed(response) {\n\t                    this.NotificationService.error(response.data);\n\t                }\n\t            };\n\t\n\t            self.nameSettings = { bindingOptions: { value: '$ctrl.registrationObject.email' }, disabled: true };\n\t            self.nameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: 'settings'\n\t            };\n\t\n\t            self.passwordSettings = { bindingOptions: { value: '$ctrl.registrationObject.password' }, mode: 'password' };\n\t            self.passwordValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'stringLength', min: 6, message: (0, _messages2.default)('validation.shortPassword') }],\n\t                validationGroup: 'settings'\n\t            };\n\t\n\t            self.confirmPasswordSettings = { bindingOptions: { value: '$ctrl.registrationObject.confirmPassword' }, mode: 'password' };\n\t            self.confirmPasswordValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }, { type: 'compare', comparisonTarget: self.comprasionTarget, message: (0, _messages2.default)('validation.passwordsNotMatch') }],\n\t                validationGroup: 'settings'\n\t            };\n\t            self.displayNameSettings = { bindingOptions: { value: '$ctrl.registrationObject.displayName' } };\n\t            self.displayNameValidationRules = {\n\t                validationRules: [{ type: 'required', message: (0, _messages2.default)('validation.required') }],\n\t                validationGroup: 'settings'\n\t            };\n\t\n\t            self.saveSettingsBtnConfig = {\n\t                text: (0, _messages2.default)('registration.submit'),\n\t                type: 'default',\n\t                onClick: self.submit,\n\t                template: 'saveButtonWithLoadIndicator',\n\t                bindingOptions: {\n\t                    disabled: '$ctrl.isSaveOperationDisabled || $ctrl.saveInProgress'\n\t                }\n\t            };\n\t\n\t            self.cancelSettingsBtnConfig = {\n\t                text: (0, _messages2.default)('registration.cancel'),\n\t                type: 'normal',\n\t                onClick: function onClick() {\n\t                    self.$state.go('home');\n\t                }\n\t            };\n\t\n\t            self.$scope.$watch('$ctrl.registrationObject', function (newValue, oldValue) {\n\t                self.isSaveOperationDisabled = !self.validate();\n\t            }, true);\n\t        }\n\t    }, {\n\t        key: 'submit',\n\t        value: function submit() {\n\t            var self = this.$ctrl;\n\t\n\t            var result = _validation_engine2.default.getGroupConfig('settings').validate();\n\t            if (result.isValid) {\n\t                self.saveInProgress = true;\n\t                //self.client.brokerId = self.currentUser.brokerId;\n\t\n\t                self.Registration.confirm({ token: self.$stateParams.token }, self.registrationObject, function (result) {\n\t                    self.notificationService.success((0, _messages2.default)('clients.message.created'));\n\t                    self.saveInProgress = false;\n\t                    self.signIn(self.registrationObject.email, self.registrationObject.password);\n\t                }, function (error) {\n\t                    self.notificationService.error(error.data);\n\t                    self.saveInProgress = false;\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'signIn',\n\t        value: function signIn(login, password) {\n\t            var _this = this;\n\t\n\t            var self = this.$ctrl;\n\t\n\t            this.securityService.signIn(login, password).then(function (response) {\n\t                _this.securityService.reset();\n\t                _this.$state.go('home');\n\t            }, function (err) {\n\t                _this.error = err.data.error_description;\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return RegistrationController;\n\t}();\n\t\n\texports.default = RegistrationController;\n\n/***/ },\n/* 819 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Registration = function () {\n\t  Registration.$inject = ['ConfigurationService', '$resource'];\n\t\n\t  /*@ngInject*/\n\t  function Registration(ConfigurationService, $resource) {\n\t    _classCallCheck(this, Registration);\n\t\n\t    return $resource(ConfigurationService.getApiBaseUrl() + 'api/account/registration/:token', { token: '@token' }, {\n\t      query: {\n\t        method: 'GET'\n\t      },\n\t      confirm: {\n\t        method: 'PUT'\n\t      }\n\t    });\n\t  }\n\t\n\t  /*@ngInject*/\n\t\n\t\n\t  _createClass(Registration, null, [{\n\t    key: 'activate',\n\t    value: ['ConfigurationService', '$resource', function activate(ConfigurationService, $resource) {\n\t      Registration.instance = new Registration(ConfigurationService, $resource);\n\t      return Registration.instance;\n\t    }]\n\t  }]);\n\t\n\t  return Registration;\n\t}();\n\t\n\texports.default = Registration;\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// assets/app.ea0d6faa97e8f86daddb.js","// application styles\r\nimport './vendor.styles';\r\nimport '../styles/style.less';\r\n\r\nimport 'jquery';\r\nimport 'jquery-ui';\r\nimport 'bootstrap';\r\n\r\nimport angular from 'angular';\r\nimport angularsanitize from 'angular-sanitize';\r\nimport 'angular-animate';\r\nimport 'angular-local-storage';\r\nimport uirouter from 'angular-ui-router';\r\nimport angularresource from 'angular-resource/index.js';\r\nimport ActivityMonitor from 'angular-activity-monitor';\r\nimport 'angularjs-toaster';\r\nimport 'angular-xeditable';\r\nimport 'angular-ui-bootstrap';\r\nimport 'moment';\r\nimport 'angular-moment';\r\nimport 'ngmap';\r\nimport 'sweetalert';\r\nimport 'ladda';\r\nimport 'angular-ladda';\r\nimport 'ui-select';\r\nimport 'bootstrap-daterangepicker';\r\nimport ngInfiniteScroll from 'ng-infinite-scroll';\r\n\r\nimport 'devextreme/integration/angular';\r\nimport 'devextreme/ui/data_grid';\r\nimport 'devextreme/ui/button';\r\n\r\nimport routing from './app.config';\r\nimport interceptors from './app.interceptors';\r\nimport run from './app.run';\r\nimport activityMonitor from './app.activitymonitor';\r\n\r\n// common\r\nimport Services from './services/services';\r\nimport Components from './components/components';\r\nimport './services/storeadapter.service'\r\n\r\n// common directives\r\nimport PanelToolsDirective from './components/panels/paneltools.directive';\r\nimport AnimatePanelDirective from './components/panels/animate.directive';\r\nimport SweetAlert from './components/alerts/sweet-alert.factory';\r\n\r\n// business modules\r\nimport Home from './home/home';\r\nimport Login from './login/login';\r\nimport Brokers from './brokers/brokers';\r\nimport Users from './users/users';\r\nimport Assets from './assets/assets';\r\nimport AssetStats from './asset-stats/asset-stats';\r\nimport Clients from './clients/clients';\r\nimport Registrations from './registration/registration';\r\n\r\nimport 'ng-onload/release/ng-onload.min';\r\n\r\nlet app = angular.module('tower360', [\r\n    uirouter,\r\n    'dx',\r\n    'LocalStorageModule',\r\n    angularresource,\r\n    'ActivityMonitor',\r\n    'ngAnimate',\r\n    'ngOnload',\r\n    'xeditable',\r\n    'ui.bootstrap',\r\n    'ngMap',\r\n    'angularMoment',\r\n    'angular-ladda',\r\n    'ui.select',\r\n    'ngSanitize',\r\n    ngInfiniteScroll,\r\n    // common\r\n    Services.name,\r\n    Components.name,\r\n    'tower360.utils', // this should be converted to ES6 style\r\n\r\n    // business\r\n    Home.name,\r\n    Login.name,\r\n    Brokers.name,\r\n    Users.name,\r\n    Assets.name,\r\n    AssetStats.name,\r\n    Clients.name,\r\n    Registrations.name\r\n]);\r\n\r\napp.config(routing);\r\napp.config(interceptors);\r\napp.run(run);\r\napp.run(activityMonitor);\r\napp.run(['editableOptions', function (editableOptions) {\r\n    editableOptions.theme = 'bs3';\r\n}]);\r\n\r\napp.directive('panelTools', PanelToolsDirective.activate)\r\n    .directive('animatePanel', AnimatePanelDirective.activate)\r\n    .factory('sweetAlert', SweetAlert);\r\n\r\napp.filter('shortNumber', () => {\r\n    return (number) => {\r\n        if (number) {\r\n            let abs = Math.abs(number);\r\n            if (abs >= Math.pow(10, 12)) {\r\n                // trillion\r\n                number = (number / Math.pow(10, 12)).toFixed(1) + \"T\";\r\n            } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\r\n                // billion\r\n                number = (number / Math.pow(10, 9)).toFixed(1) + \"B\";\r\n            } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\r\n                // million\r\n                number = (number / Math.pow(10, 6)).toFixed(1) + \"M\";\r\n            } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\r\n                // thousand\r\n                number = (number / Math.pow(10, 3)).toFixed(1) + \"K\";\r\n            }\r\n            return number;\r\n        }\r\n    }\r\n});\r\n\r\napp.constant('Activities', {\r\n    HomeView: '390E3425-970F-4DDF-9ED1-CC39B1F30E50',\r\n    UsersView: '7A1781A1-E26A-4993-8BC5-09EFAF9D5DE8',\r\n    BrokersView: '58B4A88A-6728-4DA3-9F3D-0546ABDB4560',\r\n    BrokerManage: '934871FF-A6DE-4B2C-B863-A378A4A414C8',\r\n    AssetsView: 'D8D389D1-F92A-40A8-ABE5-CC3639D3CFD6',\r\n    AssetsManage: 'AD46C0DF-7009-4EA3-91F6-01C4133FD38C',\r\n    ClientsManage: 'D00F82C9-A412-4010-833A-F78F0DFD10DD',\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.js","// Bootstrap\r\nimport 'bootstrap/less/bootstrap.less';\r\n\r\n// Font-awesome\r\nimport 'font-awesome/less/font-awesome.less';\r\n\r\n// Devextreme\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\nimport 'pixeden-stroke-7-icon/pe-icon-7-stroke/dist/pe-icon-7-stroke.css';\r\n\r\n// X-editable\r\nimport 'angular-xeditable/dist/css/xeditable.min.css';\r\n\r\n// Angularjs-toaster\r\nimport 'angularjs-toaster/toaster.min.css';\r\n\r\n// Animate\r\nimport 'animate.css/animate.css';\r\n\r\nimport 'fileicon.css/fileicon.css';\r\n\r\n// Sweet alert\r\nimport 'sweetalert/dist/sweetalert.css';\r\n\r\n// UI select\r\nimport 'ui-select/dist/select.min.css';\r\n\r\n// bootstrap daterangepicker\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\n\n// WEBPACK FOOTER //\n// ./src/app/vendor.styles.js","var map = {\n\t\"./af\": 198,\n\t\"./af.js\": 198,\n\t\"./ar\": 199,\n\t\"./ar-dz\": 200,\n\t\"./ar-dz.js\": 200,\n\t\"./ar-ly\": 201,\n\t\"./ar-ly.js\": 201,\n\t\"./ar-ma\": 202,\n\t\"./ar-ma.js\": 202,\n\t\"./ar-sa\": 203,\n\t\"./ar-sa.js\": 203,\n\t\"./ar-tn\": 204,\n\t\"./ar-tn.js\": 204,\n\t\"./ar.js\": 199,\n\t\"./az\": 205,\n\t\"./az.js\": 205,\n\t\"./be\": 206,\n\t\"./be.js\": 206,\n\t\"./bg\": 207,\n\t\"./bg.js\": 207,\n\t\"./bn\": 208,\n\t\"./bn.js\": 208,\n\t\"./bo\": 209,\n\t\"./bo.js\": 209,\n\t\"./br\": 210,\n\t\"./br.js\": 210,\n\t\"./bs\": 211,\n\t\"./bs.js\": 211,\n\t\"./ca\": 212,\n\t\"./ca.js\": 212,\n\t\"./cs\": 213,\n\t\"./cs.js\": 213,\n\t\"./cv\": 214,\n\t\"./cv.js\": 214,\n\t\"./cy\": 215,\n\t\"./cy.js\": 215,\n\t\"./da\": 216,\n\t\"./da.js\": 216,\n\t\"./de\": 217,\n\t\"./de-at\": 218,\n\t\"./de-at.js\": 218,\n\t\"./de.js\": 217,\n\t\"./dv\": 219,\n\t\"./dv.js\": 219,\n\t\"./el\": 220,\n\t\"./el.js\": 220,\n\t\"./en-au\": 221,\n\t\"./en-au.js\": 221,\n\t\"./en-ca\": 222,\n\t\"./en-ca.js\": 222,\n\t\"./en-gb\": 223,\n\t\"./en-gb.js\": 223,\n\t\"./en-ie\": 224,\n\t\"./en-ie.js\": 224,\n\t\"./en-nz\": 225,\n\t\"./en-nz.js\": 225,\n\t\"./eo\": 226,\n\t\"./eo.js\": 226,\n\t\"./es\": 227,\n\t\"./es-do\": 228,\n\t\"./es-do.js\": 228,\n\t\"./es.js\": 227,\n\t\"./et\": 229,\n\t\"./et.js\": 229,\n\t\"./eu\": 230,\n\t\"./eu.js\": 230,\n\t\"./fa\": 231,\n\t\"./fa.js\": 231,\n\t\"./fi\": 232,\n\t\"./fi.js\": 232,\n\t\"./fo\": 233,\n\t\"./fo.js\": 233,\n\t\"./fr\": 234,\n\t\"./fr-ca\": 235,\n\t\"./fr-ca.js\": 235,\n\t\"./fr-ch\": 236,\n\t\"./fr-ch.js\": 236,\n\t\"./fr.js\": 234,\n\t\"./fy\": 237,\n\t\"./fy.js\": 237,\n\t\"./gd\": 238,\n\t\"./gd.js\": 238,\n\t\"./gl\": 239,\n\t\"./gl.js\": 239,\n\t\"./he\": 240,\n\t\"./he.js\": 240,\n\t\"./hi\": 241,\n\t\"./hi.js\": 241,\n\t\"./hr\": 242,\n\t\"./hr.js\": 242,\n\t\"./hu\": 243,\n\t\"./hu.js\": 243,\n\t\"./hy-am\": 244,\n\t\"./hy-am.js\": 244,\n\t\"./id\": 245,\n\t\"./id.js\": 245,\n\t\"./is\": 246,\n\t\"./is.js\": 246,\n\t\"./it\": 247,\n\t\"./it.js\": 247,\n\t\"./ja\": 248,\n\t\"./ja.js\": 248,\n\t\"./jv\": 249,\n\t\"./jv.js\": 249,\n\t\"./ka\": 250,\n\t\"./ka.js\": 250,\n\t\"./kk\": 251,\n\t\"./kk.js\": 251,\n\t\"./km\": 252,\n\t\"./km.js\": 252,\n\t\"./ko\": 253,\n\t\"./ko.js\": 253,\n\t\"./ky\": 254,\n\t\"./ky.js\": 254,\n\t\"./lb\": 255,\n\t\"./lb.js\": 255,\n\t\"./lo\": 256,\n\t\"./lo.js\": 256,\n\t\"./lt\": 257,\n\t\"./lt.js\": 257,\n\t\"./lv\": 258,\n\t\"./lv.js\": 258,\n\t\"./me\": 259,\n\t\"./me.js\": 259,\n\t\"./mi\": 260,\n\t\"./mi.js\": 260,\n\t\"./mk\": 261,\n\t\"./mk.js\": 261,\n\t\"./ml\": 262,\n\t\"./ml.js\": 262,\n\t\"./mr\": 263,\n\t\"./mr.js\": 263,\n\t\"./ms\": 264,\n\t\"./ms-my\": 265,\n\t\"./ms-my.js\": 265,\n\t\"./ms.js\": 264,\n\t\"./my\": 266,\n\t\"./my.js\": 266,\n\t\"./nb\": 267,\n\t\"./nb.js\": 267,\n\t\"./ne\": 268,\n\t\"./ne.js\": 268,\n\t\"./nl\": 269,\n\t\"./nl-be\": 270,\n\t\"./nl-be.js\": 270,\n\t\"./nl.js\": 269,\n\t\"./nn\": 271,\n\t\"./nn.js\": 271,\n\t\"./pa-in\": 272,\n\t\"./pa-in.js\": 272,\n\t\"./pl\": 273,\n\t\"./pl.js\": 273,\n\t\"./pt\": 274,\n\t\"./pt-br\": 275,\n\t\"./pt-br.js\": 275,\n\t\"./pt.js\": 274,\n\t\"./ro\": 276,\n\t\"./ro.js\": 276,\n\t\"./ru\": 277,\n\t\"./ru.js\": 277,\n\t\"./se\": 278,\n\t\"./se.js\": 278,\n\t\"./si\": 279,\n\t\"./si.js\": 279,\n\t\"./sk\": 280,\n\t\"./sk.js\": 280,\n\t\"./sl\": 281,\n\t\"./sl.js\": 281,\n\t\"./sq\": 282,\n\t\"./sq.js\": 282,\n\t\"./sr\": 283,\n\t\"./sr-cyrl\": 284,\n\t\"./sr-cyrl.js\": 284,\n\t\"./sr.js\": 283,\n\t\"./ss\": 285,\n\t\"./ss.js\": 285,\n\t\"./sv\": 286,\n\t\"./sv.js\": 286,\n\t\"./sw\": 287,\n\t\"./sw.js\": 287,\n\t\"./ta\": 288,\n\t\"./ta.js\": 288,\n\t\"./te\": 289,\n\t\"./te.js\": 289,\n\t\"./tet\": 290,\n\t\"./tet.js\": 290,\n\t\"./th\": 291,\n\t\"./th.js\": 291,\n\t\"./tl-ph\": 292,\n\t\"./tl-ph.js\": 292,\n\t\"./tlh\": 293,\n\t\"./tlh.js\": 293,\n\t\"./tr\": 294,\n\t\"./tr.js\": 294,\n\t\"./tzl\": 295,\n\t\"./tzl.js\": 295,\n\t\"./tzm\": 296,\n\t\"./tzm-latn\": 297,\n\t\"./tzm-latn.js\": 297,\n\t\"./tzm.js\": 296,\n\t\"./uk\": 298,\n\t\"./uk.js\": 298,\n\t\"./uz\": 299,\n\t\"./uz.js\": 299,\n\t\"./vi\": 300,\n\t\"./vi.js\": 300,\n\t\"./x-pseudo\": 301,\n\t\"./x-pseudo.js\": 301,\n\t\"./yo\": 302,\n\t\"./yo.js\": 302,\n\t\"./zh-cn\": 303,\n\t\"./zh-cn.js\": 303,\n\t\"./zh-hk\": 304,\n\t\"./zh-hk.js\": 304,\n\t\"./zh-tw\": 305,\n\t\"./zh-tw.js\": 305\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 197;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 197\n// module chunks = 0","/*@ngInject*/\r\nexport default function routing($urlRouterProvider, $locationProvider, $stateProvider, Activities) {\r\n    $locationProvider.html5Mode({\r\n        enabled: true,\r\n        requireBase: false\r\n    }).hashPrefix('!');\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n\r\n    $stateProvider\r\n        // private part states\r\n        .state('private', {\r\n            template: require('./private.html'),\r\n            abstract: true\r\n        })\r\n        .state('home', {\r\n            url: '/',\r\n            parent: 'private',\r\n            template: require('../app/home/home-template.html'),\r\n            controller: 'HomeController',\r\n            resolve: {\r\n                 canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.HomeView, 'forbidden', 'login');\r\n                }]\r\n            }\r\n        })\r\n        .state('brokers', {\r\n            url: '/brokers',\r\n            parent: 'private',\r\n            template: require('../app/brokers/brokers.template.html'),\r\n            controller: 'BrokersController',\r\n            controllerAs: 'ctrl',\r\n            resolve: {\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                   return SecurityService.canDo(Activities.BrokersView, 'forbidden', 'login');\r\n               }]\r\n            }\r\n        })\r\n        .state('broker', {\r\n            url: '/brokers/{id:int}',\r\n            parent: 'private',\r\n            template: require('../app/brokers/broker.template.html'),\r\n            controller: 'BrokerController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                brokerObject: ['$stateParams', 'Broker', function ($stateParams, Broker) {\r\n                    return Broker.get({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.BrokerManage, 'forbidden', 'login');\r\n                }],\r\n            }\r\n        })\r\n        .state('asset-stats', {\r\n            url: '/asset-stats',\r\n            parent: 'private',\r\n            template: require('../app/asset-stats/asset-stats.template.html'),\r\n            controller: 'AssetStatsController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                   return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\r\n               }]\r\n            }\r\n        })\r\n        .state('asset-stats-2', {\r\n            url: '/asset-stats2',\r\n            parent: 'private',\r\n            template: require('../app/asset-stats/asset-stats-2.template.html'),\r\n            controller: 'AssetStatsController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\r\n                }]\r\n            }\r\n        })\r\n        .state('asset-stats-spaces', {\r\n            url: '/asset-stats/{id:int}/spaces',\r\n            parent: 'private',\r\n            template: require('../app/asset-stats/asset-stat-spaces.template.html'),\r\n            controller: 'AssetStatSpacesController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                asset: ['$stateParams', 'Asset', function ($stateParams, Asset) {\r\n                    return Asset.get({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function(SecurityService) {\r\n                    return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\r\n                }],\r\n                assetId: ['$stateParams', function($stateParams) {\r\n                    return $stateParams.id;\r\n                }]\r\n            }\r\n        })\r\n        .state('asset-stats-tenants', {\r\n            url: '/asset-stats/{id:int}/tenants',\r\n            parent: 'private',\r\n            template: require('../app/asset-stats/tenants/asset-stat-tenants.template.html'),\r\n            controller: 'AssetStatTenantsController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                asset: ['$stateParams', 'Asset', function ($stateParams, Asset) {\r\n                    return Asset.get({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function(SecurityService) {\r\n                    return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\r\n                }],\r\n                assetId: ['$stateParams', function($stateParams) {\r\n                    return $stateParams.id;\r\n                }]\r\n            }\r\n        })\r\n        .state('asset-stats-stacking-plan', {\r\n            url: '/asset-stats/{id:int}/stacking-plan',\r\n            parent: 'private',\r\n            template: require('../app/asset-stats/asset-stat-stacking-plan.template.html'),\r\n            controller: 'AssetStatStackingPlanController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                asset: ['$stateParams', 'Asset', function ($stateParams, Asset) {\r\n                    return Asset.get({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.AssetsView, 'forbidden', 'login');\r\n                }],\r\n                assetId: ['$stateParams', function($stateParams) {\r\n                    return $stateParams.id;\r\n                }]\r\n            }\r\n        })\r\n        .state('users', {\r\n            url: '/users',\r\n            parent: 'private',\r\n            template: require('../app/users/users.template.html'),\r\n            controller: 'UsersController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.UsersView, 'forbidden', 'login');\r\n                }],\r\n                currentUser: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.getUserInfo();\r\n                }]\r\n            }\r\n        })\r\n        .state('user', {\r\n            url: '/users/{id:int}',\r\n            parent: 'private',\r\n            template: require('../app/users/user.template.html'),\r\n            controller: 'UserController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                userObject: ['$stateParams', 'User', function ($stateParams, User) {\r\n                    return User.get({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.UsersView, 'forbidden', 'login');\r\n                }],\r\n                currentUser: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.getUserInfo();\r\n                }]\r\n            }\r\n        })\r\n        .state('assets', {\r\n            url: '/assets',\r\n            parent: 'private',\r\n            template: require('../app/assets/assets.template.html'),\r\n            controller: 'AssetsController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.AssetsManage, 'forbidden', 'login');\r\n                }],\r\n                currentUser: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.getUserInfo();\r\n                }]\r\n            }\r\n        })\r\n         .state('asset', {\r\n            url: '/assets/{id:int}',\r\n            parent: 'private',\r\n            template: require('../app/assets/asset.template.html'),\r\n            controller: 'AssetController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                assetObject: ['$stateParams', 'Asset', function ($stateParams, Asset) {\r\n                    return Asset.getFull({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.AssetsManage, 'forbidden', 'login');\r\n                }],\r\n                currentUser: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.getUserInfo();\r\n                }]\r\n            }\r\n        })\r\n        .state('clients', {\r\n            url: '/clients',\r\n            parent: 'private',\r\n            template: require('../app/clients/clients.template.html'),\r\n            controller: 'ClientsController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.ClientsManage, 'forbidden', 'login');\r\n                }],\r\n                currentUser: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.getUserInfo();\r\n                }]\r\n            }\r\n        })\r\n        .state('client', {\r\n            url: '/clients/{id:int}',\r\n            parent: 'private',\r\n            template: require('../app/clients/client.template.html'),\r\n            controller: 'ClientController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                clientObject: ['$stateParams', 'Client', function ($stateParams, Client) {\r\n                    return Client.getFull({ id: $stateParams.id }).$promise;\r\n                }],\r\n                canDo: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.canDo(Activities.ClientsManage, 'forbidden', 'login');\r\n                }],\r\n                currentUser: ['SecurityService', function (SecurityService) {\r\n                    return SecurityService.getUserInfo();\r\n                }]\r\n            }\r\n        })\r\n        // public part states\r\n        .state('public', {\r\n            template: require('./public.html'),\r\n            abstract: true\r\n        })\r\n        .state('login', {\r\n            url: '/login',\r\n            parent: 'public',\r\n            params: {\r\n                automatic: false\r\n            },\r\n            template: require('../app/login/login-template.html'),\r\n            controller: 'LoginController',\r\n            controllerAs: '$ctrl'\r\n        })\r\n        .state('registration', {\r\n            url: '/registration/{token}',\r\n            template: require('../app/registration/registration.template.html'),\r\n            controller: 'RegistrationController',\r\n            controllerAs: '$ctrl',\r\n            resolve: {\r\n                registrationObject: ['$stateParams', 'Registration', function ($stateParams, Registration) {\r\n                    return Registration.get({ token: $stateParams.token }).$promise;\r\n                }],\r\n            }\r\n        })\r\n        // error pages\r\n        .state('forbidden', {\r\n            url: '/forbidden',\r\n            template: require('../app/errors/forbidden.template.html')\r\n        })\r\n        .state('notfound', {\r\n            url: '/notfound',\r\n            template: require('../app/errors/notfound.template.html')\r\n        });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.config.js","module.exports = \"<body class=\\\"page-index\\\">\\r\\n    <!-- page -->\\r\\n    <div class=\\\"page page-sidebar\\\">\\r\\n\\r\\n      <!-- navbar -->\\r\\n      <mainheader></mainheader>\\r\\n      <!-- /navbar -->\\r\\n\\r\\n      <!--sidebar-->\\r\\n      <aside id=\\\"left-sidebar\\\" class=\\\"region region-sidebar\\\">\\r\\n          <sidebar></sidebar>\\r\\n      </aside>\\r\\n      <!--/sidebar-->\\r\\n\\r\\n      <div id=\\\"wrapper\\\" class=\\\"page-wrapper\\\">\\r\\n        <!-- container -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n\\r\\n          <right-sidebar></right-sidebar>\\r\\n\\r\\n          <!-- content -->\\r\\n          <div id=\\\"content\\\" class=\\\"region region-content\\\">\\r\\n            <div ui-view class=\\\"main-content\\\"></div>\\r\\n          </div>\\r\\n          <!-- content -->\\r\\n\\r\\n        </div>\\r\\n        <!-- /container -->\\r\\n\\r\\n        <!-- footer -->\\r\\n        <footer id=\\\"footer\\\"></footer>\\r\\n        <!-- /footer -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <toaster-container toaster-options=\\\"{'position-class': 'toast-bottom-center'}\\\"></toaster-container>\\r\\n    <!-- /page -->\\r\\n    <!--<body-blocker></body-blocker>-->\\r\\n</body>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/private.html\n// module id = 648\n// module chunks = 0","module.exports = \"<div class=\\\"hpanel\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <h2>Dashboard</h2>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home-template.html\n// module id = 649\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'brokers', 'title': Messages('brokers.title') }]\\\" title=\\\"{{Messages('brokers.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'broker'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div dx-data-grid=\\\"ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/brokers/brokers.template.html\n// module id = 650\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'brokers', 'title': Messages('brokers.title') }, { 'title': $ctrl.brokerObject.name }]\\\" title=\\\"{{$ctrl.brokerObject.name}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"hpanel horange\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editBroker()\\\" title=\\\"{{Messages('brokers.edit')}}\\\"></i>\\r\\n                        <i class=\\\"fa btn btn-default btn-xs\\\" ng-class=\\\"isArchived ? 'fa-undo' : 'fa-trash-o'\\\" title=\\\"{{isArchived ? Messages('brokers.activate') : Messages('brokers.archive')}}\\\" ng-click=\\\"$ctrl.archiveTrigger()\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"broker-avatar\\\">\\r\\n                    <img alt=\\\"\\\" class=\\\"img-circle m-b m-t-md\\\" src=\\\"img/user.svg\\\" />\\r\\n                </div>\\r\\n                <h3 class=\\\"broker-name\\\">\\r\\n                    {{$ctrl.brokerObject.name}}\\r\\n                    <span ng-if=\\\"isArchived\\\" class=\\\"small archived-marker\\\">{{Messages('brokers.archived')}}</span>\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"panel-footer\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"broker-stat\\\">\\r\\n                            <span>{{Messages('brokers.projects')}}: </span>\\r\\n                            <strong>200</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"broker-stat\\\">\\r\\n                            <span>{{Messages('brokers.messages')}}: </span>\\r\\n                            <strong>300</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"broker-stat\\\">\\r\\n                            <span>{{Messages('brokers.views')}}: </span>\\r\\n                            <strong>400</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <ng-map class=\\\"client-map\\\" center=\\\"52.520468, 13.407234\\\" zoom=\\\"11\\\" disable-default-u-i=\\\"true\\\" zoom-control=\\\"true\\\" scrollwheel=\\\"false\\\"></ng-map>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"fish-container\\\">\\r\\n                    <i class=\\\"edge\\\"></i>\\r\\n                    <span class=\\\"cont\\\">{{Messages('brokers.additional.container')}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/brokers/broker.template.html\n// module id = 651\n// module chunks = 0","module.exports = \" <div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') }]\\\" title=\\\"{{Messages('assets.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div class=\\\"block block-content content-items\\\">\\r\\n    <div class=\\\"row\\\" ng-repeat=\\\"row in $ctrl.assets\\\">\\r\\n        <div class=\\\"col-lg-3\\\" ng-repeat=\\\"item in row\\\" animate-panel child=\\\"asset-panel\\\">\\r\\n            <div class=\\\"asset-panel-2\\\">\\r\\n                <div ng-class=\\\"'hpanel ' + item.color\\\">\\r\\n                    <div class=\\\"panel-body\\\" ng-show=\\\"$ctrl.isShow($index)\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-xs-5 column-image\\\">\\r\\n                                <div class=\\\"image\\\">\\r\\n                                    <img ng-src=\\\"{{(item.mainImageUrl? item.mainImageUrl: '../../img/building-placeholder.png')}}\\\" alt=\\\"{{item.name}}\\\" ng-onload=\\\"$ctrl.imageLoad()\\\"\\r\\n                                    />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-7 column-areas\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-12\\\">\\r\\n                                        <h3 class=\\\"text-success\\\">{{item.totalRentableArea | shortNumber}} m<sup>2</sup></h3>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <small class=\\\"stats-label\\\">Occupied</small>\\r\\n                                        <h5>{{item.occupancy | shortNumber}} m<sup>2</sup></h5>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-6\\\">\\r\\n                                        <small class=\\\"stats-label\\\">Vacancy</small>\\r\\n                                        <h5>{{item.vacancy | shortNumber}} m<sup>2</sup></h5>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"progress full progress-small\\\">\\r\\n                                        <div ng-style=\\\"{'width': item.occupancy/item.totalRentableArea*100 + '%'}\\\" aria-valuemax=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuenow=\\\"{{item.occupancy/item.totalRentableArea*100}}\\\" role=\\\"progressbar\\\" class=\\\" progress-bar progress-bar-success\\\">\\r\\n                                            <span class=\\\"sr-only\\\">{{item.occupancy/item.totalRentableArea*100}}% Complete</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <h3>\\r\\n                            <a ui-sref=\\\"asset-stats-stacking-plan({id: item.id})\\\">\\r\\n                                {{item.name}}\\r\\n                            </a>\\r\\n                        </h3>\\r\\n                        <div class=\\\"small text-muted font-bold m-b-xs\\\">\\r\\n                            {{item.street}} {{item.streetAddress}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-footer contact-footer\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6 border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('clients.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">{{item.tenantsNumber}}</strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.spaces.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">{{item.spacesNumber}}</strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row page-loader-container\\\" ng-hide=\\\"$ctrl.loadedImages[$ctrl.page]\\\">\\r\\n        <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row text-right\\\">\\r\\n        <span ng-if=\\\"$ctrl.isMore\\\" class=\\\"animate-if\\\">\\r\\n            <button class=\\\"btn\\\" ng-click=\\\"$ctrl.loadMore()\\\">Load More...</button>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" ng-if=\\\"!$ctrl.assets || $ctrl.assetsLength === 0\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-1\\\">\\r\\n            No data.\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/asset-stats.template.html\n// module id = 652\n// module chunks = 0","module.exports = \" <div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') }]\\\" title=\\\"{{Messages('assets.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div class=\\\"block block-content content-items\\\">\\r\\n    <div class=\\\"row\\\" ng-repeat=\\\"row in $ctrl.assets\\\">\\r\\n        <div class=\\\"col-lg-3\\\" ng-repeat=\\\"item in row\\\" animate-panel child=\\\"asset-panel\\\">\\r\\n            <div class=\\\"asset-panel-2\\\">\\r\\n                <div class=\\\"hpanel\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <div\\r\\n                            class=\\\"assets-stats-image\\\"\\r\\n                            style=\\\"background-image: url({{item.mainImageUrl ? item.mainImageUrl: '../../img/building-placeholder.png'}})\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <h3>\\r\\n                            <a ui-sref=\\\"asset-stats-stacking-plan({id: item.id})\\\">\\r\\n                                {{item.name}}\\r\\n                            </a>\\r\\n                        </h3>\\r\\n                        <div class=\\\"small text-muted font-bold m-b-xs\\\">\\r\\n                            {{item.street}} {{item.streetAddress}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-footer assets-stats-footer\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"cell border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.total.rentable')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">\\r\\n                                        {{item.totalRentableArea.toFixed(2)}}\\r\\n                                        <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cell border-right\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.spaces.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">\\r\\n                                        {{item.vacancy.toFixed(2)}}\\r\\n                                        <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"cell\\\">\\r\\n                                <div class=\\\"asset-stat\\\">\\r\\n                                    <span class=\\\"title\\\">{{Messages('assets.spaces.title')}}: </span>\\r\\n                                    <strong class=\\\"small\\\">\\r\\n                                        {{item.occupancy.toFixed(2)}}\\r\\n                                        <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                    </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row page-loader-container\\\" ng-if=\\\"$ctrl.isMore\\\">\\r\\n        <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row text-right\\\">\\r\\n        <span ng-if=\\\"$ctrl.isMore\\\" class=\\\"animate-if\\\">\\r\\n            <button class=\\\"btn\\\" ng-click=\\\"$ctrl.loadMore()\\\">Load More...</button>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" ng-if=\\\"!$ctrl.assets || $ctrl.assetsLength === 0\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-1\\\">\\r\\n            No data.\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/asset-stats-2.template.html\n// module id = 653\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') } , {'title': $ctrl.asset.name} , {'title': Messages('assets.spaces.title')}]\\\" title=\\\"{{Messages('assets.spaces.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel spaces-filter\\\">\\r\\n        <div class=\\\"panel-heading hbuilt\\\">\\r\\n            <div panel-tools></div>\\r\\n            {{Messages('assets.spaces.filter.status.title')}}\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-12\\\">\\r\\n                    <ul class=\\\"nav nav-pills spaces-status\\\">\\r\\n                        <li class=\\\"spaces-filter-status-item\\\" ng-repeat=\\\"status in statuses\\\" role=\\\"presentation\\\" ng-class=\\\"selectedStatus.id === status.id ? 'active' : ''\\\">\\r\\n                            <input ng-if=\\\"status.id === 'custom'\\\" type=\\\"text\\\" id=\\\"spaces-filter-daterangepicker\\\" />\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.selectStatus($event, status)\\\">\\r\\n                                <span ng-if=\\\"status.id !== 'custom' || !customAvailableFrom && !customAvailableTo\\\">\\r\\n                                    {{ status.name }}\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id != 'custom' && status.label !== undefined\\\" class=\\\"badge\\\">\\r\\n                                    {{ status.label }}\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id === 'custom' && customAvailableFrom && customAvailableTo\\\">\\r\\n                                    <span ng-if=\\\"customAvailableFrom !== customAvailableTo\\\">{{customAvailableFrom}} - {{customAvailableTo}}</span>\\r\\n                                    <span ng-if=\\\"customAvailableFrom === customAvailableTo\\\">{{customAvailableFrom}}</span>\\r\\n                                </span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"spaces-status-no-focus\\\">\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.showExtraFilters()\\\" class=\\\"no-outline\\\">\\r\\n                                <i class=\\\"fa fa-filter\\\"></i>\\r\\n                                {{Messages('assets.spaces.filter.extra')}}\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <!--<li class=\\\"spaces-status-no-focus\\\">-->\\r\\n                            <!--<a href=\\\"#\\\" class=\\\"no-outline\\\">-->\\r\\n                                <!--<i class=\\\"fa fa-star-o\\\"></i>-->\\r\\n                                <!--{{Messages('assets.spaces.filter.favorites')}}-->\\r\\n                                <!--<i class=\\\"caret\\\"></i>-->\\r\\n                            <!--</a>-->\\r\\n                        <!--</li>-->\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div ng-if=\\\"extraFilters.length\\\" class=\\\"m-t-l\\\">\\r\\n                <div ng-repeat=\\\"item in extraFilters\\\" class=\\\"space-filter-item\\\">\\r\\n                    <span ng-if=\\\"item.name\\\">{{item.name}}: </span>\\r\\n                    <strong ng-bind-html=\\\"item.text\\\" />\\r\\n                    <i class=\\\"fa fa-times\\\" ng-click=\\\"$ctrl.extraFilterRemoveItem(item)\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\" infinite-scroll=\\\"$ctrl.loadMoreItems()\\\" infinite-scroll-disabled=\\\"load_more || disable_infinite_scrolling\\\">\\r\\n            <div ng-if=\\\"!greedData.length && !update\\\" class=\\\"text-center\\\">\\r\\n                {{Messages('assets.spaces.filter.empty')}}\\r\\n            </div>\\r\\n            <table ng-if=\\\"greedData.length\\\" cellpadding=\\\"1\\\" cellspacing=\\\"1\\\" class=\\\"table table-striped table-bordered table-hover dataTable no-footer spaces-filter-grid\\\" id=\\\"filtered-spaces-grid\\\">\\r\\n                <colgroup>\\r\\n                    <col width=\\\"5%\\\">\\r\\n                    <col width=\\\"10%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"13%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                </colgroup>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('unit')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.unit')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'unit'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('tower')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.tower')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'tower'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('floor')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.floor')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'floor'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('area')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.rentable_area')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'area'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('type')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.type')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'type'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('price')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.asking_price')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'price'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.in_place_rent')}}\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('status')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.status')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'status'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'status' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'status' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('availability')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.spaces.filter.availability')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'availability'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'availability' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'availability' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr ng-repeat=\\\"item in greedData\\\" ng-click=\\\"$ctrl.showSpaceInfo($event, item)\\\">\\r\\n                    <td class=\\\"text-right\\\">{{item.number}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{item.towerName}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{item.floorName}}</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.rentableArea.toFixed(2)}} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">{{$ctrl.getOfficeType(item.type)}}</td>\\r\\n                    <td ng-if=\\\"item.minAskingPrice !== null && item.maxAskingPrice !== null\\\" class=\\\"text-right\\\">\\r\\n                        {{item.minAskingPrice.toFixed(2)}} - {{item.maxAskingPrice.toFixed(2)}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td ng-if=\\\"!item.minAskingPrice && !item.maxAskingPrice\\\" class=\\\"text-right\\\">--</td>\\r\\n                    <td ng-if=\\\"item.contract\\\" class=\\\"text-right\\\">\\r\\n                        {{item.contract && item.contract.inPlaceRent.toFixed(2)}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td ng-if=\\\"!item.contract\\\" class=\\\"text-right\\\">--</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.contract ? Messages('assets.spaces.filter.occupied') : Messages('assets.spaces.filter.vacant')}}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.contract &&  item.contract.endsAt ? $ctrl.getParsedDate(item.contract.endsAt) : Messages('assets.spaces.filter.immediately')}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div ng-if=\\\"(!greedData.length && update) || load_more\\\" class=\\\"text-center\\\">\\r\\n                <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n            </div>\\r\\n            <div ng-if=\\\"update\\\" class=\\\"blocker spaces-filter-grid-blocker\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/asset-stat-spaces.template.html\n// module id = 654\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') } , {'title': $ctrl.asset.name} , {'title': Messages('assets.tenants.title')}]\\\" title=\\\"{{Messages('assets.tenants.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel spaces-filter\\\">\\r\\n        <div class=\\\"panel-heading hbuilt\\\">\\r\\n            <div panel-tools></div>\\r\\n            {{Messages('assets.tenants.filter.quick.title')}}\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-12\\\">\\r\\n                    <ul class=\\\"nav nav-pills spaces-status\\\">\\r\\n                        <li class=\\\"spaces-filter-status-item\\\" ng-repeat=\\\"status in statuses\\\" role=\\\"presentation\\\" ng-class=\\\"selectedStatus.id === status.id ? 'active' : ''\\\">\\r\\n                            <input ng-if=\\\"status.id === 'custom'\\\" type=\\\"text\\\" id=\\\"spaces-filter-daterangepicker\\\" />\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.selectStatus($event, status)\\\">\\r\\n                                <span ng-if=\\\"status.id !== 'custom' || !customExpirationFrom && !customExpirationTo\\\">\\r\\n                                    {{ status.name }}\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id !== 'custom' && status.id !== 'expired' && status.label !== undefined\\\" class=\\\"badge\\\">\\r\\n                                    {{ status.label }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                </span>\\r\\n                                <span ng-if=\\\"status.id === 'custom' && customExpirationFrom && customExpirationTo\\\">\\r\\n                                    <span ng-if=\\\"customExpirationFrom !== customExpirationTo\\\">{{customExpirationFrom}} - {{customExpirationTo}}</span>\\r\\n                                    <span ng-if=\\\"customExpirationFrom === customExpirationTo\\\">{{customExpirationFrom}}</span>\\r\\n                                </span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"spaces-status-no-focus\\\">\\r\\n                            <a href=\\\"#\\\" ng-click=\\\"$ctrl.showExtraFilters()\\\" class=\\\"no-outline\\\">\\r\\n                                <i class=\\\"fa fa-filter\\\"></i>\\r\\n                                {{Messages('assets.spaces.filter.extra')}}\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div ng-if=\\\"extraFilters.length\\\" class=\\\"m-t-l\\\">\\r\\n                <div ng-repeat=\\\"item in extraFilters\\\" class=\\\"space-filter-item\\\">\\r\\n                    <span ng-if=\\\"item.name\\\">{{item.name}}: </span>\\r\\n                    <strong ng-bind-html=\\\"item.text\\\" />\\r\\n                    <i class=\\\"fa fa-times\\\" ng-click=\\\"$ctrl.extraFilterRemoveItem(item)\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\" infinite-scroll=\\\"$ctrl.loadMoreItems()\\\" infinite-scroll-disabled=\\\"load_more || disable_infinite_scrolling\\\">\\r\\n            <div ng-if=\\\"!greedData.length && !update\\\" class=\\\"text-center\\\">\\r\\n                {{Messages('assets.spaces.filter.empty')}}\\r\\n            </div>\\r\\n            <table ng-if=\\\"greedData.length\\\" cellpadding=\\\"1\\\" cellspacing=\\\"1\\\" class=\\\"table table-striped table-bordered table-hover dataTable no-footer spaces-filter-grid\\\" id=\\\"filtered-spaces-grid\\\">\\r\\n                <colgroup>\\r\\n                    <col width=\\\"16%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"10%\\\">\\r\\n                    <col width=\\\"10%\\\">\\r\\n                    <col width=\\\"12%\\\">\\r\\n                    <col width=\\\"14%\\\">\\r\\n                    <col width=\\\"14%\\\">\\r\\n                </colgroup>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('name')\\\">\\r\\n                            {{Messages('assets.tenants.filter.tenant_name')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'unit'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'unit' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('startDate')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.lease_start_date')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'tower'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'tower' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('endDate')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.lease_end_date')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'floor'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'floor' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('totalArea')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.size')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'area'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'area' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('totalCost')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.total_rent')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'type'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'type' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th ng-click=\\\"$ctrl.sortGrid('avgMeterCost')\\\" class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.rent')}}&nbsp;&nbsp;\\r\\n                            <i ng-if=\\\"sortType !== 'price'\\\" class=\\\"fa fa-sort\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 1\\\" class=\\\"fa fa-sort-amount-desc\\\"></i>\\r\\n                            <i ng-if=\\\"sortType === 'price' && sortDirection === 0\\\" class=\\\"fa fa-sort-amount-asc\\\"></i>\\r\\n                        </th>\\r\\n                        <th class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.unit')}}\\r\\n                        </th>\\r\\n                        <th class=\\\"text-right\\\">\\r\\n                            {{Messages('assets.tenants.filter.towers')}}&nbsp;&nbsp;\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tr ng-repeat=\\\"item in greedData\\\" ng-click=\\\"$ctrl.showTenantInfo($event, item)\\\">\\r\\n                    <td>{{item.tenantName}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{$ctrl.getParsedDate(item.startDate)}}</td>\\r\\n                    <td class=\\\"text-right\\\">{{$ctrl.getParsedDate(item.endDate)}}</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.totalArea.toFixed(2)}} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">{{item.totalRentCost.toFixed(2)}} €</td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        {{item.averageMeterCost.toFixed(2)}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                        <span ng-if=\\\"item.spaces.length > 1\\\" class=\\\"tenants-avg-indicator\\\">\\r\\n                            AVG\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <a href=\\\"#\\\" ng-repeat=\\\"(key, space) in item.spaces\\\" ng-if=\\\"key < 3\\\" ng-click=\\\"$ctrl.showSpaceInfo(space)\\\">\\r\\n                            [{{space.number}}]\\r\\n                        </a>\\r\\n                        <span ng-if=\\\"item.spaces.length > 3\\\" class=\\\"tenants-additional-units-indicator\\\">\\r\\n                            +{{item.spaces.length - 3}}\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <span ng-repeat=\\\"(key, towerName) in $ctrl.getUniqueSpacesTowers(item.spaces)\\\" ng-if=\\\"key < 3\\\">\\r\\n                            [{{towerName}}]\\r\\n                        </span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div ng-if=\\\"(!greedData.length && update) || load_more\\\" class=\\\"text-center\\\">\\r\\n                <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n            </div>\\r\\n            <div ng-if=\\\"update\\\" class=\\\"blocker spaces-filter-grid-blocker\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/tenants/asset-stat-tenants.template.html\n// module id = 655\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'asset-stats', 'title': Messages('assets.title') } , {'title': $ctrl.asset.name} , {'title': Messages('stacking-plan.title')}]\\\" title=\\\"{{Messages('stacking-plan.title')}}\\\"></breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\" id=\\\"plan-page-wrap\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <ul class=\\\"plan-tabs\\\" data-type=\\\"actual\\\" ng-if=\\\"!isTabsLoadingState && !noStackingPlan\\\">\\r\\n            <li class=\\\"view-tab pull-right\\\" data-type=\\\"actual\\\">\\r\\n                <i class=\\\"fa fa-signal\\\"></i> {{ Messages('stacking-plan.view.actual') }}\\r\\n                <a href=\\\"#\\\" data-type=\\\"actual\\\" ng-click=\\\"$ctrl.viewChanged($event)\\\" class=\\\"blocker\\\"></a>\\r\\n            </li>\\r\\n            <li class=\\\"view-tab pull-right active\\\" data-type=\\\"normalized\\\">\\r\\n                <i class=\\\"fa fa-list\\\"></i> {{ Messages('stacking-plan.view.normalized') }}\\r\\n                <a href=\\\"#\\\" data-type=\\\"normalized\\\" ng-click=\\\"$ctrl.viewChanged($event)\\\" class=\\\"blocker\\\"></a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav nav-tabs\\\" id=\\\"tabs\\\" role=\\\"tablist\\\" ng-if=\\\"!isTabsLoadingState && !noStackingPlan\\\">\\r\\n            <li ng-repeat=\\\"tab in tabs\\\" ng-class=\\\"tabs.indexOf(tab) === 0 ? 'active' : ''\\\">\\r\\n                <a href=\\\"#content\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\" ng-click=\\\"$ctrl.tabSelected($event, tab)\\\">\\r\\n                    {{ tab.name }}\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <div class=\\\"tab-pane active\\\" id=\\\"content\\\" role=\\\"tabpanel\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <!--\\r\\n                    <div class=\\\"col-md-3 plan-scroll-panel\\\">\\r\\n                        <div id=\\\"plan-scroll-wrap-overflow\\\">\\r\\n                            <div id=\\\"plan-scroll-wrap\\\">\\r\\n                                <div id=\\\"plan-scroll-cont\\\" ng-if=\\\"!isLoadingState && !noStackingPlan\\\">\\r\\n                                    <div class=\\\"plan-scroll-cont-item\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                        <div class=\\\"plan-scroll-item-table-wrap\\\" ng-style=\\\"{width: floor.width}\\\">\\r\\n                                            <table>\\r\\n                                                <tr>\\r\\n                                                    <td\\r\\n                                                        ng-repeat=\\\"space in floor.spaces\\\"\\r\\n                                                        class=\\\"plan-scroll-space\\\" ng-class=\\\"!space.tenantId ? ' plan-scroll-space-free' : ''\\\"\\r\\n                                                        ng-style=\\\"{width: space.weight + '%'}\\\"\\r\\n                                                    ></td>\\r\\n                                                    <td ng-if=\\\"floor.spaces.length === 0\\\" class=\\\"plan-scroll-space plan-scroll-space-empty\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div id=\\\"plan-scroll-blocker\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>-->\\r\\n                    <div class=\\\"col-md-1 stacking-plan-legend\\\">\\r\\n                        <div>\\r\\n                            <span class=\\\"vacant-legend\\\"></span>\\r\\n                            <span class=\\\"vacant-title\\\">{{ Messages('stacking-plan.legend.vacant') }}</span>\\r\\n                        </div>\\r\\n                        <div class=\\\"lease-expiration-title\\\">\\r\\n                            {{ Messages('stacking-plan.legend.lease.expiration') }}\\r\\n                        </div>\\r\\n                        <div ng-repeat=\\\"year in $ctrl.legendYears\\\" class=\\\"expiration-year-item\\\">\\r\\n                            <span class=\\\"expiration-year-legend\\\" ng-class=\\\"'year-'+year.index\\\"></span>\\r\\n                            <span class=\\\"expiration-year-title\\\">{{year.title}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <div id=\\\"plan-wrap-overflow\\\">\\r\\n                            <div id=\\\"plan-wrap\\\">\\r\\n                                <div ng-if=\\\"isLoadingState || isTabsLoadingState\\\" class=\\\"plan-loader\\\">\\r\\n                                    <div class=\\\"edge\\\"></div>\\r\\n                                    <div class=\\\"cont\\\">\\r\\n                                        <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"plan-cont\\\" ng-if=\\\"!isLoadingState && !noStackingPlan\\\">\\r\\n                                    <div class=\\\"plan-item\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                        <div class=\\\"floor-name-wrapper\\\">\\r\\n                                            <div class=\\\"floor-name\\\">{{ floor.floorName }}</div>\\r\\n                                            <div class=\\\"floor-space-total\\\">{{ floor.totalFloorArea | number:2 }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/></div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"plan-item-table-wrap\\\" ng-style=\\\"{width: floor.width}\\\">\\r\\n                                            <table class=\\\"plan-item-table\\\" >\\r\\n                                                <tr>\\r\\n                                                    <td\\r\\n                                                        ng-repeat=\\\"space in floor.spaces\\\"\\r\\n                                                        class=\\\"plan-item-space\\\" ng-class=\\\"!space.tenantId ? (description.spaceNumber != space.spaceNumber ? 'plan-item-space-free space-content-free': 'space-content-free space-selected')\\r\\n                                                        : (description == null ? 'space-content-'+space.leaseEndYearIndex \\r\\n                                                        : description.spaceNumber != space.spaceNumber? 'plan-item-space-free': 'space-selected')\\\"\\r\\n                                                        ng-style=\\\"{width: space.weight + '%'}\\\"\\r\\n                                                        ng-click=\\\"$ctrl.showSpaceDescription(space)\\\"\\r\\n                                                    >\\r\\n                                                        <div class=\\\"plan-item-space-cont\\\">\\r\\n                                                            <div class=\\\"space-cont-header\\\" ng-if=\\\"space.tenantId\\\">\\r\\n                                                                <div class=\\\"name\\\">\\r\\n                                                                    {{ space.tenantName }}\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"price\\\">\\r\\n                                                                    {{space.inPlaceRent}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"space-lease-expiration\\\" ng-if=\\\"space.tenantId\\\">\\r\\n                                                                {{ Messages('stacking-plan.expires') }}: {{space.leaseEndDate | date:'MM/dd/yyyy'}}\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"space-area\\\" ng-if=\\\"!space.tenantId\\\">\\r\\n                                                                {{ space.spaceArea | number:2 }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"space-lease-expiration-free\\\" ng-if=\\\"!space.tenantId\\\">&nbsp;</div>\\r\\n\\r\\n                                                            <div class=\\\"space-cont-footer\\\">\\r\\n                                                                <div class=\\\"unit\\\">\\r\\n                                                                    <span class=\\\"space-unit-title\\\">\\r\\n                                                                        {{Messages('stacking-plan.unit')}}\\r\\n                                                                    </span>\\r\\n                                                                    <br>\\r\\n                                                                    <span class=\\\"space-unit-legend\\\">\\r\\n                                                                        {{space.spaceNumber}}\\r\\n                                                                    </span>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"space-area\\\" ng-if=\\\"space.tenantId\\\">\\r\\n                                                                    {{ space.spaceArea | number:2 }} <span ng-bind-html=\\\"Messages('square.meter')\\\"/>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td ng-if=\\\"floor.spaces.length === 0\\\" class=\\\"plan-item-space plan-item-space-empty\\\">\\r\\n                                                        <div class=\\\"plan-item-space-cont\\\">{{Messages('nospaces')}}</div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div ng-if=\\\"noStackingPlan\\\" class=\\\"plan-empty\\\">\\r\\n                                    <div class=\\\"edge\\\"></div>\\r\\n                                    <div class=\\\"cont\\\">\\r\\n                                        {{ noStackingPlanMessage || Messages('stacking-plan.empty') }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3 plan-description-panel\\\" ng-if=\\\"!isLoadingState && !isTabsLoadingState\\\">\\r\\n                        <div animate-panel child=\\\"hpanel\\\" ng-if=\\\"details\\\">\\r\\n                            <div class=\\\"hpanel\\\">\\r\\n                                <div class=\\\"panel-heading hbuilt\\\">\\r\\n                                    <div class=\\\"panel-tools\\\">\\r\\n                                        <a class=\\\"closebox\\\" ng-click=\\\"$ctrl.hideSpaceDescription()\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n                                    </div>\\r\\n                                    {{ Messages('stacking-plan.space.details') }}\\r\\n                                </div>\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div class=\\\"row plan-descr space-details\\\">\\r\\n                                        <div class=\\\"space-title pull-left\\\">\\r\\n                                            <h4>{{ details.spaceTypeString }}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"space-info\\\">\\r\\n                                            <h3 class=\\\"space-number\\\">{{ details.spaceNumber }}</h3>\\r\\n                                            <h3 class=\\\"space-rentable-area\\\">{{ details.spaceArea | number:2}} <span ng-bind-html=\\\"Messages('square.meter')\\\"/></h3>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"panel-body\\\" ng-if=\\\"details.tenantName\\\">\\r\\n                                    <div class=\\\"row plan-descr tenant-details\\\">\\r\\n                                        <div class=\\\"tenant-title pull-left\\\">\\r\\n                                            <h4 ng-class=\\\"'industry' + details.industryId\\\">{{ details.industry }}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"tenant-info\\\">\\r\\n                                            <h3 class=\\\"tenant-name\\\"><a ui-sref=\\\"client({id: details.tenantId})\\\">{{ details.tenantName }}</a></h3>\\r\\n                                            <span class=\\\"font-bold no-margins\\\">\\r\\n                                                {{Messages('stacking-plan.expires.2')}} <span am-time-ago=\\\"details.leaseEndDate\\\"></span>\\r\\n                                            </span>\\r\\n                                            <div class=\\\"progress full progress-small\\\">\\r\\n                                                <div ng-style=\\\"{'width': details.expires + '%'}\\\" aria-valuemax=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuenow=\\\"{{details.expires}}\\\" role=\\\"progressbar\\\" class=\\\" progress-bar progress-bar-success\\\">\\r\\n                                                    <span class=\\\"sr-only\\\">{{details.expires}}% Complete</span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-xs-6\\\">\\r\\n                                                    <small class=\\\"stats-label\\\">{{Messages('stacking.plan.details.lease.start')}}</small>\\r\\n                                                    <h4>{{ details.leaseStartDate | date : 'dd/MM/yyyy'}}</h4>\\r\\n                                                </div>\\r\\n\\r\\n                                            <div class=\\\"col-xs-6\\\">\\r\\n                                                <small class=\\\"stats-label\\\">{{Messages('stacking.plan.details.lease.end')}}</small>\\r\\n                                                <h4>{{ description.leaseEndDate | date : 'dd/MM/yyyy'}}</h4>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"panel-body\\\" ng-if=\\\"description.tenantName\\\">\\r\\n                                <div class=\\\"row plan-descr rent-details\\\">\\r\\n                                    <div>\\r\\n                                        <small class=\\\"stats-label\\\">{{Messages('stacking.plan.details.cost.totalmonth')}}</small>\\r\\n                                        <h1 class=\\\"text-success\\\">€ {{ description.totalCosts | number:2}}</h1> \\r\\n                                        <h3>{{ description.inPlaceRent | number:2}} €/<span ng-bind-html=\\\"Messages('square.meter')\\\"/></h4>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.netrent')}}</small>\\r\\n                                            <h4>€ {{ description.netRent | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.additional')}}</small>\\r\\n                                            <h4>€ {{ description.additionalCosts | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.other')}}</small>\\r\\n                                            <h4>€ {{ description.otherCosts | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xs-6\\\">\\r\\n                                            <small class=\\\"stat-label\\\">{{Messages('stacking.plan.details.cost.vat')}}</small>\\r\\n                                            <h4>€ {{ description.vatCosts | number:2}}</h4>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/asset-stat-stacking-plan.template.html\n// module id = 656\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'users', 'title': Messages('users.title') }]\\\" title=\\\"{{Messages('users.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'user'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.template.html\n// module id = 657\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'users', 'title': Messages('users.title') }, { 'title': $ctrl.userObject.displayName }]\\\" title=\\\"{{$ctrl.userObject.displayName}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"hpanel\\\" ng-class=\\\"role.id === 1 ? 'hred' : 'hgreen'\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\" ng-if=\\\"$ctrl.userObject.id !== $ctrl.currentUser.id\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editUser()\\\" title=\\\"{{Messages('users.edit')}}\\\"></i>\\r\\n                        <i class=\\\"fa fa-key btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.changePassword()\\\" title=\\\"{{Messages('users.changePassword')}}\\\"></i>\\r\\n                        <i class=\\\"fa btn btn-default btn-xs\\\" ng-class=\\\"isArchived ? 'fa-undo' : 'fa-trash-o'\\\" title=\\\"{{isArchived ? Messages('users.activate') : Messages('users.archive')}}\\\" ng-click=\\\"$ctrl.archiveTrigger()\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"btn-group\\\" ng-if=\\\"$ctrl.userObject.id === $ctrl.currentUser.id\\\">\\r\\n                        <i class=\\\"fa fa-key btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.changePassword()\\\" title=\\\"{{Messages('users.changePassword')}}\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"user-locale-placeholder\\\">\\r\\n                        <span class=\\\"user-locale-name\\\">{{locale.localeName}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"user-avatar\\\">\\r\\n                    <img alt=\\\"\\\" class=\\\"img-circle m-b m-t-md\\\" src=\\\"img/user.svg\\\" />\\r\\n                </div>\\r\\n                <h3 class=\\\"user-name\\\">\\r\\n                    {{$ctrl.userObject.displayName}}\\r\\n                    <span ng-if=\\\"isArchived\\\" class=\\\"small archived-marker\\\">{{Messages('users.archived')}}</span>\\r\\n                </h3>\\r\\n                <div class=\\\"user-status\\\" ng-class=\\\"role.id === 1 ? 'administrator' : 'user'\\\">\\r\\n                    {{role.name}}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel-footer contact-footer\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"contact-stat\\\">\\r\\n                            <span>{{Messages('users.projects')}}: </span>\\r\\n                            <strong>200</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"contact-stat\\\">\\r\\n                            <span>{{Messages('users.messages')}}: </span>\\r\\n                            <strong>300</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"contact-stat\\\">\\r\\n                            <span>{{Messages('users.views')}}: </span>\\r\\n                            <strong>400</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"fish-container\\\">\\r\\n                    <i class=\\\"edge\\\"></i>\\r\\n                    <span class=\\\"cont\\\">{{Messages('users.additional.container')}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/user.template.html\n// module id = 658\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'assets', 'title': Messages('assets.title') }]\\\" title=\\\"{{Messages('assets.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'asset'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div class=\\\"hpanel\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/assets.template.html\n// module id = 659\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'assets', 'title': Messages('assets.title') }, { 'title': $ctrl.asset.name }]\\\" title=\\\"{{$ctrl.asset.name}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"hpanel hblue\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editAsset()\\\" title=\\\"{{Messages('assets.edit')}}\\\"></i>\\r\\n                        <i class=\\\"fa btn btn-default btn-xs\\\" ng-class=\\\"isArchived ? 'fa-undo' : 'fa-trash-o'\\\" title=\\\"{{isArchived ? Messages('assets.activate') : Messages('assets.archive')}}\\\" ng-click=\\\"$ctrl.archiveTrigger()\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <h2 class=\\\"asset-name\\\">\\r\\n                    {{ $ctrl.asset.name }}\\r\\n                    <span ng-if=\\\"isArchived\\\" class=\\\"small archived-marker\\\">{{Messages('assets.archived')}}</span>\\r\\n                </h2>\\r\\n                <div class=\\\"asset-address\\\">{{ $ctrl.asset.address }}</div>\\r\\n                <p class=\\\"asset-description\\\">{{ $ctrl.asset.description }}</p>\\r\\n            </div>\\r\\n            <ng-map class=\\\"asset-map\\\" center=\\\"52.520468, 13.407234\\\" zoom=\\\"11\\\"  zoom=\\\"11\\\" disable-default-u-i=\\\"true\\\" zoom-control=\\\"true\\\" scrollwheel=\\\"false\\\"></ng-map>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <table class=\\\"table table-bordered table-striped asset-editable\\\">\\r\\n                    <colgroup>\\r\\n                        <col width=\\\"40%\\\">\\r\\n                        <col width=\\\"60%\\\">\\r\\n                    </colgroup>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            {{ Messages('assets.broker') }}\\r\\n                            <p class=\\\"help-note\\\">{{ Messages('assets.broker.help') }}</p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <div class=\\\"popover-wrapper\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"editable editable-click\\\" editable-select=\\\"$ctrl.brokerId\\\" e-required e-ng-options=\\\"s.value as s.text for s in $ctrl.brokers\\\" onaftersave=\\\"$ctrl.saveUpdates()\\\">\\r\\n                                    {{ $ctrl.showBroker() }}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            {{ Messages('assets.brokerDatabaseRecordId') }}\\r\\n                            <p class=\\\"help-note\\\">{{ Messages('assets.brokerDatabaseRecordId.help') }}</p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <div class=\\\"popover-wrapper\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"editable editable-click\\\" editable-text=\\\"$ctrl.brokerDatabaseRecordId\\\" onbeforesave=\\\"$ctrl.brokerDatabaseRecordIdValidation($data)\\\" onaftersave=\\\"$ctrl.saveUpdates()\\\">\\r\\n                                    {{ $ctrl.brokerDatabaseRecordId || 'empty' }}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>{{ Messages('assets.notes') }}</td>\\r\\n                        <td>\\r\\n                            <div class=\\\"popover-wrapper\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"editable editable-click\\\" editable-textarea=\\\"$ctrl.notes\\\" onbeforesave=\\\"$ctrl.notesValidation($data)\\\" onaftersave=\\\"$ctrl.saveUpdates()\\\">\\r\\n                                    {{ $ctrl.notes || 'empty' }}\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"hpanel-title\\\">{{ Messages('assets.gallery.title') }}</div>\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <assetgallery images=\\\"$ctrl.asset.images\\\" update-image=\\\"updateImage\\\"></assetgallery>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\" id=\\\"myTabs\\\">\\r\\n                <li class=\\\"active\\\" role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#spaces\\\" id=\\\"spaces-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"spaces\\\" aria-expanded=\\\"true\\\" ng-click=\\\"$ctrl.tabGridsRefresh($event)\\\">\\r\\n                        {{ Messages('assets.spaces.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#floors\\\" id=\\\"floors-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"floors\\\" aria-expanded=\\\"false\\\" ng-click=\\\"$ctrl.tabGridsRefresh($event)\\\">\\r\\n                        {{ Messages('assets.floors.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#objects\\\" id=\\\"objects-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"objects\\\" aria-expanded=\\\"false\\\" ng-click=\\\"$ctrl.tabGridsRefresh($event)\\\">\\r\\n                        {{ Messages('assets.objects.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <div class=\\\"tab-content\\\">\\r\\n                <div id=\\\"spaces\\\" class=\\\"tab-pane active\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <spaces id=\\\"spaceSettings\\\" class=\\\"form-group\\\" asset=\\\"$ctrl.asset\\\" save-updates=\\\"saveUpdates\\\" need-update-data-sources=\\\"$ctrl.updateDataSources('spaces');\\\"></spaces>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"floors\\\" class=\\\"tab-pane\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <floor id=\\\"floorSettings\\\" class=\\\"form-group\\\" asset=\\\"$ctrl.asset\\\" save-updates=\\\"saveUpdates\\\" need-update-data-sources=\\\"$ctrl.updateDataSources('floors');\\\"></floor>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"objects\\\" class=\\\"tab-pane\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <object id=\\\"objectsSettings\\\" class=\\\"form-group\\\" asset=\\\"$ctrl.asset\\\" save-updates=\\\"saveUpdates\\\" need-update-data-sources=\\\"$ctrl.updateDataSources('objects');\\\"></object>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/asset.template.html\n// module id = 660\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{'path':'clients', 'title': Messages('clients.title')}]\\\" title=\\\"{{Messages('clients.title')}}\\\">\\r\\n        <navigation-create-items item=\\\"'client'\\\" class=\\\"pull-right\\\"></navigation-create-items>\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div child=\\\"hpanel\\\">\\r\\n    <div>\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-big\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div ng-if=\\\"$ctrl.selectedClient\\\">\\r\\n            {{Messages('clients.view.title')}}: {{$ctrl.selectedClient.name}} <br/>\\r\\n            {{Messages('clients.address')}}: {{$ctrl.selectedClient.address}} <br />\\r\\n            {{Messages('clients.representatives.title')}}: <br/>\\r\\n            <ul ng-repeat=\\\"rep in $ctrl.selectedClient.representatives\\\">\\r\\n               <li> {{rep.name}} : {{rep.email}} : {{rep.mobileNumber}} : {{rep.officeNumber}} </li>\\r\\n            </ul>\\r\\n            {{Messages('clients.view.notes')}}:\\r\\n            <pre>{{$ctrl.selectedClient.notes}}</pre>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/clients/clients.template.html\n// module id = 661\n// module chunks = 0","module.exports = \"<div child=\\\"hpanel\\\" id=\\\"plan-page-breadcrumb\\\">\\r\\n    <breadcrumb-panel states=\\\"[{ 'path':'clients', 'title': Messages('clients.title') }, { 'title': $ctrl.clientObject.name }]\\\" title=\\\"{{$ctrl.clientObject.name}}\\\">\\r\\n    </breadcrumb-panel>\\r\\n</div>\\r\\n<div class=\\\"row\\\" child=\\\"hpanel\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n        <div class=\\\"hpanel horange\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"pull-right text-right\\\">\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <i class=\\\"fa fa-pencil btn btn-default btn-xs\\\" ng-click=\\\"$ctrl.editClient()\\\" title=\\\"{{Messages('clients.edit')}}\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"client-avatar\\\">\\r\\n                    <img alt=\\\"\\\" class=\\\"img-circle m-b m-t-md\\\" src=\\\"img/user.svg\\\" />\\r\\n                </div>\\r\\n                <h3 class=\\\"client-name\\\">\\r\\n                    {{$ctrl.clientObject.name}}\\r\\n                </h3>\\r\\n                <div class=\\\"client-industry\\\" ng-class=\\\"'industry'+$ctrl.clientObject.industryId\\\">\\r\\n                    {{$ctrl.clientObject.industry}}\\r\\n                </div>\\r\\n                <dl>\\r\\n                    <dt ng-if=\\\"$ctrl.clientObject.shortName.length > 0\\\">{{ Messages('clients.shortName.formLabel') }}</dt>\\r\\n                    <dd ng-if=\\\"$ctrl.clientObject.shortName.length > 0\\\">{{$ctrl.clientObject.shortName}}</dd>\\r\\n                </dl>\\r\\n                <div class=\\\"client-address\\\" ng-if=\\\"$ctrl.clientObject.address.length > 0\\\">\\r\\n                    {{$ctrl.clientObject.address}}\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n            <ng-map class=\\\"client-map\\\" center=\\\"52.520468, 13.407234\\\" zoom=\\\"11\\\" disable-default-u-i=\\\"true\\\" zoom-control=\\\"true\\\" scrollwheel=\\\"false\\\"></ng-map>\\r\\n            <div class=\\\"panel-body\\\" ng-if=\\\"$ctrl.clientObject.notes.length > 0\\\">\\r\\n                {{$ctrl.clientObject.notes}}\\r\\n            </div>\\r\\n            <!--<div class=\\\"panel-footer\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"client-stat\\\">\\r\\n                            <span>Projects: </span>\\r\\n                            <strong>200</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4 border-right\\\">\\r\\n                        <div class=\\\"client-stat\\\">\\r\\n                            <span>Messages: </span>\\r\\n                            <strong>300</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"client-stat\\\">\\r\\n                            <span>Views: </span>\\r\\n                            <strong>400</strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"hpanel\\\">\\r\\n            <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n                <li class=\\\"active\\\" role=\\\"presentation\\\">\\r\\n                    <a href=\\\"#representatives\\\" id=\\\"spaces-tab\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"representatives\\\" aria-expanded=\\\"true\\\" onclick=\\\"return false;\\\">\\r\\n                        {{ Messages('clients.representatives.title') }}\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <div class=\\\"tab-content\\\">\\r\\n                <div id=\\\"representatives\\\" class=\\\"tab-pane active\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <representatives client=\\\"$ctrl.clientObject\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/clients/client.template.html\n// module id = 662\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- header -->\\r\\n    <div class=\\\"region region-header text-center\\\">\\r\\n        <div class=\\\"site-logo\\\">\\r\\n            <a href=\\\"\\\"><img src=\\\"/img/logo.png\\\" alt=\\\"Tower 360 Logo\\\"></a>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h1>Big Data Platform For Commercial Real Estate</h1>\\r\\n        <h3>Log in with you details to access tower360.co</h3>\\r\\n    </div>\\r\\n    <!-- /header -->\\r\\n\\r\\n    <!-- content -->\\r\\n    <div ui-view>\\r\\n    </div>\\r\\n    <!-- /content -->\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/public.html\n// module id = 663\n// module chunks = 0","module.exports = \"<div class=\\\"region region-content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-login-wrapper\\\">\\r\\n            <div class=\\\"well well-lg\\\">\\r\\n                <form class=\\\"form form-login\\\" name=\\\"form\\\" novalidate>\\r\\n                    <div ng-if=\\\"$ctrl.error\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\"> {{$ctrl.error}} </div>\\r\\n                    <div class=\\\"form-group\\\" ng-class=\\\"{ 'has-error' : form.email.$invalid && (form.$submitted || form.email.$touched)}\\\">\\r\\n                        <label for=\\\"inputEmail\\\">Email</label>\\r\\n                        <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" name=\\\"email\\\" required=\\\"\\\" autofocus=\\\"\\\" ng-model=\\\"$ctrl.signInData.userName\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" ng-class=\\\"{ 'has-error' : form.password.$invalid && (form.$submitted || form.password.$touched)}\\\">\\r\\n                        <label for=\\\"inputPassword\\\">Password</label>\\r\\n                        <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"password\\\" required=\\\"\\\" ng-model=\\\"$ctrl.signInData.password\\\">\\r\\n                        <p class=\\\"help-block small\\\"><a href=\\\"\\\">Forgot your password?</a></p>\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-lg btn-primary btn-block\\\" ng-click=\\\"$ctrl.signIn()\\\" ng-disabled=\\\"form.$invalid\\\">Log in</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login-template.html\n// module id = 664\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- header -->\\r\\n    <div class=\\\"region region-header text-center\\\">\\r\\n        <div class=\\\"site-logo\\\">\\r\\n            <a href=\\\"\\\"><img src=\\\"/img/logo.png\\\" alt=\\\"Tower 360 Logo\\\"></a>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h1>Commercial Leasing Management Platform</h1>\\r\\n    </div>\\r\\n    <!-- /header -->\\r\\n\\r\\n    <!-- content -->\\r\\n    <div ui-view>\\r\\n        <div class=\\\"region region-content\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-login-wrapper\\\">\\r\\n                    <div class=\\\"well well-lg\\\">\\r\\n                        <form class=\\\"form-horizontal\\\" role=\\\"form\\\" name=\\\"settingsForm\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-name\\\" >{{Messages('registration.username')}}</label>\\r\\n                                    <div id=\\\"field-name\\\" dx-text-box=\\\"$ctrl.nameSettings\\\" dx-validator=\\\"$ctrl.nameValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-displayName\\\" >{{Messages('registration.displayName')}}</label>\\r\\n                                    <div id=\\\"field-displayName\\\" dx-text-box=\\\"$ctrl.displayNameSettings\\\" dx-validator=\\\"$ctrl.displayNameValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-password\\\" >{{Messages('registration.password')}}</label>\\r\\n                                    <div id=\\\"field-password\\\" dx-text-box=\\\"$ctrl.passwordSettings\\\" dx-validator=\\\"$ctrl.passwordValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-lg-12\\\">\\r\\n                                    <label for=\\\"field-confirmPassword\\\" >{{Messages('registration.confirmPassword')}}</label>\\r\\n                                    <div id=\\\"field-confirmPassword\\\" dx-text-box=\\\"$ctrl.confirmPasswordSettings\\\" dx-validator=\\\"$ctrl.confirmPasswordValidationRules\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <div dx-button=\\\"$ctrl.saveSettingsBtnConfig\\\" ng-style=\\\"{opacity: $ctrl.saveInProgress ? 100 : inherit}\\\">\\r\\n                                    <div data-options=\\\"dxTemplate: { name:'saveButtonWithLoadIndicator' }\\\">\\r\\n                                        <span dx-load-indicator=\\\"{ bindingOptions: {visible: '$ctrl.saveInProgress'} }\\\"></span>\\r\\n                                        <span class=\\\"dx-button-text\\\" ng-style=\\\"{opacity: $ctrl.saveInProgress ? 100 : inherit}\\\">{{$ctrl.saveInProgress?Messages('registration.saving'):Messages('registration.submit')}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div dx-button=\\\"$ctrl.cancelSettingsBtnConfig\\\"></div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /content -->\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.template.html\n// module id = 665\n// module chunks = 0","module.exports = \"Forbidden\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/errors/forbidden.template.html\n// module id = 666\n// module chunks = 0","module.exports = \"Not found\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/errors/notfound.template.html\n// module id = 667\n// module chunks = 0","/*@ngInject*/\r\nexport default function interceptors($httpProvider) {\r\n     $httpProvider.interceptors.push('AuthInterceptorService');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.interceptors.js","import Messages from './messages';\r\nimport ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport {LocaleId, updateLocale} from './app.localization';\r\n\r\n/*@ngInject*/\r\nexport default function run($rootScope, SecurityService) {\r\n    SecurityService.fillAuthData();\r\n    $rootScope.Messages = Messages;\r\n\r\n    // reset DevExtreme validation engine as it may be considered 'singleton'\r\n    $rootScope.$on('$stateChangeStart', function(){ \r\n        ValidationEngine.initGroups();\r\n\r\n        SecurityService.getUserInfo().then(result => { \r\n            updateLocale(result.localeId);\r\n        });\r\n    });\r\n\r\n    var setBodySmall = function() {\r\n        if ($(window).outerWidth() < 769) {\r\n            $('body').addClass('page-small');\r\n        } else {\r\n            $('body').removeClass('page-small');\r\n            $('body').removeClass('show-sidebar');\r\n        }\r\n    }\r\n\r\n    $(document).ready(function () {\r\n        setBodySmall();\r\n    });\r\n\r\n    $(window).bind(\"resize click\", function () {\r\n        setBodySmall();\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.run.js","import en_us_locale from './messages_en-us';\r\nimport de_ge_locale from './messages_de-ge';\r\nimport { LocaleId, updateLocale } from './app.localization';\r\n\r\n/*@ngInject*/\r\nexport default function Messages(messageId){\r\n    var locale =  en_us_locale;\r\n    var localeId = LocaleId;\r\n    if(localeId === 2) {\r\n        locale = de_ge_locale;\r\n    }\r\n\r\n    return locale(messageId);\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages.js","export default function Messages(messageId) {\r\n    var messages = {\r\n        // common\r\n        'confirmation': 'Are you sure?',\r\n        'actions': 'Actions',\r\n        'administrator': 'Administrator',\r\n        'broker': 'Broker',\r\n\r\n        'square.meter': 'm<sup>2</sup>',\r\n\r\n        'validation.required': 'The field is required',\r\n        'validation.email': 'Enter a valid email here',\r\n        'validation.maxLength': 'Too much characters',\r\n        'validation.phone': 'Your phone must have \"(555)555-5555\" format!',\r\n        'validation.shortPassword' : 'Password must have at least 6 characters',\r\n        'validation.passwordsNotMatch' : 'Password and confirmations must be same',\r\n\r\n        'country.germany': 'Germany',\r\n\r\n        // private\r\n        'state.unknown': 'Unknown',\r\n        'state.pending': 'Pending',\r\n        'state.active': 'Active',\r\n        'state.archived': 'Archived',\r\n\r\n        'mainheader.settings.product': 'Product Settings',\r\n        'mainheader.settings.notification': 'Notification Settings',\r\n        'mainheader.settings.account': 'Account Settings',\r\n        'mainheader.language': 'Language',\r\n        'mainheader.signout': 'Sign Out',\r\n\r\n        'sidebar.brokers': 'Asset Managers',\r\n        'sidebar.users': 'Users',\r\n        'sidebar.assets': 'Assets',\r\n        'sidebar.clients': 'Tenants',\r\n        'sidebar.spaces': 'Units',\r\n        'sidebar.stackingplan': 'Stacking plan',\r\n\r\n        'image.cropper.title': 'Upload an image',\r\n        'image.cropper.save': 'Save',\r\n        'image.cropper.saving': 'Saving',\r\n        'image.cropper.cancel': 'Cancel',\r\n        'image.cropper.addbutton': 'Upload',\r\n        'image.cropper.placeholder.empty': 'Drag and drop image here',\r\n\r\n        'brokers.new': 'Asset Manager',\r\n        'brokers.title': 'Asset Managers',\r\n        'brokers.title.general': 'General attributes',\r\n        'broker.info.title': 'Asset Manager Information',\r\n        'brokers.name': 'Display name',\r\n        'brokers.address': 'Official address',\r\n        'brokers.state': 'State',\r\n        'brokers.message.deleted': 'Asset Manager successfully archived',\r\n        'brokers.message.created': 'Asset Manager successfully created',\r\n        'brokers.message.updated': 'Asset Manager successfully updated',\r\n        'brokers.message.activated': 'Asset Manager successfully activated',\r\n        'brokers.placeholder.name': 'ex. Colliers International',\r\n        'brokers.placeholder.address': 'ex. Germany, Shoenstrasse 23, suite 115',\r\n        'brokers.save' : 'Save',\r\n        'brokers.cancel': 'Cancel',\r\n        'brokers.create': 'New',\r\n        'brokers.saving':'Saving',\r\n        'brokers.archive': 'Archive Asset Manager',\r\n        'brokers.archive.title': 'You are going to archive Asset Manager, their employees will not be able to use Tower360 anymore.',\r\n        'brokers.archive.confirmButton': 'Yes, archive it!',\r\n        'brokers.archived': 'Archived',\r\n        'brokers.activate': 'Activate Asset Manager',\r\n        'brokers.activate.title': 'You are going to activate Asset Manager, their employees will be able to use Tower360.',\r\n        'brokers.activate.confirmButton': 'Yes, activate it!',\r\n        'brokers.edit': 'Edit',\r\n        'brokers.edit.title': 'Edit Asset Manager',\r\n        'brokers.create.title': 'Create Asset Manager',\r\n        'brokers.projects': 'Projects',\r\n        'brokers.messages': 'Messages',\r\n        'brokers.views': 'Views',\r\n        'brokers.additional.container': 'Container for additional information',\r\n\r\n        'users.new': 'User',\r\n        'users.title': 'Users',\r\n        'users.title.general': 'General attributes',\r\n        'users.info.title': 'User Information',\r\n        'users.email': 'Email',\r\n        'users.displayname': 'Display name',\r\n        'users.state': 'State',\r\n        'users.locale': 'Locale',\r\n        'users.broker': 'Associate with',\r\n        'users.broker.help': 'Select Asset Manager where this person is working',\r\n        'users.role': 'Role in portal',\r\n        'users.role.help': 'Select role for new user',\r\n        'users.message.created': 'User successfully invited',\r\n        'users.message.updated': 'User successfully updated',\r\n        'users.message.archived': 'User successfully archived',\r\n        'users.message.activated': 'User successfully activated',\r\n        'users.placeholder.email': 'Email',\r\n        'users.placeholder.displayname': 'ex. Mathias Kohler',\r\n        'users.placeholder.currentPassword': 'Current Password',\r\n        'users.placeholder.newPassword': 'New Password',\r\n        'users.placeholder.confirmPassword': 'Confirm Password',\r\n        'users.images.add': 'Select image',\r\n        'users.invite': 'Invite',\r\n        'users.save': 'Save',\r\n        'users.saving': 'Saving',\r\n        'users.cancel': 'Cancel',\r\n        'users.create': 'Invite new user',\r\n        'users.archive': 'Archive user',\r\n        'users.archive.title': 'You are going to archive user, this user will not be able use Tower360 anymore.',\r\n        'users.archive.confirmButton': 'Yes, archive it!',\r\n        'users.archived': 'Archived',\r\n        'users.activate': 'Activate user',\r\n        'users.activate.title': 'You are going to activate user, this user will be able to user Tower360.',\r\n        'users.activate.confirmButton': 'Yes, activate it!',\r\n        'users.edit': 'Edit',\r\n        'users.edit.title': 'Edit user',\r\n        'users.changePassword': 'Change password',\r\n        'users.create.title': 'Create user',\r\n        'users.projects': 'Projects',\r\n        'users.messages': 'Messages',\r\n        'users.views': 'Views',\r\n        'users.additional.container': 'Container for additional information',\r\n        'users.changePassord.title' : 'Change Password',\r\n        'users.currentPassword': 'Current password',\r\n        'users.newPassword': 'New password',\r\n        'users.confirmPassword': 'Confirm password',\r\n        'users.changingPasswordBtn': 'Changing',\r\n        'users.changePasswordBtn': 'Change',\r\n        'users.changePassword.failed': 'We were not able to update your password, please try again later',\r\n        'users.changePassword.success': 'You password has been changed',\r\n\r\n        'assets.new': 'Asset',\r\n        'assets.add': 'Add asset',\r\n        'assets.edit': 'Edit asset',\r\n        'assets.title': 'Assets',\r\n        'assets.title.address': 'Address details',\r\n        'assets.title.other': 'Other',\r\n        'assets.name': 'Asset name',\r\n        'assets.state': 'State',\r\n        'assets.address': 'Address',\r\n        'assets.country': 'Country:',\r\n        'assets.city': 'City',\r\n        'assets.city.help': 'ex. Hamburg',\r\n        'assets.street': 'Street',\r\n        'assets.street.help': 'ex. Fishertwiete',\r\n        'assets.building': 'Building',\r\n        'assets.building.help': 'ex. 12A',\r\n        'assets.brokerDatabaseRecordId': 'Id in Broker database:',\r\n        'assets.brokerDatabaseRecordId.help': 'Optionally specify ID in Broker database ',\r\n        'assets.brokerDatabaseRecordId.errorLength': 'Id cannot be longer than 10 letters',\r\n        'assets.floorCount': 'Floors',\r\n        'assets.floors.label': 'Floors & Units',\r\n        'assets.floors.configure': 'Configure',\r\n        'assets.floors.title': 'Floors',\r\n        'assets.floors.number': 'Number',\r\n        'assets.floors.description': 'Description',\r\n        'assets.floors.assetobject': 'Tower',\r\n        'assets.floors.addrange': 'Floors range',\r\n        'assets.floors.addbutton': 'Add',\r\n        'assets.floors.cancelbutton': 'Cancel',\r\n        'assets.floors.range.modal.title': 'Add range',\r\n        'assets.floors.range.title': 'Please specify number of floors to add. They will be added to the end of the list.',\r\n        'assets.floors.range.field': 'How many floors to add',\r\n        'assets.floors.range.checkbox': 'Numerate automatically',\r\n        'assets.floors.range.checkbox.help': 'Enable this button of you want to numerate floors automatically by numbers',\r\n        'assets.floors.deleted': 'Floor successfully deleted',\r\n        'assets.floors.created': 'Floors range successfully created',\r\n        'assets.floors.updated': 'Floor successfully updated',\r\n        'assets.floors.delete.title': 'You are going to delete floor with all spaces, this floor will not be able use Tower360 anymore.',\r\n        'assets.floors.delete.confirmButton': 'Yes, delete it!',\r\n\r\n        'assets.spaces.modal.title': 'Add space',\r\n        'assets.spaces.title': 'Units',\r\n        'assets.spaces.unit': 'Unit',\r\n        'assets.spaces.office': 'Office',\r\n        'assets.spaces.garageUnderground': 'Garage Underground',\r\n        'assets.spaces.roofTerrace': 'Roof Terrace',\r\n        'assets.spaces.outerSurface': 'Outer Surface',\r\n        'assets.spaces.warehouse': 'Warehouse',\r\n        'assets.spaces.handlesSurface': 'Handles Surface',\r\n        'assets.spaces.gastronomy': 'Gastronomy',\r\n        'assets.spaces.archive': 'Archive',\r\n        'assets.spaces.technicalRoom': 'Technical Room',\r\n        'assets.spaces.flat': 'Flat',\r\n        'assets.spaces.retail': 'Retail',\r\n        'assets.spaces.number': 'Unit number',\r\n        'assets.spaces.type': 'Type',\r\n        'assets.spaces.floor': 'Floor number',\r\n        'assets.spaces.assetobject': 'Tower',\r\n        'assets.spaces.rentableArea': 'Rentable Area',\r\n        'assets.spaces.marketingDescription': 'Marketing Description',\r\n        'assets.spaces.notes': 'Internal notes',\r\n        'assets.spaces.minAskingPrice': 'Minimum asking price',\r\n        'assets.spaces.maxAskingPrice': 'Maximum asking price',\r\n        'assets.spaces.placeholder.number': 'Type space number here',\r\n        'assets.spaces.placeholder.rentableArea': 'Specify rentable area value',\r\n        'assets.spaces.placeholder.marketingDescription': 'Put here some text for marketing materials',\r\n        'assets.spaces.placeholder.notes': 'Internal notes',\r\n        'assets.spaces.placeholder.minAskingPrice': 'Type minimum asking price here',\r\n        'assets.spaces.placeholder.maxAskingPrice': 'Type maximum asking price',\r\n        'assets.spaces.saving' : 'Saving',\r\n        'assets.spaces.save' : 'Save',\r\n        'assets.spaces.cancel' : 'Cancel',\r\n        'assets.spaces.add': 'Unit',\r\n        'assets.spaces.deleted': 'Unit successfully deleted',\r\n        'assets.spaces.created': 'Unit successfully created',\r\n        'assets.spaces.updated': 'Unit successfully updated',\r\n        'assets.spaces.delete.title': 'You are going to delete space, this space will not be able use Tower360 anymore.',\r\n        'assets.spaces.delete.confirmButton': 'Yes, delete it!',\r\n        'assets.spaces.validation.maxAskingPrice': 'Max asking price has to be greater than min asking price',\r\n        'assets.spaces.availability': 'Availability',\r\n        'assets.spaces.asking_price': 'Asking Price',\r\n        'assets.spaces.tenant_name': 'Tenant Name',\r\n        'assets.spaces.in_place_rent': 'In-Place Rent',\r\n        'assets.spaces.net_rent': 'Net Rent',\r\n        'assets.spaces.vat': 'Vat',\r\n        'assets.spaces.additional_cost': 'Additional cost',\r\n        'assets.spaces.total_rent': 'Total rent',\r\n        'assets.spaces.status': 'Status',\r\n        'assets.spaces.lease_start_date': 'Contract Start Date',\r\n        'assets.spaces.lease_end_date': 'Contract End Date',\r\n        // spaces filter\r\n        'assets.spaces.filter.title': 'Filter',\r\n        'assets.spaces.filter.all': 'All',\r\n        'assets.spaces.filter.vacant': 'Vacant',\r\n        'assets.spaces.filter.occupied': 'Occupied',\r\n        'assets.spaces.filter.in_1_month': 'in 1 month',\r\n        'assets.spaces.filter.in_3_month': 'in 3 month',\r\n        'assets.spaces.filter.in_6_month': 'in 6 month',\r\n        'assets.spaces.filter.in_1_year': 'in 1 year',\r\n        'assets.spaces.filter.custom_dates': 'Custom dates',\r\n        'assets.spaces.filter.status.title': 'Filter spaces by current status or their availability in future',\r\n        'assets.spaces.filter.extra': 'Extra filters',\r\n        'assets.spaces.filter.favorites': 'Favorites',\r\n        'assets.spaces.filter.empty': 'Empty response',\r\n        'assets.spaces.filter.unit': 'Unit',\r\n        'assets.spaces.filter.tower': 'Tower',\r\n        'assets.spaces.filter.towers': 'Towers',\r\n        'assets.spaces.filter.towers.placeholder': 'Select or search a tower in the list...',\r\n        'assets.spaces.filter.floor': 'Floor',\r\n        'assets.spaces.filter.floor_from': 'Floor from',\r\n        'assets.spaces.filter.floor_to': 'Floor to',\r\n        'assets.spaces.filter.rentable_area': 'Rentable Area',\r\n        'assets.spaces.filter.rentable_area_from': 'Rentable Area from',\r\n        'assets.spaces.filter.rentable_area_to': 'Rentable Area to',\r\n        'assets.spaces.filter.type': 'Type',\r\n        'assets.spaces.filter.asking_price': 'Asking Price',\r\n        'assets.spaces.filter.asking_price_from': 'Asking Price from',\r\n        'assets.spaces.filter.asking_price_to': 'Asking Price to',\r\n        'assets.spaces.filter.status': 'Status',\r\n        'assets.spaces.filter.availability': 'Availability',\r\n        'assets.spaces.filter.available_from': 'Available from',\r\n        'assets.spaces.filter.immediately': 'Immediately',\r\n        'assets.spaces.filter.in_place_rent': 'In-Place Rent',\r\n        'assets.spaces.filter.in_place_rent_from': 'In-Place Rent from',\r\n        'assets.spaces.filter.in_place_rent_to': 'In-Place Rent to',\r\n        'assets.spaces.filter.from': 'From',\r\n        'assets.spaces.filter.to': 'To',\r\n        'assets.spaces.filter.apply': 'Apply',\r\n        'assets.spaces.filter.cancel': 'Cancel',\r\n\r\n        'assets.tenants.title': 'Tenants',\r\n        'assets.tenants.name': 'Tenant name',\r\n        'assets.tenants.type': 'Type',\r\n        'assets.tenants.contract_number': 'Contract No',\r\n        'assets.tenants.total_area': 'Total area',\r\n        'assets.tenants.units': 'Units Occupied',\r\n        'assets.tenants.towers': 'Tower(s)',\r\n        'assets.tenants.floor': 'Floor',\r\n        'assets.tenants.area_in_unit': 'Area in unit',\r\n        'assets.tenants.in_place_rent': 'In-Place Rent',\r\n        'assets.tenants.net_rent': 'Net Rent',\r\n        'assets.tenants.vat': 'Vat',\r\n        'assets.tenants.additional_cost': 'Additional cost',\r\n        'assets.tenants.total_rent': 'Total rent',\r\n        'assets.tenants.status': 'Status',\r\n        'assets.tenants.lease_start_date': 'Contract Start Date',\r\n        'assets.tenants.lease_end_date': 'Contract End Date',\r\n        // tenants filter\r\n        'assets.tenants.filter.title': 'Filter',\r\n        'assets.tenants.filter.in_place': 'In place',\r\n        'assets.tenants.filter.expired': 'Expired',\r\n        'assets.tenants.filter.within_1_month': 'Within 1 month',\r\n        'assets.tenants.filter.within_3_month': 'Within 3 month',\r\n        'assets.tenants.filter.within_6_month': 'Within 6 month',\r\n        'assets.tenants.filter.within_1_year': 'Within 1 year',\r\n        'assets.tenants.filter.custom_dates': 'Custom dates',\r\n        'assets.tenants.filter.quick.title': 'Quick filters',\r\n        'assets.tenants.filter.extra': 'Extra filters',\r\n        'assets.tenants.filter.favorites': 'Favorites',\r\n        'assets.tenants.filter.empty': 'Empty response',\r\n        'assets.tenants.filter.unit': 'Unit',\r\n        'assets.tenants.filter.tower': 'Tower',\r\n        'assets.tenants.filter.towers': 'Towers',\r\n        'assets.tenants.filter.towers.placeholder': 'Select or search a tower in the list...',\r\n        'assets.tenants.filter.industry': 'Industry',\r\n        'assets.tenants.filter.industry.placeholder': 'Select or search a industry in the list...',\r\n        'assets.tenants.filter.lease_date': 'Contract start dates range',\r\n        'assets.tenants.filter.lease_start_date': 'Contract Start Date from',\r\n        'assets.tenants.filter.lease_end_date': 'Contract Start Date to',\r\n        'assets.tenants.filter.tenant_name': 'Tenant Name',\r\n        'assets.tenants.filter.size': 'Size',\r\n        'assets.tenants.filter.total_rent': 'Total rent',\r\n        'assets.tenants.filter.type': 'Unit Type',\r\n        'assets.tenants.filter.rentable_area': 'Price per square meters',\r\n        'assets.tenants.filter.rentable_area_from': 'Price per square meters from',\r\n        'assets.tenants.filter.rentable_area_to': 'Price per square meters to',\r\n        'assets.tenants.filter.rent': 'Rent',\r\n        'assets.tenants.filter.from': 'From',\r\n        'assets.tenants.filter.to': 'To',\r\n        'assets.tenants.filter.this_month': 'This Month',\r\n        'assets.tenants.filter.last_month': 'Last Month',\r\n        'assets.tenants.filter.this_year': 'This Year',\r\n        'assets.tenants.filter.last_year': 'Last Year',\r\n        'assets.tenants.filter.datepicker.clear': 'Clear',\r\n        'assets.tenants.filter.apply': 'Apply',\r\n        'assets.tenants.filter.cancel': 'Cancel',\r\n\r\n\r\n        'assets.gallery.header': 'Configure',\r\n        'assets.gallery.title': 'Image',\r\n        'assets.gallery.add': 'Add photo',\r\n        'assets.gallery.main': 'Main',\r\n        'assets.gallery.message.added': 'Asset image successfully added',\r\n        'assets.gallery.message.deleted': 'Asset image successfully deleted',\r\n        'assets.broker': 'Asset Manager:',\r\n        'assets.broker.help': 'Select Asset Manager who is managing the Asset',\r\n        'assets.notes': 'Internal notes:',\r\n        'assets.notes.errorLength': 'Notes cannot be longer than 500 letters',\r\n        'assets.description': 'Marketing description:',\r\n        'assets.message.archived' : 'Asset successfully archived',\r\n        'assets.message.activated': 'Asset successfully activated',\r\n        'assets.message.created' : 'Asset successfully created',\r\n        'assets.message.updated' : 'Asset successfully updated',\r\n        'assets.info': 'Asset information',\r\n        'assets.info.general': 'General information',\r\n        'assets.info.images': 'Images',\r\n        'assets.placeholder.broker': 'Select broker',\r\n        'assets.placeholder.name': 'Type name here',\r\n        'assets.placeholder.country': 'Select country',\r\n        'assets.placeholder.city': 'ex. Hamburg',\r\n        'assets.placeholder.street': 'ex. Shoenstrasse',\r\n        'assets.placeholder.building': 'ex. 26A',\r\n        'assets.placeholder.brokerDatabaseRecordId': 'ex. BLD-123',\r\n        'assets.placeholder.notes': 'Internal notes',\r\n        'assets.placeholder.description': 'Put here some text for marketing materials',\r\n        'assets.save': 'Save',\r\n        'assets.cancel': 'Cancel',\r\n        'assets.saving':'Saving',\r\n        'assets.archive': 'Archive asset',\r\n        'assets.archive.title': 'You are going to archive Asset.',\r\n        'assets.archive.confirmButton': 'Yes, archive it!',\r\n        'assets.archived': 'Archived',\r\n        'assets.activate': 'Activate asset',\r\n        'assets.activate.title': 'You are going to activate Asset.',\r\n        'assets.activate.confirmButton': 'Yes, activate it!',\r\n        'assets.available.space': 'Available Unit',\r\n        'assets.occupancy': 'Occupancy',\r\n        'assets.total.rentable': 'Total Rentable',\r\n\r\n        'assets.objects.title': 'Objects',\r\n        'assets.objects.name' : 'Name', \r\n        'assets.objects.isDisplayOnStackingPlan'  : 'Show on Stacking Plan',\r\n        'assets.objects.add': 'Tower',\r\n        'assets.objects.message.deleted': 'Tower successfully deleted',\r\n        'assets.objects.message.created': 'Tower successfully created',\r\n        'assets.objects.message.updated': 'Tower successfully updated',\r\n        'assets.objects.delete.title': 'You are going to delete tower with all floors, this tower will not be able use Tower360 anymore.',\r\n        'assets.objects.delete.confirmButton': 'Yes, delete it!',\r\n        'assets.objects.placeholder.name': 'Type name here',\r\n        'assets.objects.create.name' : 'Name:',\r\n        'assets.objects.save': 'Save',\r\n        'assets.objects.cancel': 'Cancel',\r\n        'assets.objects.saving':'Saving',\r\n        'assets.objects.create.title': 'Asset Object',\r\n        'assets.objects.create.isDisplayOnStackingPlan': 'Show on Stacking Plan:',\r\n        'assets.objects.address': 'Address',\r\n        'assets.objects.edit.title': 'Asset Object',\r\n\r\n        'assets.validation.countryRequired': 'Country required',\r\n        'assets.validation.cityRequired': 'City required',\r\n        'assets.validation.streetRequired': 'Street required',\r\n        'assets.validation.buildingRequired': 'Building required',\r\n\r\n        'clients.new': 'Tenant',\r\n        'clients.title': 'Tenants',\r\n        'clients.name': 'Public name',\r\n        'clients.shortName': 'Short name:',\r\n        'clients.shortName.formLabel': 'Short name',\r\n        'clients.industry': 'Industry',\r\n        'clients.address': 'Address',\r\n        'clients.country': 'Country',\r\n        'clients.info': 'Tenant information',\r\n        'clients.info.general': 'General information',\r\n        'clients.info.representatives': 'Contacts',\r\n        'clients.user': 'User',\r\n        'clients.notes': 'Internal notes',\r\n        'clients.state': 'State',\r\n        'clients.placeholder.name': 'Type name here',\r\n        'clients.placeholder.shortName': 'Type short name here',\r\n        'clients.placeholder.notes': 'Add notes here',\r\n        'clients.placeholder.description': 'Add description here',\r\n        'clients.save': 'Save',\r\n        'clients.saving':'Saving',\r\n        'clients.cancel': 'Cancel',\r\n        'clients.message.archived' : 'Tenant successfully archived',\r\n        'clients.message.created' : 'Tenant successfully created',\r\n        'clients.message.updated' : 'Tenant successfully updated',\r\n        'clients.view.title': 'Tenant',\r\n        'clients.view.notes': 'Notes',\r\n        'clients.archive.title': 'You are going to archive Tenant.',\r\n        'clients.archive.confirmButton': 'Yes, archive it!',\r\n        'clients.archived': 'Archived',\r\n        'clients.activate': 'Activate tenant',\r\n        'clients.activate.title': 'You are going to activate Tenant.',\r\n        'clients.activate.confirmButton': 'Yes, activate it!',\r\n        'clients.edit': 'Edit',\r\n        'clients.edit.title': 'Edit Tenant',\r\n        'clients.create.title': 'Create Tenant',\r\n\r\n        'clients.representatives.new' : 'Contact',\r\n        'clients.representatives.title' : 'Contacts',\r\n        'clients.representatives.name': 'Name',\r\n        'clients.representatives.email': 'Email',\r\n        'clients.representatives.phone': 'Phone',\r\n        'clients.representatives.position': 'Position',\r\n\r\n        'clients.representatives.message.deleted' : 'Contact successfully deleted',\r\n        'clients.representatives.message.created' : 'Contact successfully created',\r\n        'clients.representatives.message.updated' : 'Contact successfully updated',\r\n\r\n        'industry.technology': 'Technology',\r\n        'industry.media': 'Media/Entertainment',\r\n        'industry.education': 'Education',\r\n        'industry.trade': 'Trade/Energy',\r\n        'industry.government': 'Government/Non-profit',\r\n        'industry.healthcare': 'Healthcare',\r\n        'industry.logistics': 'Logistics',\r\n        'industry.consulting': 'Consulting',\r\n        'industry.retail': 'Retail',\r\n        'industry.telco' : 'Telco',\r\n        'industry.food': 'Food & Beverage',\r\n        'industry.finance': 'Finance',\r\n        'industry.residential': 'Residential',\r\n        'industry.travel': 'Travel',\r\n        'industry.wellness': 'Wellness',\r\n        'industry.hr': 'Human Resources',\r\n        'industry.real-estate': 'Real Estate',\r\n        'industry.industrials': 'Industrials',\r\n\r\n        // public\r\n        'login.email': 'Email',\r\n        'login.password': 'Password',\r\n        'login.placeholder.email': 'Please enter email',\r\n        'login.placeholder.password': 'Please enter password',\r\n        'login.login': 'Log in',\r\n        'login.automatic.signout' : 'You were automatically logged off because of inactivity',\r\n\r\n        // Stacking plan\r\n        'stacking-plan.title': 'Stacking plan',\r\n        'stacking-plan.empty': 'There is no stacking plan for this asset',\r\n        'stacking-plan.space.details': 'Unit details',\r\n        'stacking-plan.space.options': 'Options',\r\n        'stacking-plan.space.deals': 'Deals',\r\n        'stacking-plan.view.actual': 'Actual',\r\n        'stacking-plan.view.normalized': 'Normalized',\r\n        'stacking-plan.legend.vacant': 'VACANT',\r\n        'stacking-plan.legend.lease.expiration': 'Lease Expiration',\r\n        'stacking-plan.expires': 'Exp',\r\n        'stacking-plan.expires.2': 'Expires',\r\n        'stacking-plan.unit': 'UNIT',\r\n        'stacking-plan.nospaces': 'no spaces',\r\n        'stacking.plan.details.lease.start': 'Lease Start Date',\r\n        'stacking.plan.details.lease.end': 'Lease End Date',\r\n        'stacking.plan.details.cost.totalmonth': 'Total month cost',\r\n        'stacking.plan.details.cost.netrent': 'Net Rent',\r\n        'stacking.plan.details.cost.additional': 'Additional costs',\r\n        'stacking.plan.details.cost.other': 'Other costs',\r\n        'stacking.plan.details.cost.vat': 'VAT costs',\r\n\r\n        //registration\r\n        'registration.username' : 'Username',\r\n        'registration.password' : 'Password',\r\n        'registration.confirmPassword' : 'Repeat Password',\r\n        'registration.displayName' : 'Display Name',\r\n        'registration.submit' : 'Register',\r\n        'registration.cancel' : 'Cancel',\r\n        'registration.saving' : 'Processing',\r\n\r\n        //address\r\n        'address.autoComplete': 'Try to find address:',\r\n        'address.manually': 'Or specify it manually:',\r\n        'address.streetAddress': 'Street Address:',\r\n        'address.postCode': 'Post Code:',\r\n        'address.country': 'Country:',\r\n        'address.city': 'City:',\r\n        'address.street': 'Street:',\r\n        'address.placeholder.country': 'Select country',\r\n        'address.placeholder.city': 'ex. Munich',\r\n        'address.placeholder.street': 'ex.  Reeperbahn',\r\n        'address.placeholder.streetAddress': 'ex. 25',\r\n        'address.placeholder.postCode': 'ex. 10117',\r\n        'address.validation.countryRequired': 'Country required',\r\n    };\r\n\r\n    var result = messages[messageId];\r\n\r\n    if (!result) {\r\n        return '<<<<Missing ' + messageId + ' >>>>';\r\n    }\r\n    return result;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages_en-us.js","export default function Messages(messageId) {\r\n    var messages = {\r\n        // common\r\n        'confirmation': 'Sind Sie sicher?',\r\n        'actions': 'Aktionen',\r\n        'administrator': 'Administrator',\r\n        'broker': '[DEU] Broker',\r\n\r\n        'square.meter': 'm<sup>2</sup>',\r\n\r\n        'validation.required': 'Dieses Feld ist notwendig',\r\n        'validation.email': 'Bitte geben Sie eine gültige E-Mail-Adresse ein.',\r\n        'validation.maxLength': 'Zu viele Zeichen',\r\n        'validation.phone': 'Bitte geben Sie Ihre Telefonnummer im folgenden Format ein: \"+49 151 5555555\"',\r\n        'validation.shortPassword' : 'Ihr Passwort muss mindestens 6 Zeichen lang sein',\r\n        'validation.passwordsNotMatch' : 'Die Passwörter stimmen nicht überein.',\r\n\r\n        'country.germany': 'Deutschland',\r\n\r\n        // private\r\n        'state.unknown': 'Unbekannt',\r\n        'state.pending': 'Unerledigt',\r\n        'state.active': 'Aktiv',\r\n        'state.archived': 'Archiviert',\r\n\r\n        'mainheader.settings.product': 'Produkteinstellungen',\r\n        'mainheader.settings.notification': 'Benachrichtigungseinstellungen',\r\n        'mainheader.settings.account': 'Account-Einstellungen',\r\n        'mainheader.language': 'Sprache',\r\n        'mainheader.signout': 'Abmelden',\r\n\r\n        'sidebar.brokers': 'Asset Manager',\r\n        'sidebar.users': 'Benutzer',\r\n        'sidebar.assets': 'Objekte',\r\n        'sidebar.clients': 'Mieter',\r\n        'sidebar.spaces': 'Flächen',\r\n        'sidebar.stackingplan': 'Belegungsplan',\r\n\r\n        'image.cropper.title': '[DEU] Upload an image',\r\n        'image.cropper.save': '[DEU] Save',\r\n        'image.cropper.saving': '[DEU] Saving',\r\n        'image.cropper.cancel': '[DEU] Cancel',\r\n        'image.cropper.addbutton': '[DEU] Upload',\r\n        'image.cropper.placeholder.empty': '[DEU] Drag and drop image here',\r\n\r\n        'brokers.new': 'Asset Manager',\r\n        'brokers.title': 'Asset Manager',\r\n        'brokers.title.general': 'Allgemeine Attribute',\r\n        'broker.info.title': 'Asset Manager Informationen',\r\n        'brokers.name': 'Anzeigename',\r\n        'brokers.address': 'Offizielle Adresse',\r\n        'brokers.state': 'Staat',\r\n        'brokers.message.deleted': 'Asset Manager wurde erfolgreich archiviert',\r\n        'brokers.message.created': 'Asset Manager wurde erfolgreich erstellt',\r\n        'brokers.message.updated': 'Asset Manager wurde erfolgreich aktualisiert',\r\n        'brokers.message.activated': 'Asset Manager wurde erfolgreich aktiviert',\r\n        'brokers.placeholder.name': 'Bsp. Colliers International',\r\n        'brokers.placeholder.address': 'Bsp. Alter Weg 110 a, 12345 Musterdorf',\r\n        'brokers.save' : 'Speichern',\r\n        'brokers.cancel': 'Abbrechen',\r\n        'brokers.create': 'Neu',\r\n        'brokers.saving': 'Speichernd',\r\n        'brokers.archive': 'Archiviere Asset Manager',\r\n        'brokers.archive.title': '[DEU] You are going to archive Asset Manager, their employees will not be able to use Tower360 anymore.',\r\n        'brokers.archive.confirmButton': 'Ja, archiviere!',\r\n        'brokers.archived': 'Archiviert',\r\n        'brokers.activate': 'Aktive Asset Manager',\r\n        'brokers.activate.title': '[DEU] You are going to activate Asset Manager, their employees will be able to use Tower360.',\r\n        'brokers.activate.confirmButton': '[DEU] Yes, activate it!',\r\n        'brokers.edit': 'Editieren',\r\n        'brokers.edit.title': 'Editiere Asset Manager',\r\n        'brokers.create.title': 'Erstelle Asset Manager',\r\n        'brokers.projects': 'Projekte',\r\n        'brokers.messages': 'Nachrichten',\r\n        'brokers.views': 'Abrufe',\r\n        'brokers.additional.container': 'Behälter für zusätzliche Informationen',\r\n\r\n        'users.new': 'Benutzer',\r\n        'users.title': 'Benutzer',\r\n        'users.title.general': 'Allgemeine Attribute',\r\n        'users.info.title': 'Benutzerinformationen',\r\n        'users.email': 'Email',\r\n        'users.displayname': 'Anzeigename',\r\n        'users.state': 'Staat',\r\n        'users.locale': '[DEU] Locale',\r\n        'users.broker': 'Verbinden mit',\r\n        'users.broker.help': 'Selektioniere Asset Manager wo diese Person arbeitet',\r\n        'users.role': 'Portalrolle',\r\n        'users.role.help': 'Wählen Sie die die Benutzerrolle aus',\r\n        'users.message.created': 'Benutzer erfolgreich eingeladen',\r\n        'users.message.updated': 'Benutzer erfolgreich aktualisiert',\r\n        'users.message.archived': 'Benutzer erfolgreich aktualisiert',\r\n        'users.message.activated': 'Benutzer erfolgreich archiviert',\r\n        'users.placeholder.email': 'Email',\r\n        'users.placeholder.displayname': 'Bsp. Mathias Kohler',\r\n        'users.placeholder.currentPassword': 'Aktuelles Kennwort',\r\n        'users.placeholder.newPassword': 'Neues Kennwor',\r\n        'users.placeholder.confirmPassword': 'Bestätige Kennwort',\r\n        'users.images.add': 'Selektioniere Bild',\r\n        'users.invite': 'Einladen',\r\n        'users.save': 'Speichern',\r\n        'users.saving': 'Speichert',\r\n        'users.cancel': 'Abbrechen',\r\n        'users.create': 'Neuen Benutzer einladen',\r\n        'users.archive': 'Archiviere Benutzer',\r\n        'users.archive.title': 'Sie werden den Benutzer archivieren. Der Benutzer wird nicht mehr Tower360 benutzen können.',\r\n        'users.archive.confirmButton': 'Archivieren',\r\n        'users.archived': 'Archiviert',\r\n        'users.activate': 'Aktiviere den Benutzer',\r\n        'users.activate.title': 'Sie werden den Benutzer aktivieren. Der Benutzer wird Tower360 benutzen können.',\r\n        'users.activate.confirmButton': 'Ja, aktiviere den Benutzer',\r\n        'users.edit': 'Bearbeiten',\r\n        'users.edit.title': 'Bearbeite Benutzer',\r\n        'users.create.title': 'Erstelle Benutzer',\r\n        'users.projects': 'Projekte',\r\n        'users.messages': 'Nachrichten',\r\n        'users.views': 'Abrufe',\r\n        'users.additional.container': 'Feld für Zusatzinformationen',\r\n        'users.changePassword': 'Kennwortänderung',\r\n        'users.changePassord.title' : 'Kennwortänderung',\r\n        'users.currentPassword': 'Aktuelles Kennwort',\r\n        'users.newPassword': 'Neues Kennwort',\r\n        'users.confirmPassword': 'Bestätige Kennwort',\r\n        'users.changingPasswordBtn': 'Kennwort wird geändert',\r\n        'users.changePasswordBtn': 'Ändere',\r\n        'users.changePassword.failed': 'Wir konnten Ihr Passwort nicht ändern, Versuchen Sie es später nochmals.',\r\n        'users.changePassword.success': 'Ihr Kennwort wurde geändert',\r\n\r\n        'assets.new': 'Neues Objekt',\r\n        'assets.add': 'Objekt hinzufügen',\r\n        'assets.edit': 'Objekt editieren',\r\n        'assets.title': 'Objekte',\r\n        'assets.title.address': 'Adressangaben',\r\n        'assets.title.other': 'Sonstiges',\r\n        'assets.name': 'Objekt Name',\r\n        'assets.state': 'Staat',\r\n        'assets.address': 'Adresse',\r\n        'assets.country': 'Land',\r\n        'assets.city': 'Stadt',\r\n        'assets.city.help': 'Bsp. Hamburg',\r\n        'assets.street': 'Strasse',\r\n        'assets.street.help': 'Bsp. Fishertwiete',\r\n        'assets.building': 'Gebäude',\r\n        'assets.building.help': 'Bsp. 12A',\r\n        'assets.brokerDatabaseRecordId': '[DEU] Id in Broker database',\r\n        'assets.brokerDatabaseRecordId.help': '[DEU] Optionally specify ID in Broker database',\r\n        'assets.brokerDatabaseRecordId.errorLength': '[DEU] Id cannot be longer than 10 letters',\r\n        'assets.floorCount': 'Geschoss',\r\n        'assets.floors.label': 'Geschoss & Flächen',\r\n        'assets.floors.configure': 'Konfigurieren',\r\n        'assets.floors.title': 'Geschoss',\r\n        'assets.floors.number': 'Nummer',\r\n        'assets.floors.description': 'Beschreibung',\r\n        'assets.floors.assetobject': 'Gebäude',\r\n        'assets.floors.addrange': 'Geschoss Abgrenzung',\r\n        'assets.floors.addbutton': 'Hinzufügen',\r\n        'assets.floors.cancelbutton': 'Abbrechen',\r\n        'assets.floors.range.modal.title': 'Spannweite hinzufügen',\r\n        'assets.floors.range.title': 'Bitte geben Sie die Anzahl von Geschössen an. Die werden am Ende der Liste hinzugefügt.',\r\n        'assets.floors.range.field': 'Wieviel Etagen werden hinzugefügt',\r\n        'assets.floors.range.checkbox': 'Numeriere automatisch',\r\n        'assets.floors.range.checkbox.help': '[DEU] Enable this button of you want to numerate floors automatically by numbers',\r\n        'assets.floors.deleted': '[DEU] Floor successfully deleted',\r\n        'assets.floors.created': '[DEU] Floor successfully created',\r\n        'assets.floors.updated': '[DEU] Floor successfully updated',\r\n        'assets.floors.delete.title': '[DEU] You are going to delete floor with all units, this floor will not be able use Tower360 anymore.',\r\n        'assets.floors.delete.confirmButton': '[DEU] Yes, delete it!',\r\n\r\n        'assets.spaces.modal.title': '[DEU] Add unit',\r\n        'assets.spaces.title': '[DEU] Units',\r\n        'assets.spaces.unit': '[DEU] Unit',\r\n        'assets.spaces.office': 'Büro',\r\n        'assets.spaces.garageUnderground': 'Stellplatz Tiefgarage',\r\n        'assets.spaces.roofTerrace': 'Dachterrasse',\r\n        'assets.spaces.outerSurface': 'Außenfläche',\r\n        'assets.spaces.warehouse': 'Lager',\r\n        'assets.spaces.handlesSurface': 'Handlesfläche',\r\n        'assets.spaces.gastronomy': 'Gastronomie',\r\n        'assets.spaces.archive': 'Archiv',\r\n        'assets.spaces.technicalRoom': 'Technikraum',\r\n        'assets.spaces.flat': 'Wohnung',\r\n        'assets.spaces.retail': 'Handel',\r\n        'assets.spaces.number': 'Einheitnummer',\r\n        'assets.spaces.type': 'Type',\r\n        'assets.spaces.floor': 'Etagennummer',\r\n        'assets.spaces.assetobject': 'Gebäude',\r\n        'assets.spaces.rentableArea': 'Mietfläche',\r\n        'assets.spaces.marketingDescription': 'Marketing Beschreibung',\r\n        'assets.spaces.notes': '[DEU] Internal notes',\r\n        'assets.spaces.minAskingPrice': 'Mindestpreis',\r\n        'assets.spaces.maxAskingPrice': 'Höchstpreis',\r\n        'assets.spaces.placeholder.number': 'Geben Sie die Einheitnummer hier ein',\r\n        'assets.spaces.placeholder.rentableArea': 'Geben Sie den Mietflächenwert hier ein',\r\n        'assets.spaces.placeholder.marketingDescription': 'Geben Sie die Marketingbeschreibung hier ein',\r\n        'assets.spaces.placeholder.notes': 'Interne Notizen',\r\n        'assets.spaces.placeholder.minAskingPrice': 'Geben Sie den Mindespreis ein',\r\n        'assets.spaces.placeholder.maxAskingPrice': 'Geben Sie den Höchstpreis ein',\r\n        'assets.spaces.saving' : 'Speichern',\r\n        'assets.spaces.save' : 'Speichern',\r\n        'assets.spaces.cancel' : 'Abbrechen',\r\n        'assets.spaces.add': 'Fläche',\r\n        'assets.spaces.deleted': 'Fläche wurde erfolgreich gelöscht',\r\n        'assets.spaces.created': 'Fläche wurde erfolgreich kreiert',\r\n        'assets.spaces.updated': 'Fläche wurde erfolgreich aktualisiert',\r\n        'assets.spaces.delete.title': 'Sie werden diese Fläche löschen. Diese Fläche wird nicht mehr in Tower360 ersichtlich werden.',\r\n        'assets.spaces.delete.confirmButton': 'Ja, löschen Sie die Fläche!',\r\n        'assets.spaces.validation.maxAskingPrice': 'Der höchstpreis muss grösser als der Mindestpreis sein',\r\n        'assets.spaces.availability': '[DEU] Availability',\r\n        'assets.spaces.asking_price': '[DEU] Asking Price',\r\n        'assets.spaces.tenant_name': '[DEU] Tenant Name',\r\n        'assets.spaces.in_place_rent': '[DEU] In-Place Rent',\r\n        'assets.spaces.net_rent': '[DEU] Net Rent',\r\n        'assets.spaces.vat': '[DEU] Vat',\r\n        'assets.spaces.additional_cost': '[DEU] Additional cost',\r\n        'assets.spaces.total_rent': '[DEU] Total rent',\r\n        'assets.spaces.status': '[DEU] Status',\r\n        'assets.spaces.lease_start_date': '[DEU] Contract Start Date',\r\n        'assets.spaces.lease_end_date': '[DEU] Contract End Date',\r\n        // spaces filter\r\n        'assets.spaces.filter.title': '[DEU] Filter',\r\n        'assets.spaces.filter.status.title': '[DEU] Filter units by current status or their availability in future',\r\n        'assets.spaces.filter.extra': '[DEU] Extra filters',\r\n        'assets.spaces.filter.favorites': '[DEU] Favorites',\r\n        'assets.spaces.filter.empty': '[DEU] Empty response',\r\n        'assets.spaces.filter.unit': '[DEU] Unit',\r\n        'assets.spaces.filter.tower': '[DEU] Tower',\r\n        'assets.spaces.filter.towers': '[DEU] Towers',\r\n        'assets.spaces.filter.floor': '[DEU] Floor',\r\n        'assets.spaces.filter.all': 'All',\r\n        'assets.spaces.filter.in_1_month': 'in 1 month',\r\n        'assets.spaces.filter.in_3_month': 'in 3 month',\r\n        'assets.spaces.filter.in_6_month': 'in 6 month',\r\n        'assets.spaces.filter.in_1_year': 'in 1 year',\r\n        'assets.spaces.filter.custom_dates': 'Custom dates',\r\n        'assets.spaces.filter.floor_from': '[DEU] Floor from',\r\n        'assets.spaces.filter.floor_to': '[DEU] Floor to',\r\n        'assets.spaces.filter.rentable_area': '[DEU] Rentable Area',\r\n        'assets.spaces.filter.rentable_area_from': '[DEU] Rentable Area from',\r\n        'assets.spaces.filter.rentable_area_to': '[DEU] Rentable Area to',\r\n        'assets.spaces.filter.type': '[DEU] Type',\r\n        'assets.spaces.filter.asking_price': '[DEU] Asking Price',\r\n        'assets.spaces.filter.asking_price_from': '[DEU] Asking Price from',\r\n        'assets.spaces.filter.towers.placeholder': 'Select or search a tower in the list...',\r\n        'assets.spaces.filter.asking_price_to': '[DEU] Asking Price to',\r\n        'assets.spaces.filter.status': '[DEU] Status',\r\n        'assets.spaces.filter.availability': '[DEU] Availability',\r\n        'assets.spaces.filter.available_from': '[DEU] Available from',\r\n        'assets.spaces.filter.occupied': '[DEU] Occupied',\r\n        'assets.spaces.filter.vacant': '[DEU] Vacant',\r\n        'assets.spaces.filter.immediately': '[DEU] Immediately',\r\n        'assets.spaces.filter.in_place_rent': '[DEU] In-Place Rent',\r\n        'assets.spaces.filter.apply': '[DEU] Apply',\r\n        'assets.spaces.filter.cancel': '[DEU] Cancel',\r\n        'assets.spaces.filter.in_place_rent_from': 'In-Place Rent from',\r\n        'assets.spaces.filter.in_place_rent_to': 'In-Place Rent to',\r\n        'assets.spaces.filter.from': 'From',\r\n        'assets.spaces.filter.to': 'To',\r\n\r\n        'assets.tenants.title': 'Tenants',\r\n        'assets.tenants.name': 'Tenant name',\r\n        'assets.tenants.type': 'Type',\r\n        'assets.tenants.contract_number': 'Contract No',\r\n        'assets.tenants.total_area': 'Total area',\r\n        'assets.tenants.units': 'Units Occupied',\r\n        'assets.tenants.towers': 'Tower(s)',\r\n        'assets.tenants.floor': 'Floor',\r\n        'assets.tenants.area_in_unit': 'Area in unit',\r\n        'assets.tenants.in_place_rent': 'In-Place Rent',\r\n        'assets.tenants.net_rent': 'Net Rent',\r\n        'assets.tenants.vat': 'Vat',\r\n        'assets.tenants.additional_cost': 'Additional cost',\r\n        'assets.tenants.total_rent': 'Total rent',\r\n        'assets.tenants.status': 'Status',\r\n        'assets.tenants.lease_start_date': 'Contract Start Date',\r\n        'assets.tenants.lease_end_date': 'Contract End Date',\r\n        // tenants filter\r\n        'assets.tenants.filter.title': 'Filter',\r\n        'assets.tenants.filter.in_place': 'In place',\r\n        'assets.tenants.filter.expired': 'Expired',\r\n        'assets.tenants.filter.within_1_month': 'Within 1 month',\r\n        'assets.tenants.filter.within_3_month': 'Within 3 month',\r\n        'assets.tenants.filter.within_6_month': 'Within 6 month',\r\n        'assets.tenants.filter.within_1_year': 'Within 1 year',\r\n        'assets.tenants.filter.custom_dates': 'Custom dates',\r\n        'assets.tenants.filter.quick.title': 'Quick filters',\r\n        'assets.tenants.filter.extra': 'Extra filters',\r\n        'assets.tenants.filter.favorites': 'Favorites',\r\n        'assets.tenants.filter.empty': 'Empty response',\r\n        'assets.tenants.filter.unit': 'Unit',\r\n        'assets.tenants.filter.tower': 'Tower',\r\n        'assets.tenants.filter.towers': 'Towers',\r\n        'assets.tenants.filter.towers.placeholder': 'Select or search a tower in the list...',\r\n        'assets.tenants.filter.industry': 'Industry',\r\n        'assets.tenants.filter.industry.placeholder': 'Select or search a industry in the list...',\r\n        'assets.tenants.filter.lease_date': 'Contract start dates range',\r\n        'assets.tenants.filter.lease_start_date': 'Contract Start Date from',\r\n        'assets.tenants.filter.lease_end_date': 'Contract Start Date to',\r\n        'assets.tenants.filter.tenant_name': 'Tenant Name',\r\n        'assets.tenants.filter.size': 'Size',\r\n        'assets.tenants.filter.total_rent': 'Total rent',\r\n        'assets.tenants.filter.type': 'Unit Type',\r\n        'assets.tenants.filter.rentable_area': 'Rentable Area',\r\n        'assets.tenants.filter.rentable_area_from': 'Rentable Area from',\r\n        'assets.tenants.filter.rentable_area_to': 'Rentable Area to',\r\n        'assets.tenants.filter.rent': 'Rent',\r\n        'assets.tenants.filter.from': 'From',\r\n        'assets.tenants.filter.to': 'To',\r\n        'assets.tenants.filter.this_month': 'This Month',\r\n        'assets.tenants.filter.last_month': 'Last Month',\r\n        'assets.tenants.filter.this_year': 'This Year',\r\n        'assets.tenants.filter.last_year': 'Last Year',\r\n        'assets.tenants.filter.datepicker.clear': 'Clear',\r\n        'assets.tenants.filter.apply': 'Apply',\r\n        'assets.tenants.filter.cancel': 'Cancel',\r\n\r\n        'assets.gallery.header': 'Konfiguriere',\r\n        'assets.gallery.title': 'Bild',\r\n        'assets.gallery.add': 'Bild hinzufügen',\r\n        'assets.gallery.main': 'Hauptbereicht',\r\n        'assets.gallery.message.added': 'Objekt Bild wurde erfolgreich hinzugefügt',\r\n        'assets.gallery.message.deleted': 'Objekt Bild wurde erfolgreich gelöscht',\r\n        'assets.broker': 'Asset Manager',\r\n        'assets.broker.help': 'Selektionieren Sie den Asset Manager der das Asset verwaltet',\r\n        'assets.notes': 'Interne Notizen',\r\n        'assets.notes.errorLength': 'Notizen können nicht länger als  500 Charaktäre sein',\r\n        'assets.description': 'Marketing Beschreibung:',\r\n        'assets.message.archived' : 'Objekt wurde erfolgreich archiviert',\r\n        'assets.message.activated': 'Objekt wurde erfolgreich aktiviert',\r\n        'assets.message.created' : 'Objekt wurde erfolgreich kreiert',\r\n        'assets.message.updated' : 'Objekt wurde erfolgreich aktualisiert',\r\n        'assets.info': 'Objekt Information',\r\n        'assets.info.general': 'Generelle Information',\r\n        'assets.info.images': 'Bilder',\r\n        'assets.placeholder.broker': 'Selektioniere Broker',\r\n        'assets.placeholder.name': 'Name hier eintragen',\r\n        'assets.placeholder.country': 'Land auswählen',\r\n        'assets.placeholder.city': 'Bsp. Hamburg',\r\n        'assets.placeholder.street': 'Bsp. Shönestrasse',\r\n        'assets.placeholder.building': 'Bsp. 26A',\r\n        'assets.placeholder.brokerDatabaseRecordId': 'Bsp. BLD-123',\r\n        'assets.placeholder.notes': 'Bsp. Interne Notizen',\r\n        'assets.placeholder.description': 'Texteingabe für Marketing Materialien',\r\n        'assets.save': 'Speichern',\r\n        'assets.cancel': 'Abbrechen',\r\n        'assets.saving':'Vorgang wird gespeichert',\r\n        'assets.archive': 'Objekt archivieren',\r\n        'assets.archive.title': 'Sie werden das Objekt archivieren',\r\n        'assets.archive.confirmButton': 'Ja, archivieren Sie bitte',\r\n        'assets.archived': 'Der Vorgang wurde gespeichert',\r\n        'assets.activate': 'Objekt archivieren',\r\n        'assets.activate.title': 'Sie werden das Objekt archivieren.',\r\n        'assets.activate.confirmButton': 'Ja, archivieren Sie bitte!',\r\n        'assets.available.space': 'Vorhandene Objekte',\r\n        'assets.occupancy': 'Belegungszustand',\r\n        'assets.total.rentable': 'Total Rentable',\r\n\r\n        'assets.objects.title': 'Objekt',\r\n        'assets.objects.name' : 'Name', \r\n        'assets.objects.isDisplayOnStackingPlan'  : 'Auf dem Belegungsplan zeigen',\r\n        'assets.objects.add': 'Objekt',\r\n        'assets.objects.message.deleted': 'Gebäude wurde erfolgreich gelöscht',\r\n        'assets.objects.message.created': 'Gebäude wurde erfolgreich kreiert',\r\n        'assets.objects.message.updated': 'Gebäude wurde erfolgreich aktualisiert',\r\n        'assets.objects.delete.title': 'Sie werden das Gebäude zusammen mit allen Etagen löschen. Das Objekt wird nach diesem Vorgang nicht mehr in Tower360 existieren.',\r\n        'assets.objects.delete.confirmButton': 'Ja, löschen Sie es!',\r\n        'assets.objects.placeholder.name': 'Name eingeben',\r\n        'assets.objects.create.name' : 'Name:',\r\n        'assets.objects.save': 'Speichern',\r\n        'assets.objects.cancel': 'Abbrechen',\r\n        'assets.objects.saving':'Speichern',\r\n        'assets.objects.create.title': 'Objekt',\r\n        'assets.objects.create.isDisplayOnStackingPlan': 'Auf dem Belegungsplan zeigen',\r\n        'assets.objects.edit.title': 'Objekt',\r\n        'assets.objects.address': 'Adresse',\r\n\r\n        'assets.validation.countryRequired': 'Land erforderlich',\r\n        'assets.validation.cityRequired': 'Stadt benötigt',\r\n        'assets.validation.streetRequired': 'Straße erforderlich',\r\n        'assets.validation.buildingRequired': 'Gebäude erforderlich',\r\n\r\n        'clients.new': 'Mieter',\r\n        'clients.title': 'Mieter',\r\n        'clients.name': 'öffentlicher Name',\r\n        'clients.shortName': 'Kurzer Name',\r\n        'clients.shortName.formLabel': 'Kurzer Name',\r\n        'clients.industry': 'Industrie',\r\n        'clients.address': 'Adresse',\r\n        'clients.country': 'Land',\r\n        'clients.info': 'Mieterinformationen',\r\n        'clients.info.general': 'Generelle Informationen',\r\n        'clients.info.representatives': 'Kontakte',\r\n        'clients.user': 'Benutzer',\r\n        'clients.notes': 'Interne Notizen',\r\n        'clients.state': 'Staat',\r\n        'clients.placeholder.name': 'Name eingeben',\r\n        'clients.placeholder.shortName': 'Kurzname eingeben',\r\n        'clients.placeholder.notes': 'Notizen eingeben',\r\n        'clients.placeholder.description': 'Beschreibung eingeben',\r\n        'clients.save': 'Speichern',\r\n        'clients.saving':'Vorgang wird gespeichert',\r\n        'clients.cancel': 'Abbrechen',\r\n        'clients.message.archived' : 'Mieter wurde erfolgreich archiviert',\r\n        'clients.message.created' : 'Mieter wurde erfolgreich kreiert',\r\n        'clients.message.updated' : 'Mieter wurde erfolgreich aktualisiert',\r\n        'clients.view.title': 'Mieter',\r\n        'clients.view.notes': 'Notizen',\r\n        'clients.archive.title': 'Sie werden den Mieter archivieren',\r\n        'clients.archive.confirmButton': 'Ja, archivieren Sie den Mieter',\r\n        'clients.archived': 'Mieter wurde archiviert',\r\n        'clients.activate': 'Mieter archivieren',\r\n        'clients.activate.title': 'Sie werden den Mieter aktivieren.',\r\n        'clients.activate.confirmButton': 'Ja, aktivieren Sie den Mieter!',\r\n        'clients.edit': 'Editieren',\r\n        'clients.edit.title': 'Mieter editieren',\r\n        'clients.create.title': 'Mieter kreieren',\r\n\r\n        'clients.representatives.new' : 'Vertrag',\r\n        'clients.representatives.title' : 'Verträge',\r\n        'clients.representatives.name': 'Name',\r\n        'clients.representatives.email': 'Email',\r\n        'clients.representatives.phone': 'Telephonnummer',\r\n        'clients.representatives.position': 'Position',\r\n\r\n        'clients.representatives.message.deleted' : 'Kontakt wurde erfolgreich gelöscht',\r\n        'clients.representatives.message.created' : 'Kontakt wurde erfolgreich kreiert',\r\n        'clients.representatives.message.updated' : 'Kontakt wurde erfolgreich aktualisiert',\r\n\r\n        'industry.technology': 'Technologie',\r\n        'industry.media': 'Media/Entertainment',\r\n        'industry.education': 'Ausbildung',\r\n        'industry.trade': 'Handel/Energie',\r\n        'industry.government': 'Staat/NPO',\r\n        'industry.healthcare': 'Gesundheit',\r\n        'industry.logistics': 'Logistik',\r\n        'industry.consulting': 'Beratung',\r\n        'industry.retail': 'Einzelhandel',\r\n        'industry.telco' : 'Telko',\r\n        'industry.food': 'Lebensmittel',\r\n        'industry.finance': 'Finanz',\r\n        'industry.residential': 'Wohn',\r\n        'industry.travel': 'Reise',\r\n        'industry.wellness': 'Wellness',\r\n        'industry.hr': 'Personalwesen',\r\n        'industry.real-estate': 'Immobilien',\r\n        'industry.industrials': 'Industrie',\r\n\r\n        // public\r\n        'login.email': 'Email',\r\n        'login.password': 'Kennwort',\r\n        'login.placeholder.email': 'Geben Sie Ihre E-Mail-Adresse ein',\r\n        'login.placeholder.password': 'Geben Sie Ihr Kennwort ein',\r\n        'login.login': 'Einlogen',\r\n        'login.automatic.signout' : 'Sie wurden aufgrund längerer Inaktivität automatisch vom System abgemeldet.',\r\n\r\n        // Stacking plan\r\n        'stacking-plan.title': 'Belegungsplan',\r\n        'stacking-plan.empty': 'Es gibt kein Belegungsplan für dieses Objekt',\r\n        'stacking-plan.space.details': 'Flächenangaben',\r\n        'stacking-plan.space.options': 'Optionen',\r\n        'stacking-plan.space.deals': 'Kundengesuche',\r\n        'stacking-plan.view.actual': 'Tatsächlich',\r\n        'stacking-plan.view.normalized': 'Normalisiert',\r\n        'stacking-plan.legend.vacant': 'Leerstand',\r\n        'stacking-plan.legend.lease.expiration': 'Vertrag Ende',\r\n        'stacking-plan.expires': 'VE',\r\n        'stacking-plan.expires.2': 'VE',\r\n        'stacking-plan.unit': 'Fläche',\r\n        'stacking-plan.nospaces': 'Keine Fläche',\r\n        'stacking.plan.details.lease.start': 'Vetrag Beginn',\r\n        'stacking.plan.details.lease.end': 'VB',\r\n        'stacking.plan.details.cost.totalmonth': 'Gesamt brutto',\r\n        'stacking.plan.details.cost.netrent': 'Nettomiete mtl.',\r\n        'stacking.plan.details.cost.additional': 'Neben- kosten',\r\n        'stacking.plan.details.cost.other': 'Sonstige kosten',\r\n        'stacking.plan.details.cost.vat': 'MWst.',\r\n\r\n        //registration\r\n        'registration.username' : 'Benutzername',\r\n        'registration.password' : 'Kennwort',\r\n        'registration.confirmPassword' : 'Kennwort wiederholen',\r\n        'registration.displayName' : 'Anzeigename',\r\n        'registration.submit' : 'Registrieren',\r\n        'registration.cancel' : 'Abbrechen',\r\n        'registration.saving' : 'Bearbeiten',\r\n\r\n        //address\r\n        'address.autoComplete': 'Versucht Adresse zu finden:',\r\n        'address.manually': 'Gebe manuel ein:',\r\n        'address.streetAddress': 'Strassen addresse:',\r\n        'address.postCode': 'Postleitzahl:',\r\n        'address.country': 'Land:',\r\n        'address.city': 'Stadt:',\r\n        'address.street': 'Strasse:',\r\n        'address.placeholder.country': 'Land auswählen',\r\n        'address.placeholder.city': 'Bsp. München',\r\n        'address.placeholder.street': 'Bsp.  Reeperbahn',\r\n        'address.placeholder.streetAddress': 'Bsp. 25',\r\n        'address.placeholder.postCode': 'Bsp. 10117',\r\n        'address.validation.countryRequired': 'Land ist erforderlich',\r\n    };\r\n\r\n    var result = messages[messageId];\r\n\r\n    if (!result) {\r\n        return '<<<<Missing ' + messageId + ' >>>>';\r\n    }\r\n    return result;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages_de-ge.js","export var LocaleId = 1;\r\n\r\nexport function updateLocale(localeId) { \r\n    LocaleId = localeId;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.localization.js","/*@ngInject*/\r\nexport default function activityMonitor($state, ActivityMonitor) {\r\n    ActivityMonitor.options.inactive = 30 * 60; //30 miniutes\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.activitymonitor.js","import 'angularjs-toaster';\r\n\r\nimport AuthInterceptorService from './auth-interceptor-service';\r\nimport ConfigurationService from './configuration-service';\r\nimport DialogService from './dialog.service';\r\nimport NotificationService from './notification-service';\r\nimport SecurityService from './security-service';\r\nimport ImageService from './image.service';\r\nimport FileService from './file.service';\r\nimport UtilsService from './utils.service';\r\nimport CompareObjectService from './compare.service';\r\n\r\nvar module = angular.module('tower360.services', ['toaster'])\r\n  .factory('AuthInterceptorService', ['$q', '$location', 'localStorageService', ($q, location, localStorageService) => new AuthInterceptorService($q, location, localStorageService)])\r\n  .service('ConfigurationService', ConfigurationService)\r\n  .service('DialogService', DialogService)\r\n  .service('NotificationService', NotificationService)\r\n  .service('SecurityService', SecurityService)\r\n  .service('ImageService', ImageService)\r\n  .service('FileService', FileService)\r\n  .service('UtilsService', UtilsService)\r\n  .service('CompareObjectService', CompareObjectService);\r\n\r\nexport default module;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services.js","export default class AuthInterceptorService {\r\n    /*@ngInject*/\r\n    constructor($q, $location, localStorageService) {\r\n        this.$q = $q;\r\n        this.$location = $location;\r\n        this.localStorageService = localStorageService;\r\n\r\n        this.request = config => {\r\n            if (config.url.includes('/api/')) {\r\n                let token = this.localStorageService.get('authenticationData');\r\n\r\n                if (token != null && token.access_token) {\r\n                    config.headers.Authorization = 'Bearer ' + token.access_token;\r\n                }\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        this.requestError = rejection => {\r\n            return this.$q.reject(rejection);\r\n        }\r\n\r\n        this.response = response => {\r\n            if (response.status == \"401\") {\r\n                this.localStorageService.remove('authenticationData');\r\n                if (window.location.pathname != '/login') { \r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n            //the same response/modified/or a new one need to be returned.  \r\n            return response;\r\n        }\r\n\r\n        this.responseError = rejection => {\r\n            if (rejection.status == \"401\") {\r\n                this.localStorageService.remove('authenticationData');\r\n                if (window.location.pathname != '/login') { \r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n            return this.$q.reject(rejection);\r\n        }\r\n    }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth-interceptor-service.js","export default class ConfigurationService {\r\n  constructor() {\r\n  }\r\n\r\n  getApiBaseUrl() {\r\n    // Updated during build\r\n    return ENV_API_URL;\r\n  }\r\n\r\n  getClientId() {\r\n    return \"F003FEBA-3CB3-4457-B115-DA05F21E6943\";\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/configuration-service.js","import Dialog from 'devextreme/ui/dialog';\r\n\r\nexport default class DialogService {\r\n    constructor() {\r\n    }\r\n\r\n    confirmation(msg, confirmAction) {\r\n        var result = Dialog.confirm(msg, 'Please confirm');\r\n        result.done(function (dialogResult) {\r\n            if (dialogResult) {\r\n                confirmAction();\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/dialog.service.js","export default class NotificationService {\r\n  /*@ngInject*/\r\n  constructor(toaster) {\r\n    this.toaster = toaster;\r\n  }\r\n\r\n  info(text) {\r\n    this.toaster.pop({\r\n      type: 'info',\r\n      body: text,\r\n      timeout: 3000\r\n    });\r\n  }\r\n\r\n  warning(text) {\r\n    this.toaster.pop({\r\n      type: 'warning',\r\n      body: text,\r\n      timeout: 5000\r\n    });\r\n  }\r\n\r\n  error(text) {\r\n    this.toaster.pop({\r\n      type: 'error',\r\n      body: text,\r\n      timeout: 10000\r\n    });\r\n  }\r\n\r\n  success(text) {\r\n    this.toaster.pop({\r\n      type: 'success',\r\n      body: text,\r\n      timeout: 3000,\r\n      'position-class': 'toast-bottom-center'\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/notification-service.js","export default class SecurityService {\r\n  /*@ngInject*/\r\n  constructor($http, $q, $state, NotificationService, ConfigurationService, localStorageService, ActivityMonitor, Role) {\r\n    this.$http = $http;\r\n    this.$q = $q;\r\n    this.$state = $state;\r\n    this.notificationService = NotificationService;\r\n    this.configurationService = ConfigurationService;\r\n    this.localStorageService = localStorageService;\r\n    this.ActivityMonitor = ActivityMonitor;\r\n    this.Role = Role;\r\n\r\n    this.authentication = new Authentication();\r\n    this.activities = null;\r\n    this.userInfo = null;\r\n  }\r\n\r\n  fillAuthData() {\r\n    let authData = this.localStorageService.get('authenticationData');\r\n    if (authData) {\r\n      this.authentication.set(authData.userName);\r\n    }\r\n  }\r\n\r\n  signOut() {\r\n    this.localStorageService.remove('authenticationData');\r\n    this.authentication.clear();\r\n    this.reset();\r\n\r\n    this.ActivityMonitor.off('inactive');\r\n  }\r\n\r\n  signIn(userName, password) {\r\n    let self = this;\r\n\r\n    let data = \"grant_type=password&username=\" + userName + \"&password=\" + password + \"&client_id=\" + this.configurationService.getClientId();\r\n\r\n    let deferred = this.$q.defer();\r\n\r\n    this.$http.post(\r\n      this.configurationService.getApiBaseUrl() + 'api/token',\r\n      data,\r\n      {\r\n        headers:\r\n        {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      }).then((response) => {\r\n\r\n        this.localStorageService.set('authenticationData', {\r\n          access_token: response.data.access_token,\r\n          userName: userName\r\n        });\r\n\r\n        this.authentication.set(userName);\r\n\r\n        self.ActivityMonitor.on('inactive', () => {\r\n          self.signOut();\r\n          self.$state.go('login', { automatic: true }, { reload: true });\r\n        });\r\n\r\n        deferred.resolve(response);\r\n\r\n      }, (err, status) => {\r\n        this.signOut();\r\n        deferred.reject(err, status);\r\n      });\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n  canDo(activityId, failedState, notLoggedInState) {\r\n    let deferred = this.$q.defer();\r\n\r\n    this.getActivities().then((data) => {\r\n      if (data.indexOf(activityId.toUpperCase()) >= 0) {\r\n        deferred.resolve(true);\r\n      }\r\n      else {\r\n        if (failedState && notLoggedInState) {\r\n          if (data.length > 0) { // means authenticated\r\n            this.$state.go(failedState);\r\n          } else {\r\n            this.$state.go(notLoggedInState);\r\n          }\r\n        } else {\r\n          deferred.reject('Forbidden');\r\n        }\r\n      }\r\n    });\r\n\r\n    return deferred.promise;\r\n  }\r\n\r\n  getActivities() {\r\n    let deferred = this.$q.defer();\r\n    let promise = deferred.promise;\r\n\r\n    if (this.activities != null) {\r\n      deferred.resolve(this.activities);\r\n    }\r\n    else {\r\n      this.$http({\r\n        method: 'GET', url: this.configurationService.getApiBaseUrl() + ('api/account/activities')\r\n        // headers: {\r\n        //   'Authorization': 'Bearer ' + this.getToken()\r\n        // }\r\n      }).then(\r\n        (result) => {\r\n          this.activities = result.data;\r\n          deferred.resolve(this.activities);\r\n        });\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  reset() {\r\n    this.activities = null;\r\n    this.userInfo = null;\r\n  }\r\n\r\n  getToken() {\r\n    let authData = this.localStorageService.get('authenticationData');\r\n    if (authData == null) {\r\n      return null;\r\n    }\r\n    else {\r\n      return authData.access_token;\r\n    }\r\n  }\r\n\r\n  getUserInfo() {\r\n    let self = this;\r\n\r\n    let deferred = self.$q.defer();\r\n    let promise = deferred.promise;\r\n\r\n    if (self.userInfo !== null) {\r\n      deferred.resolve(self.userInfo);\r\n    }\r\n    else {\r\n      self.$http.get(self.configurationService.getApiBaseUrl() + 'api/account/userinfo').then(\r\n        (result) => {\r\n          self.Role.get(\r\n            { id: result.data.roleId},\r\n            (role) => {\r\n              self.userInfo = new UserInfo(\r\n                result.data.id,\r\n                result.data.email,\r\n                result.data.displayName,\r\n                result.data.roleId,\r\n                role.name,\r\n                result.data.brokerId,\r\n                result.data.state,\r\n                result.data.localeId);\r\n              deferred.resolve(self.userInfo);\r\n          })\r\n        });\r\n    }\r\n\r\n    return promise;\r\n  }\r\n}\r\n\r\n\r\nclass Authentication {\r\n  constructor() {\r\n    this.authenticated = false;\r\n    this.username = null;\r\n  }\r\n\r\n  set(userName) {\r\n    this.authenticated = true;\r\n    this.username = userName;\r\n  }\r\n\r\n  clear() {\r\n    this.authenticated = false;\r\n    this.username = null;\r\n  }\r\n}\r\n\r\nclass UserInfo {\r\n  constructor(id, email, displayName, roleId, roleName, brokerId, state, localeId) {\r\n    this.id = id;\r\n    this.email = email;\r\n    this.displayName = displayName;\r\n    this.roleId = roleId;\r\n    this.roleName = roleName;\r\n    this.brokerId = brokerId;\r\n    this.state = state;\r\n    this.localeId = localeId;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/security-service.js","export default class ImageService {\r\n    constructor() {\r\n    }\r\n\r\n    resizeImage(sourceImage, fileExt, width, height, postProcess){\r\n        var outputImage = new Image();\r\n        outputImage.width = width;\r\n        outputImage.height = height;\r\n\r\n        var self = this;\r\n\r\n        sourceImage.onload = function () {\r\n            var canvas = document.createElement(\"canvas\");\r\n            var ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            ctx.drawImage(sourceImage, 0, 0, width, height);\r\n\r\n            outputImage.src = canvas.toDataURL( self.getMIMEType(fileExt), 0.92 );\r\n\r\n            if (postProcess){\r\n                postProcess(outputImage.src);\r\n            }\r\n        }\r\n    }\r\n\r\n    getMIMEType(fileExt){\r\n        if(fileExt == 'gif')\r\n            return 'image/gif';\r\n        \r\n        if(fileExt == 'png')\r\n            return 'image/png';\r\n        else\r\n            return 'image/jpeg';\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var byteString;\r\n        if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n            byteString = atob(dataURI.split(',')[1]);\r\n        else\r\n            byteString = unescape(dataURI.split(',')[1]);\r\n\r\n        // separate out the mime component\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // write the bytes of the string to a typed array\r\n        var ia = new Uint8Array(byteString.length);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n\r\n        return new Blob([ia], {type:mimeString});\r\n    }   \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/image.service.js","export default class FileService {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        let self = this;\r\n\r\n        self.readSingleFile = function(file, readCompleted) {\r\n            var reader = new FileReader();\r\n            reader.onload = (function(f) {\r\n                return function(evt) {\r\n                    var uploadedFile = {\r\n                        filename: f.name,\r\n                        extension: f.name.split('.').pop().toLowerCase(), //extension: f.name.match(/\\.[0-9a-z]+$/i);\r\n                        size: f.size,\r\n                        data: evt.target.result\r\n                    };\r\n\r\n                    if(readCompleted){\r\n                        readCompleted(uploadedFile);\r\n                    }\r\n                }\r\n\r\n            })(file);\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    uploadFiles(sourceFileArray, singleFileReadCallBack, readCompletedCallback){\r\n\r\n        let self = this;\r\n\r\n        var filesCount = sourceFileArray.length;\r\n        var readedFilesCount = 0;\r\n\r\n        var  destFileArray = [];\r\n\r\n        var readFile = function(fileIndex){\r\n            var file = sourceFileArray[fileIndex]\r\n            self.readSingleFile(file,function (e) {\r\n                if(singleFileReadCallBack)\r\n                    singleFileReadCallBack(e);\r\n\r\n                destFileArray.push(e);\r\n                readedFilesCount++;\r\n\r\n                if(readedFilesCount < filesCount){\r\n                    readFile(readedFilesCount);\r\n                }\r\n                else{\r\n                    if(readCompletedCallback)\r\n                        readCompletedCallback(destFileArray);\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        if(filesCount > 0)\r\n            readFile(0);\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/file.service.js","export default class UtilsService {\r\n    constructor() {\r\n    }\r\n\r\n    generateGuid() {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                       .toString(16)\r\n                       .substring(1);\r\n        }\r\n\r\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n    }\r\n\r\n    generateAddress(data) {\r\n        let city = data.city,\r\n            street = data.street,\r\n            building = data.streetAddress;\r\n        return ((city && `${city}, `) + (street && `${street}, `) + (building && `${building}`)) || '';\r\n    }\r\n\r\n    alignStatusLabelsLength(value) {\r\n        let integerPart = Math.floor(value);\r\n\r\n        if (integerPart < 10) {\r\n            return value.toFixed(2);\r\n        } else if (integerPart < 100) {\r\n            return value.toFixed(1);\r\n        } else {\r\n            return Math.round(value);\r\n        }\r\n    }\r\n\r\n    formatBadgeValue(value){\r\n        if (value > 0 && value < 1000) {\r\n            value = this.alignStatusLabelsLength(value);\r\n        } else if (value >= 1000 && value < 1000000) {\r\n            value = this.alignStatusLabelsLength(value / 1000) + 'K';\r\n        } else if (value >= 1000000 && value < 1000000000) {\r\n            value = this.alignStatusLabelsLength(value / 1000000) + 'M';\r\n        } else if (value >= 1000000000) {\r\n            value = this.alignStatusLabelsLength(value / 1000000000) + 'B';\r\n        }\r\n        return value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/utils.service.js","export default class CompareObjectService {\r\n    constructor() {\r\n    }\r\n\r\n    compareSimpleAssets(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.state == obj2.state &&\r\n            obj1.name == obj2.name &&\r\n            obj1.countryId == obj2.countryId &&\r\n            obj1.city == obj2.city &&\r\n            obj1.street == obj2.street &&\r\n            obj1.building == obj2.building &&\r\n            obj1.brokerDatabaseRecordId == obj2.brokerDatabaseRecordId &&\r\n            obj1.description == obj2.description &&\r\n            obj1.notes == obj2.notes &&\r\n            obj1.floorCount == obj2.floorCount &&\r\n            obj1.brokerId == obj2.brokerId;\r\n    }\r\n\r\n    compareAssets(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        var res = this.compareSimpleAssets(obj1, obj2);\r\n\r\n        if (res && obj1.images != undefined && obj2.images != undefined) {\r\n            if (obj1.images.length != obj2.images.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.images.length && res; i++) {\r\n                res = this.compareImages(obj1.images[i], obj2.images[i]);\r\n            }\r\n        }\r\n\r\n        if (res && obj1.documents != undefined && obj2.documents != undefined) {\r\n            if (obj1.documents.length != obj2.documents.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.documents.length && res; i++) {\r\n                res = this.compareDocuments(obj1.documents[i], obj2.documents[i]);\r\n            }\r\n        }\r\n\r\n        if (res && obj1.floors != undefined && obj2.floors != undefined) {\r\n            if (obj1.floors.length != obj2.floors.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.floors.length && res; i++) {\r\n                res = this.compareFloors(obj1.floors[i], obj2.floors[i]);\r\n            }\r\n        }\r\n\r\n        if (res && obj1.spaces != undefined && obj2.spaces != undefined) {\r\n            if (obj1.spaces.length != obj2.spaces.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.spaces.length && res; i++) {\r\n                res = this.compareSpaces(obj1.spaces[i], obj2.spaces[i]);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    compareImages(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.assetId == obj2.assetId &&\r\n            obj1.filePath == obj2.filePath &&\r\n            obj1.order == obj2.order &&\r\n            obj1.originalFileName == obj2.originalFileName &&\r\n            obj1.isMain == obj2.isMain &&\r\n            obj1.contentType == obj2.contentType &&\r\n            obj1.imageFile == obj2.imageFile;\r\n    }\r\n\r\n    compareDocuments(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.assetId == obj2.assetId &&\r\n            obj1.filePath == obj2.filePath &&\r\n            obj1.originalFileName == obj2.originalFileName &&\r\n            obj1.contentType == obj2.contentType &&\r\n            obj1.documentFile == obj2.documentFile &&\r\n            obj1.notes == obj2.notes;\r\n    }\r\n\r\n    compareSimpleSpaces(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.assetId == obj2.assetId &&\r\n            obj1.floorId == obj2.floorId &&\r\n            obj1.brokerId == obj2.brokerId &&\r\n            obj1.number == obj2.number &&\r\n            obj1.type == obj2.type &&\r\n            obj1.rentableArea == obj2.rentableArea &&\r\n            obj1.state == obj2.state &&\r\n            obj1.marketingDescription == obj2.marketingDescription &&\r\n            obj1.notes == obj2.notes;\r\n    }\r\n\r\n    compareSpaces(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        var res = this.compareSimpleSpaces(obj1, obj2);\r\n\r\n        if (res && obj1.images != undefined && obj2.images != undefined) {\r\n            if (obj1.images.length != obj2.images.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.images.length && res; i++) {\r\n                res = this.compareImages(obj1.images[i], obj2.images[i]);\r\n            }\r\n        }\r\n\r\n        if (res && obj1.documents != undefined && obj2.documents != undefined) {\r\n            if (obj1.documents.length != obj2.documents.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.documents.length && res; i++) {\r\n                res = this.compareDocuments(obj1.documents[i], obj2.documents[i]);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    compareSimpleFloors(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.number == obj2.number &&\r\n            obj1.description == obj2.description &&\r\n            obj1.assetId == obj2.assetId &&\r\n            obj1.brokerId == obj2.brokerId;\r\n    }\r\n\r\n    compareFloors(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        var res = this.compareSimpleFloors(obj1, obj2);\r\n\r\n        if (res && obj1.spaces != undefined && obj2.spaces != undefined) {\r\n            if (obj1.spaces.length != obj2.spaces.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.spaces.length && res; i++) {\r\n                res = this.compareSpaces(obj1.spaces[i], obj2.spaces[i]);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    compareClients(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        var res = this.compareSimpleClients(obj1, obj2);\r\n\r\n        if (res && obj1.representatives != undefined && obj2.representatives != undefined) {\r\n            if (obj1.representatives.length != obj2.representatives.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < obj1.representatives.length && res; i++) {\r\n                res = this.compareRepresentatives(obj1.representatives[i], obj2.representatives[i]);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    compareSimpleClients(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.name == obj2.name &&\r\n            obj1.state == obj2.state &&\r\n            obj1.countryId == obj2.countryId &&\r\n            obj1.city == obj2.city &&\r\n            obj1.street == obj2.street &&\r\n            obj1.building == obj2.building &&\r\n            obj1.notes == obj2.notes;\r\n    }\r\n\r\n    compareRepresentatives(obj1, obj2) {\r\n        if (obj1 == undefined || obj2 == undefined)\r\n            return false;\r\n\r\n        return obj1.id == obj2.id &&\r\n            obj1.name == obj2.name &&\r\n            obj1.mobileNumber == obj2.mobileNumber &&\r\n            obj1.officeNumber == obj2.officeNumber &&\r\n            obj1.email == obj2.email;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/compare.service.js","import MainHeaderComponent from './mainheader/mainheader.component';\r\nimport Sidebar from './sidebar/sidebar.component';\r\nimport RightSidebar from './right-sidebar/right-sidebar.component';\r\nimport NavigationCreateItemsComponent from './navigation/navigation-create-items.component';\r\nimport ImageGalleryComponent from './imagegallery/imagegallery.component';\r\nimport ImageCropperComponent from './imagegallery/imagecropper.component';\r\nimport AttachementsComponent from './attachements/attachements.component';\r\nimport 'ng-file-upload';\r\nimport BreadcrumbPanelComponent from './breadcrumbpanel/breadcrumbpanel.component'\r\nimport SpaceDescription from './space-description/space-description.component';\r\nimport TenantDescription from './tenant-description/tenant-description.component';\r\nimport BodyBlocker from './body-blocker/body-blocker.component';\r\nimport UserMenu from './usermenu/usermenu.component';\r\nimport ActionMenu from './actionmenu/actionmenu.component';\r\nimport Footer from './footer/footer.component';\r\n\r\nvar module = angular.module('tower360.components', ['ngFileUpload'])\r\n    .component('mainheader', MainHeaderComponent)\r\n    .component('sidebar', Sidebar)\r\n    .component('rightSidebar', RightSidebar)\r\n    .component('navigationCreateItems', NavigationCreateItemsComponent)\r\n    .component('imagegallery', ImageGalleryComponent)\r\n    .component('imagecropper', ImageCropperComponent)\r\n    .component('attachements', AttachementsComponent)\r\n    .component('breadcrumbPanel', BreadcrumbPanelComponent)\r\n    .component('spaceDescription', SpaceDescription)\r\n    .component('tenantDescription', TenantDescription)\r\n    .component('bodyBlocker', BodyBlocker)\r\n    .component('userMenu', UserMenu)\r\n    .component('actionMenu', ActionMenu)\r\n    .component('footer', Footer);\r\n\r\nexport default module;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/components.js","// import template and controller from individual component directory\r\nimport Controller from './mainheader.controller'\r\nimport Template from './mainheader.template.html'\r\nimport Messages from '../../messages';\r\n\r\nlet MainHeaderComponent = {\r\n  bindings: {\r\n\r\n  },\r\n  controller: Controller,\r\n  template: Template,\r\n  Messages: Messages\r\n}\r\n\r\nexport default MainHeaderComponent;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/mainheader/mainheader.component.js","import { LocaleId, updateLocale } from '../../app.localization';\r\nimport Messages from '../../messages';\r\n\r\nexport default class MainHeaderController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, User, Broker, Locale, SecurityService, Activities) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.securityService = SecurityService;\r\n        this.activities = Activities;\r\n        this.Locale = Locale;\r\n        this.User = User;\r\n        this.Broker = Broker;\r\n        this.messages = Messages;\r\n\r\n        this.loadUserInfo();\r\n        this.applyActivities();\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n        self.Locale.query(\r\n            {},\r\n            (result) => {\r\n                self.$scope.languages = result;\r\n            });\r\n    }\r\n\r\n    setLanguage(item) {\r\n        let self = this;\r\n\r\n        var currentLocaleId = LocaleId;\r\n        if (currentLocaleId != item.id) {\r\n            self.updateUserLocale(this.userInfo.id, item.id);\r\n        }\r\n    }\r\n\r\n    minimalize () {\r\n        if ($(window).outerWidth() < 769) {\r\n            $(\"body\").toggleClass(\"show-sidebar\");\r\n        } \r\n        else {\r\n            $(\"body\").toggleClass(\"hide-sidebar\");\r\n        }\r\n    } \r\n\r\n    signOut() {\r\n        this.securityService.signOut();\r\n        this.$state.go('login', null, { reload: true });\r\n    }\r\n\r\n    loadUserInfo() {\r\n        let self = this;\r\n\r\n        this.securityService.getUserInfo().then(result => {\r\n            self.userInfo = result;\r\n            if (result.roleId === 2) {\r\n                this.loadBrokerInfo();\r\n            }\r\n        })\r\n    }\r\n\r\n    loadBrokerInfo() {\r\n        this.Broker.get({ id: this.userInfo.brokerId }).$promise.then(result => {\r\n            this.brokerInfo = result;\r\n        });\r\n    }\r\n\r\n    updateUserLocale(userId, localeId) {\r\n        var self = this;\r\n\r\n        self.userInfo.localeId = localeId;\r\n        self.User.update({ id: userId }, self.userInfo,\r\n            (result) => {\r\n                self.$state.reload();\r\n            }\r\n        );\r\n    }\r\n\r\n    applyActivities() {\r\n        this.securityService.getActivities().then(() => {\r\n            this.securityService.canDo(this.activities.HomeView)\r\n                .then(\r\n                (result) => this.homeAvailable = result,\r\n                () => this.homeAvailable = false);\r\n            this.securityService.canDo(this.activities.BrokersView)\r\n                .then(\r\n                (result) => this.brokersAvailable = result,\r\n                () => this.brokersAvailable = false);\r\n            this.securityService.canDo(this.activities.UsersView)\r\n                .then(\r\n                (result) => this.usersAvailable = result,\r\n                () => this.usersAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsManage)\r\n                .then(\r\n                (result) => this.assetsAvailable = result,\r\n                () => this.assetsAvailable = false);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/mainheader/mainheader.controller.js","module.exports = \"<div id=\\\"header\\\">\\r\\n    <div id=\\\"logo\\\" class=\\\"navbar-header\\\">\\r\\n        <!--<a class=\\\"navbar-brand\\\" ui-sref=\\\"home\\\"><img src=\\\"img/header-logo.png\\\" alt=\\\"Tower 360 Logo\\\"></a>-->\\r\\n        <div ng-if=\\\"$ctrl.brokerInfo\\\" class=\\\"header-broker-name\\\">\\r\\n            {{ $ctrl.brokerInfo.name }}\\r\\n        </div>\\r\\n        <div ng-if=\\\"!$ctrl.brokerInfo && $ctrl.userInfo.roleId === 1\\\" class=\\\"header-broker-name\\\">\\r\\n            {{ $ctrl.messages('administrator') }}\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mobile-menu\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle mobile-menu-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mobile-collapse\\\">\\r\\n            <i class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"collapse mobile-navbar\\\" id=\\\"mobile-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li>\\r\\n                    <a ui-sref=\\\"#\\\">{{$ctrl.messages('mainheader.settings.account')}}</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a ng-click=\\\"$ctrl.signOut()\\\">{{$ctrl.messages('mainheader.signout')}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <nav role=\\\"navigation\\\">\\r\\n        <div class=\\\"header-link hide-menu\\\" ng-click=\\\"$ctrl.minimalize()\\\"><i class=\\\"fa fa-bars\\\"></i></div>\\r\\n\\r\\n        <div id=\\\"navbar\\\" class=\\\"navbar-inverse navbar-right\\\">\\r\\n            <user-menu user-info=\\\"$ctrl.userInfo\\\" broker-info=\\\"$ctrl.brokerInfo\\\"/>  \\r\\n            <action-menu user-info=\\\"$ctrl.userInfo\\\" broker-info=\\\"$ctrl.brokerInfo\\\"/>\\r\\n        </div>\\r\\n    </nav>\\r\\n</div>\\r\\n<script>\\r\\n    $(document).ready(function(){\\r\\n        $('.dropdown-submenu a.select-language').on(\\\"click\\\", function(e){\\r\\n            $(this).next('ul').toggle();\\r\\n            e.stopPropagation();\\r\\n            e.preventDefault();\\r\\n        });\\r\\n    });\\r\\n</script>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/mainheader/mainheader.template.html\n// module id = 688\n// module chunks = 0","import Controller from './sidebar.controller'\r\nimport Template from './sidebar.template.html'\r\n\r\nlet SidebarComponent = {\r\n  bindings: {\r\n\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default SidebarComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/sidebar/sidebar.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nexport default class Sidebar {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, $state, $stateParams, SecurityService, UtilsService, Activities, Asset, Broker) {\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.$state = $state;\r\n        this.$stateParams = $stateParams;\r\n        this.securityService = SecurityService;\r\n        this.utils = UtilsService;\r\n        this.activities = Activities;\r\n        this.Asset = Asset;\r\n        this.Broker = Broker;\r\n        this.messages = Messages;\r\n\r\n        this.loadUserInfo();\r\n        this.init();\r\n        this.applyActivities();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n        this.$rootScope.$on('$stateChangeSuccess', \r\n            function(event, toState, toParams, fromState, fromParams){ \r\n                if(toState.name != fromState.name){\r\n                    self.resetSettings();\r\n                    self.updateMenu(toState, toParams);\r\n                    $('.nav li a').blur();\r\n                }\r\n            });\r\n\r\n        self.updateMenu(self.$state.current, self.$stateParams);\r\n    }\r\n\r\n    loadUserInfo() {\r\n        this.securityService.getUserInfo().then(result => {\r\n            this.userInfo = result;\r\n            if (result.roleId === 2) {\r\n                this.loadBrokerInfo();\r\n            }\r\n        });\r\n    }\r\n\r\n    loadBrokerInfo() {\r\n        this.Broker.get({ id: this.userInfo.brokerId }).$promise.then(result => {\r\n            this.brokerInfo = result;\r\n        });\r\n    }\r\n\r\n    applyActivities() {\r\n        this.securityService.getActivities().then(() => {\r\n            this.securityService.canDo(this.activities.HomeView)\r\n                .then(\r\n                    (result) => this.homeAvailable = result,\r\n                    () => this.homeAvailable = false);\r\n            this.securityService.canDo(this.activities.BrokersView)\r\n                .then(\r\n                    (result) => this.brokersAvailable = result,\r\n                    () => this.brokersAvailable = false);\r\n            this.securityService.canDo(this.activities.UsersView)\r\n                .then(\r\n                    (result) => this.usersAvailable = result,\r\n                    () => this.usersAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsManage)\r\n                .then(\r\n                    (result) => this.assetsAvailable = result,\r\n                    () => this.assetsAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsView)\r\n                .then(\r\n                    (result) => this.assetsViewAvailable = result,\r\n                    () => this.assetsViewAvailable = false);\r\n            this.securityService.canDo(this.activities.ClientsManage)\r\n                .then(\r\n                    (result) => this.clientsAvailable = result,\r\n                    () => this.clientsAvailable = false);\r\n        });\r\n    }\r\n\r\n    updateMenu(state, stateParams) {\r\n        let self = this;\r\n\r\n        self.assetsClientMenu = self.isAssetsClientMenu(state, stateParams);\r\n        self.globalClientMenu = !self.assetsClientMenu;\r\n    }\r\n\r\n    isActive(name) {\r\n        let states = [];\r\n        switch (name) {\r\n            case 'users':\r\n                states = ['users', 'user'];\r\n                break;\r\n            case 'brokers':\r\n                states = ['brokers', 'broker'];\r\n                break;\r\n            case 'assets':\r\n                states = ['assets', 'edit-asset', 'asset-stats'];\r\n                break;\r\n            case 'asset-stats-spaces':\r\n                states = ['asset-stats-spaces'];\r\n                break;\r\n            case 'asset-stats-tenants':\r\n                states = ['asset-stats-tenants'];\r\n                break;\r\n            case 'asset-stats-stacking-plan':\r\n                states = ['asset-stats-stacking-plan'];\r\n                break;\r\n            case 'clients':\r\n                states = ['clients', 'create-client', 'edit-client'];\r\n                break;\r\n        }\r\n\r\n        for (let i = 0, l = states.length; i < l; i++) {\r\n            if (this.$state.includes(states[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    resetSettings() {\r\n\r\n        //reset settings for asset        \r\n        //this.showAssetPanel = false;\r\n    }\r\n\r\n    isAssetsClientMenu(state, stateParams){\r\n        let self = this;\r\n        if(state.name === 'asset-stats-spaces' || state.name === 'asset-stats-stacking-plan' || state.name === 'asset-stats-tenants') {\r\n            self.$scope.assetId = state.resolve.assetId[1](stateParams);\r\n            self.Asset.get({id: this.$scope.assetId}).$promise.then(asset => {\r\n                this.asset = asset;\r\n                if(this.asset){\r\n                    this.assetAddress = this.utils.generateAddress(this.asset)\r\n                    this.showAssetPanel = true;\r\n                }\r\n            })\r\n            return true;\r\n        } else {\r\n            this.showAssetPanel = false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    signOut() {\r\n        this.securityService.signOut();\r\n        this.$state.go('login', null, { reload: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/sidebar/sidebar.controller.js","module.exports = \"<ul class=\\\"nav nav-sidebar\\\">\\r\\n    <div class=\\\"breadcrumb-div\\\" ng-if=\\\"!$ctrl.showAssetPanel\\\"></div>\\r\\n    <div class=\\\"sidebar-asset-image-panel\\\" ng-if=\\\"$ctrl.showAssetPanel\\\">\\r\\n        <div class=\\\"sidebar-asset-image\\\">\\r\\n            <img draggable=\\\"false\\\" ng-src=\\\"{{($ctrl.asset.mainImageUrl ? $ctrl.asset.mainImageUrl: '../../img/building-placeholder.png')}}\\\"/>\\r\\n        </div>\\r\\n        <span class=\\\"sidebar-asset-title\\\">{{$ctrl.asset.name}}</span>\\r\\n        <span class=\\\"sidebar-asset-address\\\">{{$ctrl.assetAddress}}</span>\\r\\n    </div>\\r\\n    <li ng-show=\\\"$ctrl.brokersAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('brokers')}\\\">\\r\\n        <a ui-sref=\\\"brokers\\\">{{$ctrl.messages('sidebar.brokers')}}</a>\\r\\n    </li>\\r\\n    <li ng-show=\\\"$ctrl.usersAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('users')}\\\">\\r\\n        <a ui-sref=\\\"users\\\">{{$ctrl.messages('sidebar.users')}}</a>\\r\\n    </li>\\r\\n    <li ng-show=\\\"$ctrl.assetsAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('assets')}\\\">\\r\\n        <a ui-sref=\\\"assets\\\">{{$ctrl.messages('sidebar.assets')}}</a>\\r\\n    </li>\\r\\n    <div ng-show=\\\"$ctrl.globalClientMenu\\\">\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('assets')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats\\\">{{$ctrl.messages('sidebar.assets')}}</a>\\r\\n        </li>\\r\\n        <li ng-show=\\\"$ctrl.clientsAvailable\\\" ng-class=\\\"{active: $ctrl.isActive('clients')}\\\">\\r\\n            <a ui-sref=\\\"clients\\\">{{$ctrl.messages('sidebar.clients')}}</a>\\r\\n        </li>\\r\\n    </div>\\r\\n    <div ng-show=\\\"$ctrl.assetsClientMenu\\\">\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('asset-stats-spaces')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats-spaces({id: assetId})\\\">{{$ctrl.messages('sidebar.spaces')}}</a>\\r\\n        </li>\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('asset-stats-tenants')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats-tenants({id: assetId})\\\">{{$ctrl.messages('sidebar.clients')}}</a>\\r\\n        </li>\\r\\n        <li ng-show=\\\"$ctrl.assetsViewAvailable && $ctrl.userInfo.roleId == 2\\\" ng-class=\\\"{active: $ctrl.isActive('asset-stats-stacking-plan')}\\\">\\r\\n            <a ui-sref=\\\"asset-stats-stacking-plan({id: assetId})\\\">{{$ctrl.messages('sidebar.stackingplan')}}</a>\\r\\n        </li>\\r\\n    </div>\\r\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/sidebar/sidebar.template.html\n// module id = 691\n// module chunks = 0","import Controller from './right-sidebar.controller'\r\nimport Template from './right-sidebar.template.html'\r\n\r\nlet RightSidebarComponent = {\r\n  bindings: {\r\n\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default RightSidebarComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/right-sidebar/right-sidebar.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nexport default class RightSidebar {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, $state, $timeout) {\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.$state = $state;\r\n        this.$timeout = $timeout;\r\n        this.messages = Messages;\r\n        this.bodyCl = 'right-sidebar-opened';\r\n        this.bodyBlockerCl = 'blocker-show';\r\n\r\n        this.updateContent = this.updateContent.bind(this);\r\n        this.close = this.close.bind(this);\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$scope.$on('right-sidebar:open', this.updateContent);\r\n        this.$scope.$on('right-sidebar:close', this.close);\r\n    }\r\n\r\n    updateContent(e, content) {\r\n        this.$scope.contentType = null;\r\n        this.$scope.content = null;\r\n\r\n        this.$timeout(() => {\r\n            this.$scope.contentType = content.type;\r\n            this.$scope.content = content.data;\r\n        });\r\n        if (!this.$scope.visible) {\r\n            $(document.body).addClass(this.bodyCl);\r\n            this.$timeout(() => {\r\n                $(document.body).addClass(this.bodyBlockerCl);\r\n            });\r\n            this.$scope.visible = true;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.$scope.visible = false;\r\n        $(document.body).removeClass(this.bodyBlockerCl);\r\n        this.$timeout(() => {\r\n            this.$scope.contentType = null;\r\n            this.$scope.content = null;\r\n            $(document.body).removeClass(this.bodyCl);\r\n        }, 300);\r\n        this.$rootScope.$broadcast('right-sidebar:closed');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/right-sidebar/right-sidebar.controller.js","module.exports = \"<div id=\\\"right-sidebar\\\" ng-class=\\\"visible && 'visible'\\\">\\r\\n    <div ng-if=\\\"contentType === 'loading'\\\">\\r\\n        <button class=\\\"btn btn-default m-b-m m-t-m m-l-m\\\" ng-click=\\\"$ctrl.close()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"loading\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n    <space-description ng-if=\\\"contentType === 'spaceDescription'\\\" data=\\\"content\\\" context=\\\"'sidebar'\\\"></space-description>\\r\\n    <tenant-description ng-if=\\\"contentType === 'tenantDescription'\\\" data=\\\"content\\\" context=\\\"'sidebar'\\\"></tenant-description>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/right-sidebar/right-sidebar.template.html\n// module id = 694\n// module chunks = 0","import Controller from './navigation-create-items.controller'\r\nimport Template from './navigation-create-items.template.html'\r\n\r\nlet NavigationCreateItemsComponent = {\r\n  bindings: {\r\n      item: '=?'\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default NavigationCreateItemsComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navigation/navigation-create-items.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nimport UserEditModalController from '../../users/user-edit-modal.controller';\r\nimport UserEditModalTemplate from '../../users/user-edit-modal.template.html';\r\nimport BrokerEditModalController from '../../brokers/broker-edit-modal.controller';\r\nimport BrokerEditModalTemplate from '../../brokers/broker-edit-modal.template.html';\r\nimport AssetEditModalController from '../../assets/asset-edit-modal.controller';\r\nimport AssetEditModalTemplate from '../../assets/asset-edit-modal.template.html';\r\nimport ClientEditModalController from '../../clients/client-edit-modal.controller';\r\nimport ClientEditModalTemplate from '../../clients/client-edit-modal.template.html';\r\n\r\nexport default class NavigationCreateItemsController {\r\n    /*@ngInject*/\r\n    constructor($scope, SecurityService, Activities, $uibModal) {\r\n        this.$scope = $scope;\r\n        this.securityService = SecurityService;\r\n        this.activities = Activities;\r\n        this.$uibModal = $uibModal;\r\n        this.messages = Messages;\r\n\r\n        this.init();\r\n        this.applyActivities();\r\n    }\r\n\r\n    init() {\r\n        this.$scope.addNewUser = () => {\r\n            this.$uibModal.open({\r\n                controller: UserEditModalController,\r\n                template: UserEditModalTemplate,\r\n                resolve: {\r\n                    userObject: null\r\n                }\r\n            });\r\n        };\r\n\r\n        this.$scope.addNewBroker = () => {\r\n            this.$uibModal.open({\r\n                controller: BrokerEditModalController,\r\n                template: BrokerEditModalTemplate,\r\n                resolve: {\r\n                    brokerObject: null\r\n                }\r\n            });\r\n        };\r\n\r\n        this.$scope.addNewSet = () => {\r\n            this.$uibModal.open({\r\n                controller: AssetEditModalController,\r\n                template: AssetEditModalTemplate,\r\n                resolve: {\r\n                    assetObject: null\r\n                }\r\n            });\r\n        };\r\n\r\n        this.$scope.addNewClient = () => {\r\n            this.$uibModal.open({\r\n                controller: ClientEditModalController,\r\n                template: ClientEditModalTemplate,\r\n                resolve: {\r\n                    clientId: null\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    applyActivities() {\r\n        this.securityService.getActivities().then(() => {\r\n            this.securityService.canDo(this.activities.HomeView)\r\n                .then(\r\n                    (result) => this.homeAvailable = result,\r\n                    () => this.homeAvailable = false);\r\n            this.securityService.canDo(this.activities.BrokersView)\r\n                .then(\r\n                    (result) => this.brokersAvailable = result,\r\n                    () => this.brokersAvailable = false);\r\n            this.securityService.canDo(this.activities.UsersView)\r\n                .then(\r\n                    (result) => this.usersAvailable = result,\r\n                    () => this.usersAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsManage)\r\n                .then(\r\n                    (result) => this.assetsAvailable = result,\r\n                    () => this.assetsAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsView)\r\n                .then(\r\n                    (result) => this.assetsViewAvailable = result,\r\n                    () => this.assetsViewAvailable = false);\r\n            this.securityService.canDo(this.activities.ClientsManage)\r\n                .then(\r\n                    (result) => this.clientsAvailable = result,\r\n                    () => this.clientsAvailable = false);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navigation/navigation-create-items.controller.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class UserController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $uibModalInstance, User, userObject, Broker, Role, Locale, StoreAdapter, NotificationService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.User = User;\r\n        this.userObject = userObject;\r\n        this.Broker = Broker;\r\n        this.Role = Role;\r\n        this.Locale = Locale;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.notificationService = NotificationService;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.validationGroup = 'user-edit';\r\n\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        this.$scope.editMode = this.userObject != null;\r\n        this.isSaveOperationDisable = true;\r\n\r\n        if (this.$scope.editMode) {\r\n            this.$scope.user = this.userObject;\r\n        } else {\r\n            this.$scope.user = {\r\n                email: '',\r\n                displayName: '',\r\n                brokerId: null,\r\n                roleId: 1\r\n            }\r\n        }\r\n\r\n        this.$scope.emailSettings = {\r\n            placeholder: Messages('users.placeholder.email'),\r\n            bindingOptions: {\r\n                value: 'user.email',\r\n                disabled: 'editMode'\r\n            }\r\n        };\r\n        this.$scope.emailValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 256, min: 3, trim: true },\r\n                { type: 'email', message: Messages('validation.email') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.displaynameSettings = {\r\n            placeholder: Messages('users.placeholder.displayname'),\r\n            bindingOptions: {\r\n                value: 'user.displayName '\r\n            }\r\n        };\r\n        this.$scope.displaynameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 50, min: 1, trim: true }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        let rolesStore = this.storeAdapter.createStore(this.Role, {}, this.errorHandler);\r\n\r\n        rolesStore.load().done((result) => {\r\n            this.$scope.roleSelectSettings = {\r\n                items: result,\r\n                displayExpr: 'name',\r\n                valueExpr: 'id',\r\n                bindingOptions: {\r\n                    value: 'user.roleId'\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$scope.roleValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        let localesStore = this.storeAdapter.createStore(this.Locale, {}, this.errorHandler);\r\n\r\n        localesStore.load().done((result) => {\r\n            console.log(result);\r\n            this.$scope.localeSelectSettings = {\r\n                items: result,\r\n                displayExpr: 'localeName',\r\n                valueExpr: 'id',\r\n                bindingOptions: {\r\n                    value: 'user.localeId'\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$scope.localeValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        let brokersStore = this.storeAdapter.createStore(this.Broker, {}, this.errorHandler);\r\n\r\n        brokersStore.load().done((result) => {\r\n            this.$scope.brokerSelectSettings = {\r\n                items: result,\r\n                displayExpr: 'name',\r\n                valueExpr: 'id',\r\n                bindingOptions: {\r\n                    value: 'user.brokerId'\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$scope.brokerValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.validateAndSave = () => {\r\n            let result = ValidationEngine.getGroupConfig(this.validationGroup).validate();\r\n            if (result.isValid) {\r\n                this.saveInProgress = true;\r\n                this.isSaveOperationDisable = true;\r\n\r\n                if (!this.$scope.editMode) {\r\n                    this.User.save(this.$scope.user,\r\n                        (result) => {\r\n                            this.notificationService.success(Messages('users.message.created'));\r\n                            this.saveInProgress = false;\r\n                            this.$state.go('user', {id : result.id}, {reload: false});\r\n                            this.$uibModalInstance.close(result);\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            this.saveInProgress = false;\r\n                        }\r\n                    );\r\n                } else {\r\n                    this.User.update({ id: this.$scope.user.id }, this.$scope.user,\r\n                        (result) => {\r\n                            this.notificationService.success(Messages('users.message.updated'));\r\n                            self.saveInProgress = false;\r\n                            this.$uibModalInstance.close(result);\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            this.saveInProgress = false;\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = () => {\r\n            ValidationEngine.removeGroup(this.validationGroup);\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user-edit-modal.controller.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport Messages from './messages';\r\n\r\nconst CONSTANTS = {\r\n    devExtremeStoreGenerator: function(values) {\r\n        let store = {\r\n            data: [],\r\n            key: 'value'\r\n        };\r\n        values.forEach(function(item) {\r\n            store.data.push({\r\n                value: item.value,\r\n                display: item.text\r\n            });\r\n        });\r\n        return new ArrayStore(store);\r\n    },\r\n\r\n    states: [\r\n        { value: 1, text: Messages('state.pending') },\r\n        { value: 2, text: Messages('state.active') },\r\n        { value: 3, text: Messages('state.archived') }\r\n    ],\r\n    assetStateStore: function() {\r\n        return this.devExtremeStoreGenerator(this.states);\r\n    },\r\n    assetStateStorePlain: function() {\r\n        return this.states.slice(0);\r\n    },\r\n\r\n    userStateStore: function() {\r\n        return new ArrayStore({\r\n            data: [\r\n                { value: 2, display: Messages('state.active') },\r\n                { value: 3, display: Messages('state.archived') }\r\n            ],\r\n            key: \"value\"\r\n        })\r\n    },\r\n\r\n    brokerStateStore: function() {\r\n        return new ArrayStore({\r\n            data: [\r\n                { value: 1, display: Messages('state.active') },\r\n                { value: 2, display: Messages('state.archived') }\r\n            ],\r\n            key: \"value\"\r\n        })\r\n    },\r\n\r\n    countries: [{\r\n        value: 1,\r\n        text: Messages('country.germany'),\r\n        isoCode: 'de'\r\n    }],\r\n    countryStore: function() {\r\n        return this.devExtremeStoreGenerator(this.countries);\r\n    },\r\n    countryStorePlain: function() {\r\n        return this.countries.slice(0);\r\n    },\r\n\r\n    clientsStateStore: function() {\r\n        return new ArrayStore({\r\n            data: [\r\n                { value: 1, display: Messages('state.active') },\r\n                { value: 2, display: Messages('state.archived') }\r\n            ],\r\n            key: \"value\"\r\n        })\r\n    },\r\n\r\n    industry: [\r\n        { value: 1, text: Messages('industry.technology') },\r\n        { value: 2, text: Messages('industry.media') },\r\n        { value: 3, text: Messages('industry.education') },\r\n        { value: 4, text: Messages('industry.trade') },\r\n        { value: 5, text: Messages('industry.government') },\r\n        { value: 6, text: Messages('industry.healthcare') },\r\n        { value: 7, text: Messages('industry.logistics') },\r\n        { value: 8, text: Messages('industry.consulting') },\r\n        { value: 9, text: Messages('industry.retail') },\r\n        { value: 10, text: Messages('industry.telco') },\r\n        { value: 11, text: Messages('industry.food') },\r\n        { value: 12, text: Messages('industry.finance') },\r\n        { value: 13, text: Messages('industry.residential') },\r\n        { value: 14, text: Messages('industry.travel') },\r\n        { value: 15, text: Messages('industry.wellness') },\r\n        { value: 16, text: Messages('industry.hr') },\r\n        { value: 17, text: Messages('industry.real-estate') },\r\n        { value: 18, text: Messages('industry.industrials') }\r\n    ],\r\n    clientsIndustryStore: function() {\r\n        return this.devExtremeStoreGenerator(this.industry);\r\n    },\r\n    clientsIndustryPlain: function() {\r\n        return this.industry;\r\n    },\r\n\r\n    defaultAvailablePageSizes: function() {\r\n        return [10, 20, 50];\r\n    },\r\n\r\n    defaultPageSize: function() {\r\n        return 10;\r\n    },\r\n\r\n    defaultGridSettings: function() {\r\n        var settings = {\r\n            allowColumnResizing: true,\r\n            showBorders: true,\r\n            showRowLines: true,\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: this.defaultPageSize()\r\n            },\r\n            pager: {\r\n                showPageSizeSelector: true,\r\n                allowedPageSizes: this.defaultAvailablePageSizes(),\r\n                showInfo: true\r\n            },\r\n            filterRow: {\r\n                visible: true\r\n            },\r\n            grouping: {\r\n                contextMenuEnabled: true\r\n            },\r\n            groupPanel: {\r\n                visible: true\r\n            }\r\n        };\r\n\r\n        return JSON.parse(JSON.stringify(settings));\r\n    },\r\n\r\n    spaceTypes: [\r\n        { value: 1, text: Messages('assets.spaces.office') },\r\n        { value: 2, text: Messages('assets.spaces.garageUnderground') },\r\n        { value: 3, text: Messages('assets.spaces.roofTerrace') },\r\n        { value: 4, text: Messages('assets.spaces.outerSurface') },\r\n        { value: 5, text: Messages('assets.spaces.warehouse') },\r\n        { value: 6, text: Messages('assets.spaces.handlesSurface') },\r\n        { value: 7, text: Messages('assets.spaces.gastronomy') },\r\n        { value: 8, text: Messages('assets.spaces.archive') },\r\n        { value: 9, text: Messages('assets.spaces.technicalRoom') },\r\n        { value: 10, text: Messages('assets.spaces.flat') },\r\n        { value: 11, text: Messages('assets.spaces.retail') }\r\n    ],\r\n    spaceTypeStore: function() {\r\n        return this.devExtremeStoreGenerator(this.spaceTypes);\r\n    },\r\n    spaceTypeStorePlain: function() {\r\n        return this.spaceTypes.slice(0);\r\n    },\r\n\r\n    spaceStateStore: function() {\r\n        return new ArrayStore({\r\n            data: [\r\n                { value: 1, display: Messages('state.active') },\r\n                { value: 2, display: Messages('state.archived') }\r\n            ],\r\n            key: \"value\"\r\n        })\r\n    },\r\n\r\n    phonePattern: function() {\r\n        return /^\\(\\d{3}\\)\\d{3}-\\d{4}$/i;\r\n    }\r\n};\r\n\r\nexport default CONSTANTS;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/constants.js","module.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('users.edit.title') : Messages('users.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-email\\\" class=\\\"control-label\\\">{{Messages('users.email')}}</label>\\r\\n                    <div id=\\\"field-email\\\" dx-text-box=\\\"emailSettings\\\" dx-validator=\\\"emailValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('users.displayname')}}</label>\\r\\n                    <div id=\\\"field-name\\\" dx-text-box=\\\"displaynameSettings\\\" dx-validator=\\\"displaynameValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-role\\\" class=\\\"control-label\\\">{{Messages('users.role')}}</label>\\r\\n                    <div id=\\\"field-role\\\" dx-select-box=\\\"roleSelectSettings\\\" dx-validator=\\\"roleValidationRules\\\"></div>\\r\\n                    <p class=\\\"help-block\\\"><small>{{Messages('users.role.help')}}</small></p>\\r\\n                </div>\\r\\n                <div ng-if=\\\"user.roleId == 2\\\" class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-broker\\\" class=\\\"control-label\\\">{{Messages('users.broker')}}</label>\\r\\n                    <div id=\\\"field-broker\\\" dx-select-box=\\\"brokerSelectSettings\\\" dx-validator=\\\"brokerValidationRules\\\"></div>\\r\\n                    <p class=\\\"help-block\\\"><small>{{Messages('users.broker.help')}}</small></p>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-role\\\" class=\\\"control-label\\\">{{Messages('users.locale')}}</label>\\r\\n                    <div id=\\\"field-role\\\" dx-select-box=\\\"localeSelectSettings\\\" dx-validator=\\\"localeValidationRules\\\"></div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('users.saving') : Messages('users.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('users.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/user-edit-modal.template.html\n// module id = 699\n// module chunks = 0","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class BrokerEditController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $timeout, $uibModalInstance, brokerObject, Broker, Role, StoreAdapter, NotificationService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.brokerObject = brokerObject;\r\n        this.Broker = Broker;\r\n        this.Role = Role;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.notificationService = NotificationService;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.validationGroup = 'broker-edit';\r\n        this.addressValidationGroup = 'broker-edit-address';\r\n        this.$timeout = $timeout;\r\n\r\n        this.init();\r\n        this.initForm();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        this.$timeout(() => {\r\n            this.initAutocomplete();\r\n        });\r\n\r\n        this.$scope.clearAddress = function(){\r\n            self.brokerObject.address = null;\r\n        }\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.$scope.editMode = this.brokerObject !== null;\r\n        this.isSaveOperationDisable = true;\r\n\r\n        if (this.$scope.editMode) {\r\n            this.$scope.broker = this.brokerObject;\r\n        } else {\r\n            this.$scope.broker = {\r\n                name: '',\r\n                countryId: 1,\r\n                city: '',\r\n                street: '',\r\n                streetAddress: '',\r\n                postCode: '',\r\n            }\r\n        }\r\n\r\n        this.$scope.nameSettings = {\r\n            placeholder: Messages('brokers.placeholder.name'),\r\n            bindingOptions: {\r\n                value: 'broker.name'\r\n            }\r\n        };\r\n        this.$scope.nameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 255, message: Messages('validation.maxLength') },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.countryStore = Constants.countryStore();\r\n        this.$scope.countrySettings = {\r\n            dataSource: this.countryStore,\r\n            displayExpr: 'display',\r\n            valueExpr: 'value',\r\n            bindingOptions: {\r\n                value: 'broker.countryId'\r\n            }\r\n        };\r\n\r\n        this.$scope.countryValidationRules = {\r\n            validationRules: [],\r\n            validationGroup: this.validationGroup,\r\n            onOptionChanged: function() {\r\n                self.setAutocompleteCountry();\r\n            }\r\n        };\r\n\r\n        this.$scope.broker.address = '';\r\n        this.$scope.addressSettings = {\r\n            bindingOptions: {\r\n                value: 'broker.address',\r\n                disabled: '!broker.countryId'\r\n            }\r\n        };\r\n        this.$scope.addressValidationRules = {\r\n            validationRules: [{\r\n                type: 'custom',\r\n                validationCallback: function(options) {\r\n                    if (!self.$scope.broker.countryId) {\r\n                        options.rule.message = Messages('address.validation.countryRequired');\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }],\r\n            validationGroup: this.addressValidationGroup\r\n        };\r\n\r\n        this.$scope.citySettings = {\r\n            placeholder: Messages('address.placeholder.city'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'broker.city'\r\n            }\r\n        };\r\n        this.$scope.cityValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 80 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetSettings = {\r\n            placeholder: Messages('address.placeholder.street'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'broker.street'\r\n            }\r\n        };\r\n        this.$scope.streetValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 100 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetAddressSettings = {\r\n            placeholder: Messages('address.placeholder.streetAddress'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'broker.streetAddress'\r\n            }\r\n        };\r\n        this.$scope.streetAddressValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.postCodeSettings = {\r\n            placeholder: Messages('address.placeholder.postCode'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'broker.postCode'\r\n            }\r\n        };\r\n        this.$scope.postCodeValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.validateAndSave = () => {\r\n            let result = ValidationEngine.getGroupConfig(this.validationGroup).validate();\r\n            if (result.isValid) {\r\n                this.saveInProgress = true;\r\n                this.isSaveOperationDisable = true;\r\n\r\n                if (!this.$scope.editMode) {\r\n                    this.Broker.save(this.$scope.broker,\r\n                        (result) => {\r\n                            this.saveInProgress = false;\r\n                            this.$state.go('broker', {id : result.id});\r\n                            this.$uibModalInstance.close(this.$scope.broker);\r\n                            this.notificationService.success(Messages('assets.message.created'));\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            this.saveInProgress = false;\r\n                        }\r\n                    );\r\n                } else {\r\n                    this.Broker.update({ id: this.$scope.broker.id }, this.$scope.broker,\r\n                        (result) => {\r\n                            this.notificationService.success(Messages('assets.message.updated'));\r\n                            this.saveInProgress = false;\r\n                            this.$uibModalInstance.close(this.$scope.broker);\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            this.saveInProgress = false;\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = () => {\r\n            ValidationEngine.removeGroup(this.validationGroup);\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    initAutocomplete() {\r\n        if (!window.google) {\r\n            return;\r\n        }\r\n\r\n        this.autocomplete = new google.maps.places.Autocomplete($('#broker-address-field input')[0]);\r\n        google.maps.event.addListener(this.autocomplete, 'place_changed', () => {\r\n            let place = this.autocomplete.getPlace(),\r\n                citySet, streetSet, buildingSet, postCodeSet;\r\n\r\n            if (place.address_components instanceof Array) {\r\n                place.address_components.forEach((item) => {\r\n                    if (item.types.indexOf('locality') !== -1) {\r\n                        this.$scope.broker.city = item.long_name;\r\n                        citySet = true;\r\n                    }\r\n                    if (item.types.indexOf('route') !== -1) {\r\n                        this.$scope.broker.street = item.long_name;\r\n                        streetSet = true;\r\n                    }\r\n                    if (item.types.indexOf('street_number') !== -1) {\r\n                        this.$scope.broker.streetAddress = item.long_name;\r\n                        buildingSet = true;\r\n                    }\r\n                    if (item.types.indexOf('postal_code') !== -1) {\r\n                        this.$scope.broker.postCode = item.long_name;\r\n                        postCodeSet = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!citySet) {\r\n                this.$scope.broker.city = null;\r\n            }\r\n            if (!streetSet) {\r\n                this.$scope.broker.street = null;\r\n            }\r\n            if (!buildingSet) {\r\n                this.$scope.broker.streetAddress = null;\r\n            }\r\n            if (!postCodeSet) {\r\n                this.$scope.broker.postCode = null;\r\n            }\r\n            ValidationEngine.getGroupConfig(this.addressValidationGroup).validate();\r\n        });\r\n\r\n        if (this.$scope.broker.countryId) {\r\n            this.setAutocompleteCountry();\r\n        }\r\n    }\r\n\r\n\r\n    setAutocompleteCountry() {\r\n        let countries = Constants.countryStorePlain(),\r\n            curCountryCode;\r\n\r\n        countries.forEach((country) => {\r\n            if (country.value === this.$scope.broker.countryId) {\r\n                curCountryCode = country.isoCode;\r\n            }\r\n        });\r\n\r\n        this.autocomplete.setComponentRestrictions({\r\n            'country': curCountryCode\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/brokers/broker-edit-modal.controller.js","module.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('brokers.edit.title') : Messages('brokers.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('brokers.name')}}</label>\\r\\n                <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{Messages('address.country')}}</label>\\r\\n                <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"broker-address-field\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                <div id=\\\"broker-address-field\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                        <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                        <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                        <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                        <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('brokers.saving') : Messages('brokers.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('brokers.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/brokers/broker-edit-modal.template.html\n// module id = 701\n// module chunks = 0","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport 'devextreme/ui/text_area';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class AssetEditModalController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $timeout, Asset, assetObject, $uibModalInstance, NotificationService, StoreAdapter, Broker, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Asset = Asset;\r\n        this.assetObject = assetObject;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.notificationService = NotificationService;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.Broker = Broker;\r\n        this.utils = UtilsService;\r\n        this.validationGroup = 'asset-edit';\r\n        this.addressValidationGroup = 'asset-create-address';\r\n\r\n        this.init();\r\n        this.initForm();\r\n\r\n        $timeout(() => {\r\n            this.initAutocomplete();\r\n        });\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        this.$scope.editMode = !!this.assetObject;\r\n\r\n        if (this.$scope.editMode) {\r\n            this.$scope.asset = this.assetObject;\r\n            this.$scope.asset.address = this.utils.generateAddress(this.$scope.asset);\r\n        } else {\r\n            this.$scope.asset = {\r\n                name: '',\r\n                brokerId: null,\r\n                countryId: null,\r\n                city: '',\r\n                street: '',\r\n                streetAddress: '',\r\n                description: '',\r\n                brokerDatabaseRecordId: '',\r\n                notes: '',\r\n                images: [],\r\n                documents:[],\r\n                floors: [],\r\n                spaces: [],\r\n                state: 2,\r\n                address: '',\r\n            }\r\n        }\r\n\r\n        this.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        this.$scope.clearAddress = function(){\r\n            self.$scope.asset.address = '';\r\n        }\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.$scope.nameSettings = {\r\n            placeholder: Messages('assets.placeholder.name'),\r\n            bindingOptions: {\r\n                value: 'asset.name'\r\n            }\r\n        };\r\n        this.$scope.nameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 100 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        let brokersStore = this.storeAdapter.createStore(this.Broker, {}, this.errorHandler);\r\n        brokersStore.load().done((result) => {\r\n            this.$scope.brokerSelectSettings = {\r\n                dataSource: result,\r\n                displayExpr: 'name',\r\n                valueExpr: 'id',\r\n                bindingOptions: {\r\n                    value: 'asset.brokerId'\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$scope.brokerValidationRules = {\r\n            validationRules: [\r\n                {type: 'required', message: Messages('validation.required')}\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.description = this.$scope.$parent.description;\r\n        this.$scope.descriptionSettings = {\r\n            placeholder: Messages('assets.placeholder.description'),\r\n            height: 180,\r\n            maxLength: 500,\r\n            bindingOptions: {\r\n                value: 'asset.description'\r\n            }\r\n        };\r\n        this.$scope.descriptionValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 500 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.countryStore = Constants.countryStore();\r\n        this.$scope.countrySettings = {\r\n            dataSource: this.countryStore,\r\n            displayExpr: 'display',\r\n            valueExpr: 'value',\r\n            bindingOptions: {\r\n                value: 'asset.countryId'\r\n            }\r\n        };\r\n\r\n        this.$scope.countryValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 50 },\r\n            ],\r\n            validationGroup: this.validationGroup,\r\n            onOptionChanged: () => {\r\n                this.setAutocompleteCountry();\r\n            }\r\n        };\r\n\r\n        this.$scope.addressSettings = {\r\n            bindingOptions: {\r\n                value: 'asset.address',\r\n                disabled: '!asset.countryId'\r\n            }\r\n        };\r\n        this.$scope.addressValidationRules = {\r\n            validationRules: [{\r\n                type: 'custom',\r\n                validationCallback: function(options) {\r\n                    if (!self.$scope.asset.countryId) {\r\n                        options.rule.message = Messages('address.validation.countryRequired');\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }],\r\n            validationGroup: this.addressValidationGroup\r\n        };\r\n\r\n        this.$scope.citySettings = {\r\n            placeholder: Messages('address.placeholder.city'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'asset.city'\r\n            }\r\n        };\r\n        this.$scope.cityValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 80 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetSettings = {\r\n            placeholder: Messages('address.placeholder.street'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'asset.street'\r\n            }\r\n        };\r\n        this.$scope.streetValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 100 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetAddressSettings = {\r\n            placeholder: Messages('address.placeholder.streetAddress'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'asset.streetAddress'\r\n            }\r\n        };\r\n        this.$scope.streetAddressValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.postCodeSettings = {\r\n            placeholder: Messages('address.placeholder.postCode'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'asset.postCode'\r\n            }\r\n        };\r\n        this.$scope.postCodeValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.validateAndSaveSettings = function() {\r\n            let validation = ValidationEngine.getGroupConfig(self.validationGroup).validate(),\r\n                addressValidation = ValidationEngine.getGroupConfig(self.addressValidationGroup).validate();\r\n\r\n            if (validation.isValid && addressValidation.isValid) {\r\n                self.$scope.saveInProgress = true;\r\n                self.$scope.isSaveOperationDisable = true;\r\n\r\n                if (self.$scope.editMode) {\r\n                    self.Asset.update({id: self.$scope.asset.id}, self.$scope.asset,\r\n                        (result) => {\r\n                            self.notificationService.success(Messages('assets.message.created'));\r\n                            self.$scope.saveInProgress = false;\r\n                            self.$uibModalInstance.close(self.$scope.asset);\r\n                        },\r\n                        (error) => {\r\n                            self.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            self.$scope.saveInProgress = false;\r\n                        }\r\n                    );\r\n                } else {\r\n                    self.Asset.create({id: self.$scope.asset.id}, self.$scope.asset,\r\n                        (result) => {\r\n                            self.notificationService.success(Messages('assets.message.created'));\r\n                            self.$scope.saveInProgress = false;\r\n                            self.$uibModalInstance.close(self.$scope.asset);\r\n                            self.$state.go('asset', {\r\n                                id: result.id\r\n                            });\r\n                        },\r\n                        (error) => {\r\n                            self.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            self.$scope.saveInProgress = false;\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = function () {\r\n            ValidationEngine.removeGroup(self.validationGroup);\r\n            self.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    initAutocomplete() {\r\n        if (!window.google) {\r\n            return;\r\n        }\r\n\r\n        this.autocomplete = new google.maps.places.Autocomplete($('#field-address input')[0]);\r\n        google.maps.event.addListener(this.autocomplete, 'place_changed', () => {\r\n            let place = this.autocomplete.getPlace(),\r\n                citySet, streetSet, buildingSet, postCodeSet;\r\n\r\n            if (place.address_components instanceof Array) {\r\n                place.address_components.forEach((item) => {\r\n                    // if (item.types.indexOf('country') !== -1) {\r\n                    //     this.$scope.countryId = item.long_name;\r\n                    // }\r\n                    if (item.types.indexOf('locality') !== -1) {\r\n                        this.$scope.asset.city = item.long_name;\r\n                        citySet = true;\r\n                    }\r\n                    if (item.types.indexOf('route') !== -1) {\r\n                        this.$scope.asset.street = item.long_name;\r\n                        streetSet = true;\r\n                    }\r\n                    if (item.types.indexOf('street_number') !== -1) {\r\n                        this.$scope.asset.streetAddress = item.long_name;\r\n                        buildingSet = true;\r\n                    }\r\n                    if (item.types.indexOf('postal_code') !== -1) {\r\n                        this.$scope.asset.postCode = item.long_name;\r\n                        postCodeSet = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!citySet) {\r\n                this.$scope.asset.city = null;\r\n            }\r\n            if (!streetSet) {\r\n                this.$scope.asset.street = null;\r\n            }\r\n            if (!buildingSet) {\r\n                this.$scope.asset.streetAddress = null;\r\n            }\r\n             if (!postCodeSet) {\r\n                this.$scope.asset.postCode = null;\r\n            }\r\n\r\n            ValidationEngine.getGroupConfig(this.addressValidationGroup).validate();\r\n        });\r\n\r\n         if (this.$scope.asset.countryId) {\r\n            this.setAutocompleteCountry();\r\n        }\r\n    }\r\n\r\n    setAutocompleteCountry() {\r\n        let countries = Constants.countryStorePlain(),\r\n            curCountryCode;\r\n\r\n        countries.forEach((country) => {\r\n            if (country.value === this.$scope.asset.countryId) {\r\n                curCountryCode = country.isoCode;\r\n            }\r\n        });\r\n\r\n        if (curCountryCode) {\r\n            this.autocomplete.setComponentRestrictions({\r\n                'country': curCountryCode\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/asset-edit-modal.controller.js","module.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('assets.edit') : Messages('assets.add') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\" name=\\\"settingsForm\\\">\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{ Messages('assets.name') }}</label>\\r\\n                    <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-broker\\\" control-label>{{ Messages('assets.broker') }}</label>\\r\\n                    <div>\\r\\n                        <div id=\\\"field-broker\\\" dx-select-box=\\\"brokerSelectSettings\\\" dx-validator=\\\"brokerValidationRules\\\"></div>\\r\\n                        <p class=\\\"help-block\\\"><small>{{ Messages('assets.broker.help') }}</small></p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{ Messages('assets.country') }}</label>\\r\\n                    <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-address\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                    <div id=\\\"field-address\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n                <div class=\\\"panel panel-default\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                            <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                            <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                            <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                            <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSaveSettings()\\\">\\r\\n            {{ saveInProgress ? Messages('assets.saving') : Messages('assets.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/asset-edit-modal.template.html\n// module id = 704\n// module chunks = 0","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class ClientEditController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $timeout, Client, clientId, NotificationService, $uibModalInstance, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.$timeout = $timeout;\r\n        this.Client = Client;\r\n        this.clientId = clientId;\r\n        this.notificationService = NotificationService;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.utils = UtilsService;\r\n        this.validationGroup = 'client-edit';\r\n        this.addressValidationGroup = 'client-edit-address';\r\n\r\n        this.init();\r\n        this.initForm();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        if (this.clientId) {\r\n            this.$scope.getDataInProgress = true;\r\n            this.clientObject = {};\r\n            this.Client.getFull(\r\n                {id: this.clientId},\r\n                result => {\r\n                    this.$scope.client = result;\r\n                    this.$scope.getDataInProgress = false;\r\n                    this.$timeout(() => {\r\n                        this.initAutocomplete();\r\n                    });\r\n                },\r\n                error => {\r\n                    this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                }\r\n            );\r\n        } else {\r\n            this.$timeout(() => {\r\n                this.initAutocomplete();\r\n            });\r\n        }\r\n\r\n        this.$scope.clearAddress = function(){\r\n            self.$scope.client.address  = null;\r\n        }\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.$scope.editMode = !!this.clientObject;\r\n\r\n        if (this.$scope.editMode) {\r\n            this.$scope.client = self.clientObject;\r\n        } else {\r\n            this.$scope.client = {\r\n                name: '',\r\n                countryId: 1,\r\n                city: '',\r\n                street: '',\r\n                streetAddress: '',\r\n                postCode: '',\r\n                notes: '',\r\n                brokerId: null,\r\n                representatives: []\r\n            };\r\n        }\r\n\r\n        this.$scope.nameSettings = {\r\n            placeholder: Messages('clients.placeholder.name'),\r\n            bindingOptions: {\r\n                value: 'client.name'\r\n            }\r\n        };\r\n        this.$scope.nameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 255 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.countryStore = Constants.countryStore();\r\n        this.$scope.countrySettings = {\r\n            dataSource: this.countryStore,\r\n            displayExpr: 'display',\r\n            valueExpr: 'value',\r\n            bindingOptions: {\r\n                value: 'client.countryId'\r\n            }\r\n        };\r\n\r\n        this.$scope.countryValidationRules = {\r\n            validationRules: [],\r\n            validationGroup: this.validationGroup,\r\n            onOptionChanged: function() {\r\n                self.setAutocompleteCountry();\r\n            }\r\n        };\r\n\r\n        this.$scope.client.address = '';\r\n        this.$scope.addressSettings = {\r\n            bindingOptions: {\r\n                value: 'client.address',\r\n                disabled: '!client.countryId'\r\n            }\r\n        };\r\n        this.$scope.addressValidationRules = {\r\n            validationRules: [{\r\n                type: 'custom',\r\n                validationCallback: function(options) {\r\n                    if (!self.$scope.client.countryId) {\r\n                        options.rule.message = Messages('address.validation.countryRequired');\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }],\r\n            validationGroup: this.addressValidationGroup\r\n        };\r\n\r\n        this.$scope.citySettings = {\r\n            placeholder: Messages('address.placeholder.city'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'client.city'\r\n            }\r\n        };\r\n        this.$scope.cityValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 80 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetSettings = {\r\n            placeholder: Messages('address.placeholder.street'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'client.street'\r\n            }\r\n        };\r\n        this.$scope.streetValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 100 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetAddressSettings = {\r\n            placeholder: Messages('address.placeholder.streetAddress'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'client.streetAddress'\r\n            }\r\n        };\r\n        this.$scope.streetAddressValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.postCodeSettings = {\r\n            placeholder: Messages('address.placeholder.postCode'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'client.postCode'\r\n            }\r\n        };\r\n        this.$scope.postCodeValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.notesSettings = {\r\n            placeholder: Messages('clients.placeholder.notes'),\r\n            height: 120,\r\n            maxLength: 500,\r\n            bindingOptions: {\r\n                value: 'client.notes'\r\n            }\r\n        };\r\n        this.$scope.notesValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 500 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.shortNameSettings = {\r\n            placeholder: Messages('clients.placeholder.shortName'),\r\n            bindingOptions: {\r\n                value: 'client.shortName'\r\n            }\r\n        };\r\n        this.$scope.shortNameValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 100 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.industryStore = Constants.clientsIndustryStore();\r\n        this.$scope.industrySettings = {\r\n            dataSource: this.industryStore,\r\n            displayExpr: 'display',\r\n            valueExpr: 'value',\r\n            bindingOptions: {\r\n                value: 'client.industryId'\r\n            }\r\n        };\r\n\r\n        this.$scope.industryValidationRules = {\r\n            validationRules: [],\r\n            validationGroup: this.validationGroup,\r\n        };\r\n\r\n        this.$scope.validateAndSave = () => {\r\n            let validation = ValidationEngine.getGroupConfig(this.validationGroup).validate(),\r\n                addressValidation = ValidationEngine.getGroupConfig(self.addressValidationGroup).validate();\r\n\r\n            if (validation.isValid && addressValidation.isValid) {\r\n                this.saveInProgress = true;\r\n                this.isSaveOperationDisable = true;\r\n\r\n                if (!self.$scope.editMode) {\r\n                    self.Client.save(this.$scope.client,\r\n                        (result) => {\r\n                            self.saveInProgress = false;\r\n                            this.$uibModalInstance.close(this.$scope.client);\r\n                            this.$state.go('client', {id : result.id});\r\n                            this.notificationService.success(Messages('clients.message.created'));\r\n                        },\r\n                        (error) => {\r\n                            self.notificationService.error(error.data);\r\n                            self.saveInProgress = false;\r\n                        }\r\n                    );\r\n                } else {\r\n                    self.Client.update({ id: this.$scope.client.id }, this.$scope.client,\r\n                        (result) => {\r\n                            self.notificationService.success(Messages('clients.message.updated'));\r\n                            self.saveInProgress = false;\r\n                            if (self.$scope.client.industryId != null){\r\n                                Constants.clientsIndustryStore().byKey(self.$scope.client.industryId).done(function(dataItem) {\r\n                                        self.$scope.client.industry = dataItem.display;\r\n                                })\r\n                            }\r\n\r\n                            this.$uibModalInstance.close(this.$scope.client);\r\n                        },\r\n                        (error) => {\r\n                            self.notificationService.error(error.data);\r\n                            self.saveInProgress = false;\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = () => {\r\n            ValidationEngine.removeGroup(this.validationGroup);\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    initAutocomplete() {\r\n        if (!window.google) {\r\n            return;\r\n        }\r\n\r\n        this.autocomplete = new google.maps.places.Autocomplete($('#client-address-field input')[0]);\r\n        google.maps.event.addListener(this.autocomplete, 'place_changed', () => {\r\n            let place = this.autocomplete.getPlace(),\r\n                citySet, streetSet, buildingSet, postCodeSet;\r\n\r\n            if (place.address_components instanceof Array) {\r\n                place.address_components.forEach((item) => {\r\n                    if (item.types.indexOf('locality') !== -1) {\r\n                        this.$scope.client.city = item.long_name;\r\n                        citySet = true;\r\n                    }\r\n                    if (item.types.indexOf('route') !== -1) {\r\n                        this.$scope.client.street = item.long_name;\r\n                        streetSet = true;\r\n                    }\r\n                    if (item.types.indexOf('street_number') !== -1) {\r\n                        this.$scope.client.streetAddress = item.long_name;\r\n                        buildingSet = true;\r\n                    }\r\n                    if (item.types.indexOf('postal_code') !== -1) {\r\n                        this.$scope.client.postCode = item.long_name;\r\n                        postCodeSet = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!citySet) {\r\n                this.$scope.client.city = null;\r\n            }\r\n            if (!streetSet) {\r\n                this.$scope.client.street = null;\r\n            }\r\n            if (!buildingSet) {\r\n                this.$scope.client.streetAddress = null;\r\n            }\r\n            if (!postCodeSet) {\r\n                this.$scope.client.postCode = null;\r\n            }\r\n\r\n            ValidationEngine.getGroupConfig(this.addressValidationGroup).validate();\r\n        });\r\n\r\n        if (this.$scope.client.countryId) {\r\n            this.setAutocompleteCountry();\r\n        }\r\n    }\r\n\r\n    setAutocompleteCountry() {\r\n        let countries = Constants.countryStorePlain(),\r\n            curCountryCode;\r\n\r\n        countries.forEach((country) => {\r\n            if (country.value === this.$scope.client.countryId) {\r\n                curCountryCode = country.isoCode;\r\n            }\r\n        });\r\n\r\n        this.autocomplete.setComponentRestrictions({\r\n            'country': curCountryCode\r\n        });\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/client-edit-modal.controller.js","module.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('clients.edit.title') : Messages('clients.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div ng-if=\\\"getDataInProgress\\\" class=\\\"modal-loader\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n        </div>\\r\\n        <form role=\\\"form\\\" ng-if=\\\"!getDataInProgress\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('clients.name')}}</label>\\r\\n                <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-short-name\\\" class=\\\"control-label\\\">{{Messages('clients.shortName')}}</label>\\r\\n                <div id=\\\"field-short-name\\\" dx-text-box=\\\"shortNameSettings\\\" dx-validator=\\\"shortNameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{Messages('address.country')}}</label>\\r\\n                <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"client-address-field\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                <div id=\\\"client-address-field\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                        <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                        <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                        <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                        <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-industry\\\" class=\\\"control-label\\\">{{Messages('clients.industry')}}</label>\\r\\n                <div id=\\\"field-industry\\\" dx-select-box=\\\"industrySettings\\\" dx-validator=\\\"industryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-notes\\\" class=\\\"control-label\\\">{{Messages('clients.notes')}}:</label>\\r\\n                <div id=\\\"field-notes\\\" dx-text-area=\\\"notesSettings\\\"></div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('clients.saving') : Messages('clients.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('clients.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/clients/client-edit-modal.template.html\n// module id = 706\n// module chunks = 0","module.exports = \"<a ng-click=\\\"addNewUser()\\\" ng-if=\\\"$ctrl.item === 'user'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('users.new')}}</span>\\r\\n</a>\\r\\n\\r\\n<a ng-click=\\\"addNewBroker()\\\" ng-if=\\\"$ctrl.item === 'broker'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('brokers.new')}}</span>\\r\\n</a>\\r\\n\\r\\n<a ng-click=\\\"addNewSet()\\\" ng-if=\\\"$ctrl.item === 'asset'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('assets.new')}}</span>\\r\\n</a>\\r\\n\\r\\n<a ng-click=\\\"addNewClient()\\\" ng-if=\\\"$ctrl.item === 'client'\\\" class=\\\"add-entity-btn\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n    <span>{{$ctrl.messages('clients.new')}}</span>\\r\\n</a>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navigation/navigation-create-items.template.html\n// module id = 707\n// module chunks = 0","// import template and controller from individual component directory\r\nimport Controller from './imagegallery.controller'\r\nimport Template from './imagegallery.template.html'\r\n\r\nlet ImageGalleryComponent = {\r\n    bindings: {\r\n        images: '=',\r\n        maxImageWidth: '=?',\r\n        maxImageHeight: '=?',\r\n        maxImageCount: '=?',\r\n        readonly: '=?',\r\n        imageAddCallback: '=?',\r\n        imageDeleteCallback: '=?',\r\n        sortingChangeCallback: '=?'\r\n    },\r\n    controller: Controller,\r\n    template: Template\r\n};\r\n\r\nexport default ImageGalleryComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/imagegallery/imagegallery.component.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport Messages from '../../messages';\r\nimport ImageCropperController from './imagecropper.controller';\r\nimport ImageCropperTemplate from './imagecropper.template.html';\r\n\r\nexport default class ImageGalleryController {\r\n    /*@ngInject*/\r\n    constructor($scope, $uibModal, FileService, ImageService, UtilsService) {\r\n        // from component\r\n        this.images = this.images;\r\n        this.maxImageWidth = this.maxImageWidth || 500;\r\n        this.maxImageHeight = this.maxImageHeight || 500;\r\n        this.maxImageCount = this.maxImageCount || 10;\r\n        this.readonly = this.readonly || false;\r\n        this.imageAddCallback = this.imageAddCallback;\r\n        this.imageDeleteCallback = this.imageDeleteCallback;\r\n\r\n        // injected\r\n        this.$scope = $scope;\r\n        this.$uibModal = $uibModal;\r\n        this.fileService = FileService;\r\n        this.imageService = ImageService;\r\n        this.utils = UtilsService;\r\n\r\n        this.init();\r\n        this.initComponent();\r\n    }\r\n\r\n    init(){\r\n        let self = this;\r\n\r\n        for (var i = 0; i < self.images.length; i++){\r\n            if(!self.images[i].uniqueId) {\r\n                self.images[i].uniqueId = self.utils.generateGuid();\r\n            }\r\n        }\r\n\r\n        self.enableUpload = true;\r\n        self.imageCount = self.images.length;\r\n\r\n        self.$scope.images = self.images;\r\n        self.$scope.readonly = self.readonly;\r\n    }\r\n    initComponent() {\r\n        let self = this;\r\n\r\n        self.addImageBtnConfig = {\r\n            icon: 'add',\r\n            type: 'default',\r\n            text: Messages('users.images.add'),\r\n            bindingOptions: {\r\n                disabled: '!$ctrl.enableUpload'\r\n            }\r\n        };\r\n\r\n        self.uploadImage = function() {\r\n            let self = this;\r\n\r\n            if(self.readonly) {\r\n                return;\r\n            }\r\n\r\n            var modal = this.$uibModal.open({\r\n                controller: ImageCropperController,\r\n                template: ImageCropperTemplate,\r\n                resolve: {\r\n                    maxImageHeight: self.maxImageHeight,\r\n                    maxImageWidth: self.maxImageWidth,\r\n                    viewPortType: function() { return 'square'; }\r\n                }\r\n                //size: 'lg'\r\n            });\r\n            modal.result.then(result => {\r\n                if(self.imageCount >= self.maxImageCount){\r\n                    self.checkImageLimit();\r\n                    return;\r\n                }\r\n\r\n                self.imageCount++;\r\n                \r\n                var image = self.createImage(result.file);\r\n                image.imageFile.imageData = result.raw;\r\n                \r\n                self.addImage(image);\r\n            });\r\n\r\n            modal.closed.then(() => {\r\n\r\n            });\r\n\r\n            /*$(\"#imageUploader\").val(null);\r\n\r\n            setTimeout(function () {\r\n                $(\"#imageUploader\").click();\r\n            }, 200);*/\r\n\r\n        };\r\n\r\n        self.addImage = function(image) {\r\n            if(self.readonly)\r\n                return;\r\n\r\n            self.images.push(image);\r\n\r\n            if (!self.$scope.$$phase && (!self.$scope.$root || !self.$scope.$root.$$phase)){\r\n                self.$scope.$apply();\r\n            }\r\n\r\n            if(self.imageAddCallback){\r\n                self.imageAddCallback(image);\r\n            }\r\n\r\n            self.updateImageOrder();\r\n            self.checkImageLimit();\r\n        };\r\n\r\n        self.deleteImage = function (image) {\r\n            if(self.readonly)\r\n                return;\r\n\r\n            for (var i = 0; i < self.images.length; i++) {\r\n                if (self.images[i].uniqueId == image.uniqueId) {\r\n                    self.images.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(self.imageDeleteCallback){\r\n                self.imageDeleteCallback(image);\r\n            }\r\n\r\n            self.imageCount--;\r\n\r\n            self.updateImageOrder();\r\n            self.checkImageLimit();\r\n        }\r\n\r\n        self.onImageSort = function(){\r\n            self.updateImageOrder();\r\n        }\r\n\r\n        self.createImage = function (file) {\r\n            var image = {\r\n                id: 0,\r\n                uniqueId: self.utils.generateGuid(),\r\n                filePath: '',\r\n                order: 0,\r\n                originalFileName: file.filename,\r\n                isMain: 0,\r\n                contentType: file.extension,\r\n                imageFile: {\r\n                    data: [],\r\n                    imageData: file.data,\r\n                    contentType: file.extension,\r\n                    uniqueFileName: '',\r\n                    originalFileName: file.filename\r\n                }\r\n            };\r\n\r\n            return image;\r\n        }\r\n\r\n        self.sortImage = function() {\r\n            self.images.sort(function (a, b) {\r\n                if (a.order > b.order) {\r\n                    return 1;\r\n                }\r\n                if (a.order < b.order) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        };\r\n\r\n        self.updateImageOrder = function () {\r\n            for (var i = 0; i < self.images.length; i++) {\r\n                self.images[i].order = i;\r\n                self.images[i].isMain = false;\r\n            }\r\n\r\n            if(self.images.length > 0){\r\n                self.images[0].isMain = true;\r\n            }\r\n\r\n            if (self.sortingChangeCallback) {\r\n                self.sortingChangeCallback();\r\n            }\r\n        }\r\n\r\n        self.checkImageLimit = function(){\r\n            if(self.images.length < self.maxImageCount && !self.readonly){\r\n                self.enableUpload = true;\r\n            }\r\n            else {\r\n                self.enableUpload = false;\r\n            }\r\n\r\n            if (!self.$scope.$$phase && (!self.$scope.$root || !self.$scope.$root.$$phase)){\r\n                self.$scope.$apply();\r\n            }\r\n        }\r\n\r\n        self.loadFiles = function (files) {\r\n            if(self.readonly)\r\n                return;\r\n\r\n            self.fileService.uploadFiles(files,\r\n                function (singleFile) {\r\n                    if(self.imageCount >= self.maxImageCount){\r\n                        self.checkImageLimit();\r\n                        return;\r\n                    }\r\n\r\n                    self.imageCount++;\r\n                    \r\n                    var image = self.createImage(singleFile);\r\n                    self.resizeImage(image, function(imageRaw){\r\n                        image.imageFile.imageData = imageRaw;\r\n                        self.addImage(image);\r\n                    })\r\n                },\r\n                function () {\r\n                    self.checkImageLimit();\r\n                })\r\n        }\r\n\r\n        self.resizeImage = function(image, imageResizedCallback) {\r\n            var sourceImage = new Image();\r\n            sourceImage.src = image.imageFile.imageData;\r\n\r\n            var imgWidth = sourceImage.width;\r\n            var imgHeight = sourceImage.height;\r\n\r\n            if(sourceImage.width > self.maxImageWidth || sourceImage.height > self.maxImageHeight) {\r\n                if (sourceImage.width > sourceImage.height) {\r\n                    imgWidth = self.maxImageWidth;\r\n                    imgHeight = sourceImage.height * (self.maxImageWidth / sourceImage.width);\r\n                }\r\n                else {\r\n                    imgWidth = sourceImage.width * (self.maxImageHeight / sourceImage.height);\r\n                    imgHeight = self.maxImageHeight;\r\n                }\r\n            }\r\n\r\n            self.imageService.resizeImage(sourceImage, image.contentType, imgWidth, imgHeight, imageResizedCallback);\r\n        }\r\n\r\n        self.sortImage();\r\n\r\n        self.$scope.addImageBtnClick = self.addImageBtnClick;\r\n        self.$scope.deleteImage = self.deleteImage;\r\n        self.$scope.onImageSort = self.onImageSort;\r\n        self.$scope.Messages = Messages;\r\n\r\n        angular.element(document).ready(function() {\r\n\r\n            $(\"#imageUploader\").change(function () {\r\n                self.loadFiles($(\"#imageUploader\")[0].files);\r\n            });\r\n\r\n            self.checkImageLimit();\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/imagegallery/imagegallery.controller.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport Messages from '../../messages';\r\nimport Croppie from 'croppie';\r\nimport 'croppie/croppie.css';\r\n\r\nexport default class ImageCropperController {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, $uibModalInstance, Upload, maxImageHeight, maxImageWidth, viewPortType) {\r\n        // from component\r\n\r\n        // injected\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n\r\n        this.maxImageHeight = maxImageHeight;\r\n        this.maxImageWidth = maxImageWidth;\r\n        this.viewPortType = viewPortType || 'square';\r\n\r\n        this.$croppie = null;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        let self = this;\r\n\r\n        this.$scope.fileSelected = function(files, events, b) {\r\n            if(files && files.length > 0){\r\n                var reader = new FileReader();\r\n                reader.onload = function (evt) {\r\n                    self.cropImage(evt.target.result);\r\n                };\r\n                reader.readAsDataURL(files[0]);\r\n            }\r\n        }\r\n\r\n        this.$scope.uploadImage = function() {\r\n            $(\"#upload\").val(null);\r\n\r\n            setTimeout(function () {\r\n                $(\"#upload\").click();\r\n            }, 200);\r\n\r\n        }\r\n\r\n        this.$scope.save = function() {\r\n            self.$croppie.result({\r\n\t\t\t\ttype: 'canvas',\r\n\t\t\t\tsize: { \r\n                    width: self.maxImageWidth,\r\n                    height: self.maxImageHeight \r\n                },\r\n                format: self.getImageType(self.$scope.picFile)\r\n\t\t\t}).then(function (resp) {\r\n                self.$uibModalInstance.close({\r\n                    file: self.$scope.picFile,\r\n                    raw: resp\r\n                });\r\n\t\t\t});\r\n        };\r\n\r\n        this.$scope.cancel = function () {\r\n            self.$uibModalInstance.dismiss('cancel');\r\n        };\r\n        \r\n        this.cropImage = function(file) {\r\n            let self = this;\r\n\r\n            setTimeout(function () {\r\n                self.$croppie.bind({ url: file, zoom: 0 });\r\n            }, 50);\r\n        }\r\n\r\n        this.getImageType = function(file){\r\n            if(file.name.split('.').pop().toLowerCase() == 'png') {\r\n                return 'png'\r\n            }\r\n            else {\r\n                return 'jpeg';\r\n            }\r\n        }\r\n\r\n        angular.element(document).ready(function(){\r\n            var el = document.getElementById('cropPanel');\r\n\r\n            self.$croppie = new Croppie(el, {\r\n                enableExif: true,\r\n                viewport: { width: 200, height: 200, type: self.viewPortType },\r\n                boundary: { width: 300, height: 300 },\r\n                mouseWheelZoom: true,\r\n                showZoomer: true,\r\n                enableOrientation: true,\r\n                enforceBoundary: true\r\n            });\r\n\r\n            $(\"#upload\").change(function () {\r\n                if($(\"#upload\")[0].files && $(\"#upload\")[0].files.length > 0) {\r\n                    self.$scope.picFile = $(\"#upload\")[0].files[0];\r\n                    self.$scope.fileSelected($(\"#upload\")[0].files);\r\n\r\n                    if(!self.$rootScope.$$phase)\r\n                        self.$scope.$apply();  \r\n                }\r\n            });\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/imagegallery/imagecropper.controller.js","module.exports = \"<form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n    <div class=\\\"inmodal hmodal-info image-cropper\\\">\\r\\n        <div class=\\\"color-line\\\"></div>\\r\\n        <div class=\\\"modal-header text-center\\\">\\r\\n            <h4 class=\\\"modal-title\\\">{{ Messages('image.cropper.title') }}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"up-buttons\\\">\\r\\n                <div ngf-drop ng-model=\\\"picFile\\\" ngf-change=\\\"fileSelected($files, $event, b)\\\" \\r\\n                        ngf-drag-over-class=\\\"{ accept:'dragover', reject:'dragover-err', delay:100}\\\" \\r\\n                        ngf-multiple=\\\"false\\\" ngf-pattern=\\\"image/*\\\">\\r\\n                    <div ng-show=\\\"!picFile\\\" class=\\\"upload-msg\\\">\\r\\n                        <span>{{ Messages('image.cropper.placeholder.empty') }}</span>\\r\\n                    </div>\\r\\n                    <div ng-show=\\\"picFile\\\" class=\\\"upload-image-wrap\\\">\\r\\n                        <div id=\\\"cropPanel\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"upload-button\\\">\\r\\n                <div class=\\\"add-entity-btn\\\" ng-click=\\\"uploadImage()\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    <span>{{ Messages('image.cropper.addbutton') }}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" class=\\\"hidden\\\" id=\\\"upload\\\" accept=\\\"image/*\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">\\r\\n                {{ saveInProgress ? Messages('image.cropper.saving') : Messages('image.cropper.save') }}\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n                {{ Messages('image.cropper.cancel') }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/imagegallery/imagecropper.template.html\n// module id = 717\n// module chunks = 0","module.exports = \"<form class=\\\"form-horizontal image-gallery\\\" role=\\\"form\\\" name=\\\"galleryForm\\\">\\r\\n    <fieldset>\\r\\n        <div class=\\\"sortable-container grid\\\" sv-root sv-part=\\\"images\\\" sv-on-sort=\\\"onImageSort()\\\">\\r\\n            <div ng-repeat=\\\"image in images\\\" sv-element=\\\"opts\\\" class=\\\"image-list grid\\\">\\r\\n                <div class=\\\"image-item\\\">\\r\\n                    <div class=\\\"image-base\\\"><img draggable=\\\"false\\\" ng-if=\\\"image.filePath != ''\\\" ng-src=\\\"{{image.filePath}}\\\" /></div>\\r\\n                    <div class=\\\"image-base\\\"><img draggable=\\\"false\\\" ng-if=\\\"image.filePath == ''\\\" ng-src=\\\"{{image.imageFile.imageData}}\\\" /></div>\\r\\n                    <div class=\\\"image-delete\\\">\\r\\n                        <span class=\\\"fa fa-minus-circle\\\" ng-if=\\\"!readonly\\\" ng-click=\\\"deleteImage(image);\\\"></span>\\r\\n                    </div>\\r\\n                    <div class=\\\"image-favourite\\\">\\r\\n                        <div class=\\\"image-favorite-text\\\" draggable=\\\"false\\\" ng-if=\\\"image.isMain\\\">\\r\\n                            {{ Messages('assets.gallery.main') }}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"image-gallery-add-btn\\\" ng-if=\\\"$ctrl.enableUpload\\\" ng-click=\\\"$ctrl.uploadImage();\\\">\\r\\n            <div class=\\\"edge\\\"></div>\\r\\n            <div class=\\\"cont\\\">\\r\\n                <div>\\r\\n                    <i class=\\\"fa fa-picture-o\\\"></i>\\r\\n                </div>\\r\\n                {{ Messages('assets.gallery.add') }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n</form>\\r\\n<input type=\\\"file\\\" id=\\\"imageUploader\\\" multiple accept=\\\"image/*\\\" class=\\\"hidden\\\" />\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/imagegallery/imagegallery.template.html\n// module id = 718\n// module chunks = 0","// import template and controller from individual component directory\r\nimport Controller from './imagecropper.controller'\r\nimport Template from './imagecropper.template.html'\r\n\r\nlet ImageCropperComponent = {\r\n    bindings: {\r\n        maxImageHeight: '=',\r\n        maxImageWidth: '=',\r\n        viewPortType: '=?'\r\n    },\r\n    controller: Controller,\r\n    template: Template\r\n};\r\n\r\nexport default ImageCropperComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/imagegallery/imagecropper.component.js","// import template and controller from individual component directory\r\nimport Controller from './attachements.controller';\r\nimport Template from './attachements.template.html';\r\n\r\nlet AttachementsComponent = {\r\n    bindings: {\r\n        documents: '=',\r\n        maxAttachementSize: '=?',\r\n        maxAttachementCount: '=?',\r\n        readonly: '=?',\r\n        documentCreateCallback: '=?',\r\n        documentAddCallback: '=?',\r\n        documentDeleteCallback: '=?'\r\n    },\r\n    controller: Controller,\r\n    template: Template\r\n}\r\n\r\nexport default AttachementsComponent;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/attachements/attachements.component.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../../messages';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\n\r\nexport default class AttachementsController {\r\n    /*@ngInject*/\r\n    constructor($scope, FileService, NotificationService, UtilsService) {\r\n        // from component\r\n        this.documents = this.documents;\r\n        this.maxAttachementSize = this.maxAttachementSize || 5000000;\r\n        this.maxAttachementCount = this.maxAttachementCount || 10;\r\n        this.readonly = this.readonly || false;\r\n        this.documentCreateCallback = this.documentCreateCallback;\r\n        this.documentAddCallback = this.documentAddCallback;\r\n        this.documentDeleteCallback = this.documentDeleteCallback;\r\n\r\n        // injected\r\n        this.$scope = $scope;\r\n        this.fileService = FileService;\r\n        this.notificationService = NotificationService;\r\n        this.utils = UtilsService;\r\n\r\n        this.init();\r\n        this.initComponent();\r\n        this.initList();\r\n    }\r\n\r\n    init(){\r\n        let self = this;\r\n\r\n        for (var i = 0; i < self.documents.length; i++){\r\n            if(!self.documents[i].uniqueId) {\r\n                self.documents[i].uniqueId = self.utils.generateGuid();\r\n            }\r\n        }\r\n\r\n        self.enableUpload = true;\r\n        self.documentsCount = self.documents.length;\r\n        self.editNotesValue = ''; //dx-text-box doesn't support one way binding\r\n\r\n        self.$scope.Messages = Messages;\r\n    }\r\n\r\n    initComponent(){\r\n        let self = this;\r\n\r\n        self.editDocumentBtnConfig = {\r\n            icon: 'edit',\r\n            type: 'success',\r\n            bindingOptions: {\r\n                visible: '!file.isEditMode'\r\n            },\r\n            onClick: function(e) {\r\n                if(e.model.file.isEditMode){\r\n                    self.resetEditMode();\r\n                }\r\n                else {\r\n                    self.resetEditMode();\r\n\r\n                    self.editNotesValue = e.model.file.notes;\r\n                    e.model.file.isEditMode = true;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        self.deleteDocumentBtnConfig = {\r\n            icon: 'trash',\r\n            type: 'danger',\r\n            bindingOptions: {\r\n                visible: '!file.isEditMode'\r\n            },\r\n            onClick: function(e) {\r\n                self.resetEditMode();\r\n                self.deleteDocument(e.model.file);\r\n            }\r\n        }\r\n\r\n        self.saveDocumentBtnConfig = {\r\n            icon: 'save',\r\n            type: 'default',\r\n            bindingOptions: {\r\n                visible: 'file.isEditMode'\r\n            },\r\n            onClick: function(e) {\r\n                e.model.file.notes = self.editNotesValue;\r\n                self.resetEditMode();\r\n            }\r\n        }\r\n\r\n        self.cancelDocumentBtnConfig = {\r\n            icon: 'remove',\r\n            type: 'danger',\r\n            bindingOptions: {\r\n                visible: 'file.isEditMode'\r\n            },\r\n            onClick: function(e) {\r\n                self.resetEditMode();\r\n            }\r\n        }\r\n\r\n        self.editDocumentTxbConfig = {\r\n            isValid: false,\r\n            bindingOptions: {\r\n                value: '$ctrl.editNotesValue',\r\n                visible: 'file.isEditMode'\r\n            }\r\n        }\r\n\r\n        self.editDocumentTxbValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 500 },\r\n            ],\r\n            validationGroup: 'documentNotes'\r\n        }\r\n\r\n        self.checkFileLimit = function(){\r\n            if(self.documents.length < self.maxAttachementCount && !self.readonly){\r\n                self.enableUpload = true;\r\n            }\r\n            else {\r\n                self.enableUpload = false;\r\n            }\r\n\r\n            if (!self.$scope.$$phase && (!self.$scope.$root || !self.$scope.$root.$$phase)){\r\n                self.$scope.$apply();\r\n            }\r\n        }\r\n\r\n        self.loadFiles = function (files) {\r\n            self.fileService.uploadFiles(files,\r\n                function (singleFile) {\r\n                    if(singleFile.size > self.maxAttachementSize){\r\n                        self.notificationService.error(\"Error loading file \" + singleFile.filename + \". Maximum file size is \" + self.maxAttachementSize + \" byte\");\r\n                        return;\r\n                    }\r\n\r\n                    if(self.documentsCount >= self.maxAttachementCount){\r\n                        self.checkFileLimit();\r\n                        return;\r\n                    }\r\n\r\n                    self.documentsCount++;\r\n\r\n                    var document = self.createDocument(singleFile);\r\n                    self.documents.push(document);\r\n\r\n                    if(self.documentAddCallback){\r\n                        self.documentAddCallback(document);\r\n                    }\r\n                },\r\n                function () {\r\n                    self.checkFileLimit();\r\n                    self.refreshList();\r\n                })\r\n        }\r\n\r\n        self.createDocument = function (file) {\r\n            var document = {\r\n                id: 0,\r\n                uniqueId: self.utils.generateGuid(),\r\n                isEditMode: false,\r\n                filePath: '',\r\n                originalFileName: file.filename,\r\n                notes: '',\r\n                contentType: file.extension,\r\n                documentFile: {\r\n                    data: [],\r\n                    fileData: file.data,\r\n                    contentType: file.extension,\r\n                    uniqueFileName: '',\r\n                    originalFileName: file.filename,\r\n                }\r\n            };\r\n\r\n            if(self.documentCreateCallback){\r\n                self.documentCreateCallback(document);\r\n            }\r\n\r\n            return document;\r\n        }\r\n\r\n        self.deleteDocument = function (file) {\r\n            for (var i = 0; i < self.documents.length; i++) {\r\n                if (self.documents[i].uniqueId == file.uniqueId) {\r\n                    self.documents.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            self.documentsCount--;\r\n\r\n            if(self.documentDeleteCallback){\r\n                self.documentDeleteCallback(file);\r\n            }\r\n\r\n            self.checkFileLimit();\r\n            self.refreshList();\r\n        }\r\n\r\n        self.resetEditNotesValue = function() {\r\n            self.editNotesValue = '';\r\n        }\r\n\r\n        self.resetEditMode = function () {\r\n            self.resetEditNotesValue();\r\n\r\n            for (var i = 0; i < self.documents.length; i++) {\r\n                self.documents[i].isEditMode = false;\r\n            }\r\n        }\r\n\r\n        angular.element(document).ready(function() {\r\n\r\n            $(\"#attachementsUploader\").change(function () {\r\n                self.loadFiles($(\"#attachementsUploader\")[0].files);\r\n            });\r\n\r\n            self.checkFileLimit();\r\n        });\r\n    }\r\n\r\n    initList() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.notificationService.error(response.data);\r\n            }\r\n        }\r\n\r\n\r\n        self.store = new ArrayStore({\r\n            data: self.documents,//self.asset.documents,\r\n            key: \"uniqueId\",\r\n            modified: function () {\r\n                // 'modified' event handler\r\n            },\r\n            errorHandler: self.errorHandler.requestFailed\r\n        });\r\n\r\n        self.listDataSource = { store: self.store };\r\n\r\n        self.listOptions = {\r\n            dataSource: self.listDataSource,\r\n        }\r\n\r\n        self.refreshList = function() {\r\n            $(\"#listContainer\").dxList('instance').reload();\r\n        }\r\n    };\r\n\r\n    addDocument() {\r\n        $(\"#attachementsUploader\").val(null);\r\n        setTimeout(function () {\r\n            $(\"#attachementsUploader\").click();\r\n        }, 200);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/attachements/attachements.controller.js","module.exports = \"<form name=\\\"settingsForm\\\">\\r\\n    <fieldset class=\\\"attachments\\\">\\r\\n        <div class=\\\"wrap\\\">\\r\\n            <div class=\\\"btn-group\\\" ng-if=\\\"$ctrl.enableUpload\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addDocument()\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    <span>{{Messages('assets.spaces.documents.add')}}</span>\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"dx-viewport\\\">\\r\\n                    <div class=\\\"list-container\\\">\\r\\n                        <div dx-list=\\\"$ctrl.listOptions\\\" id=\\\"listContainer\\\" dx-item-alias=\\\"file\\\">\\r\\n                            <div data-options=\\\"dxTemplate: {name: 'item'}\\\">\\r\\n                                <div class=\\\"col-sm-9 pull-left\\\">\\r\\n                                    <div class=\\\"file-icon pull-left\\\" data-type=\\\"{{file.contentType}}\\\"></div>\\r\\n                                    <div class=\\\"file-container\\\">\\r\\n                                        <a href=\\\"{{file.filePath ? file.filePath : '#'}}\\\">{{file.originalFileName}}</a>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"wrapword\\\">\\r\\n                                        <span class=\\\"note-label\\\">Notes: </span>\\r\\n                                        <span class=\\\"note\\\" ng-show=\\\"!file.isEditMode\\\"><i>{{file.notes}}</i></span>\\r\\n                                        <div class=\\\"dx-field-value\\\" dx-text-box=\\\"$ctrl.editDocumentTxbConfig\\\" dx-validator=\\\"$ctrl.editDocumentTxbValidationRules\\\"></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-3 pull-right\\\" ng-show=\\\"!$ctrl.readonly\\\">\\r\\n                                    <div dx-button=\\\"$ctrl.deleteDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                    <div dx-button=\\\"$ctrl.editDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                    <div dx-button=\\\"$ctrl.cancelDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                    <div dx-button=\\\"$ctrl.saveDocumentBtnConfig\\\" class=\\\"button-container\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n    <input type=\\\"file\\\" id=\\\"attachementsUploader\\\" multiple accept=\\\"*\\\" class=\\\"hidden\\\" />\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/attachements/attachements.template.html\n// module id = 722\n// module chunks = 0","import Controller from './breadcrumbpanel.controller'\r\nimport Template from './breadcrumbpanel.template.html'\r\n\r\nlet BreadcrumbPanelComponent = {\r\n  bindings: {\r\n    states: '=',\r\n    title: '@'\r\n  },\r\n  transclude: true,\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default BreadcrumbPanelComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/breadcrumbpanel/breadcrumbpanel.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nexport default class BreadcrumbPanel {\r\n    /*@ngInject*/\r\n    constructor($scope, $state) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Messages = Messages;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/breadcrumbpanel/breadcrumbpanel.controller.js","module.exports = \"<div class=\\\"hpanel breadcrumb-panel\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <span ng-repeat=\\\"state in $ctrl.states\\\" ng-switch=\\\"$last\\\">\\r\\n            <a ng-if=\\\"state.path\\\" href=\\\"{{state.path}}\\\" ui-sref=\\\"{{state.path}}\\\">{{state.title}}</a>\\r\\n            <span ng-if=\\\"!state.path\\\" ng-class=\\\"{active: $last}\\\">{{state.title}}</span>\\r\\n            <span ng-switch-when=\\\"false\\\">/</span>\\r\\n        </span>\\r\\n        <ng-transclude></ng-transclude>\\r\\n        <span class=\\\"panel-title\\\">{{$ctrl.title}}</span>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/breadcrumbpanel/breadcrumbpanel.template.html\n// module id = 727\n// module chunks = 0","import Controller from './space-description.controller'\r\nimport Template from './space-description.template.html'\r\n\r\nlet SpaceDescriptionComponent = {\r\n  bindings: {\r\n      data: '=',\r\n      context: '=?'\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default SpaceDescriptionComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/space-description/space-description.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\nimport Constants from '../../constants';\r\n\r\nexport default class SpaceDescription {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, uibDateParser, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.messages = Messages;\r\n        this.uibDateParser = uibDateParser;\r\n        this.utils = UtilsService;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$scope.data = this.data;\r\n        this.$scope.context = this.context;\r\n    }\r\n\r\n    getOfficeType(type) {\r\n        let officeType = Constants.spaceTypeStorePlain().find((item) => {\r\n            return item.value === type;\r\n        });\r\n        return officeType.text;\r\n    }\r\n\r\n    getStatus(status) {\r\n        switch (status) {\r\n            case 2:\r\n                return Messages('assets.spaces.filter.occupied');\r\n            case 3:\r\n                return Messages('assets.spaces.filter.vacant');\r\n        }\r\n    }\r\n\r\n    getParsedDate(date) {\r\n        return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\r\n    }\r\n\r\n    closeSidebar() {\r\n        this.$rootScope.$broadcast('right-sidebar:close');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/space-description/space-description.controller.js","module.exports = \"<div class=\\\"space-descr\\\">\\r\\n    <div ng-if=\\\"context === 'sidebar'\\\" class=\\\"side-close\\\">\\r\\n        <button class=\\\"btn btn-default pull-left\\\" ng-click=\\\"$ctrl.closeSidebar()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"cont\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.status')}}</span>\\r\\n            <p class=\\\"stat-text\\\" ng-class=\\\"data.status === 3 ? 'success' : 'error'\\\">{{$ctrl.getStatus(data.status)}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"big\\\">\\r\\n        {{$ctrl.messages('assets.spaces.unit')}} {{data.number}}\\r\\n    </div>\\r\\n    <div>\\r\\n        <div class=\\\"labels_strip\\\">\\r\\n            <span class=\\\"stat-label\\\">{{data.towerName}}</span> <span class=\\\"stat-label\\\">{{data.floorName}}</span>\\r\\n        </div>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.utils.generateAddress(data)}}</p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.rentableArea')}}</span>\\r\\n        <p class=\\\"stat-text\\\">\\r\\n            <span class=\\\"huge\\\">{{data.rentableArea}}</span>\\r\\n            <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\" />\\r\\n        </p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.type')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getOfficeType(data.type)}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.availability')}}</span>\\r\\n            <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.contract && data.contract.endsAt)}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.asking_price')}}</span>\\r\\n            <p class=\\\"stat-text\\\">\\r\\n                <span ng-if=\\\"data.minAskingPrice !== null && data.maxAskingPrice !== null\\\">\\r\\n                    € {{data.minAskingPrice}} - € {{data.maxAskingPrice}}\\r\\n                </span>\\r\\n                <span ng-if=\\\"!data.minAskingPrice && !data.maxAskingPrice\\\">€ 0</span>\\r\\n                <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/>\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"stats\\\">\\r\\n        <div class=\\\"big\\\">\\r\\n            {{$ctrl.messages('assets.spaces.tenant_name')}}\\r\\n        </div>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.tenantName}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.lease_start_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.contract && data.contract.startsAt)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.lease_end_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.contract && data.contract.endsAt)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.in_place_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.inPlaceRent}} €/<span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/></p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.net_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.netRent}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.vat')}} @ {{data.vat_percent || 10}}%</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.vatCosts}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.additional_cost')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.additionalCosts}} €</p>\\r\\n\\r\\n        <hr class=\\\"total_hr\\\">\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.spaces.total_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.contract && data.contract.totalCosts}} €</p>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/space-description/space-description.template.html\n// module id = 730\n// module chunks = 0","import Controller from './tenant-description.controller'\r\nimport Template from './tenant-description.template.html'\r\n\r\nlet TenantDescriptionComponent = {\r\n  bindings: {\r\n      data: '=',\r\n      context: '=?'\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default TenantDescriptionComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tenant-description/tenant-description.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\nimport Constants from '../../constants';\r\n\r\nexport default class TenantDescription {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, uibDateParser, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.messages = Messages;\r\n        this.uibDateParser = uibDateParser;\r\n        this.utils = UtilsService;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$scope.data = this.data;\r\n        this.$scope.context = this.context;\r\n        this.$scope.selectedSpace = this.data.spaces[0];\r\n\r\n        this.$scope.vatCosts = 0;\r\n        this.$scope.additionalCosts = 0;\r\n        this.data.spaces.forEach((item) => {\r\n            this.$scope.vatCosts = (Number(this.$scope.vatCosts) + item.vatCost).toFixed(2);\r\n            this.$scope.additionalCosts = (Number(this.$scope.additionalCosts) + item.additionalCost).toFixed(2);\r\n        });\r\n    }\r\n\r\n    getTowersCount() {\r\n        let uniqueTowers = [];\r\n        this.$scope.data.spaces.forEach(function(space) {\r\n            if (uniqueTowers.indexOf(space.towerId) === -1) {\r\n                uniqueTowers.push(space.towerId);\r\n            }\r\n        });\r\n\r\n        return uniqueTowers.length;\r\n    }\r\n\r\n    getIndustryType(typeId) {\r\n        let industry;\r\n        Constants.clientsIndustryPlain().forEach(function(item) {\r\n            if (item.value === typeId) {\r\n                industry = item.text;\r\n            }\r\n        });\r\n        return industry;\r\n    }\r\n\r\n    getStatus(status) {\r\n        return status === 0 ? Messages('assets.tenants.filter.in_place') : Messages('assets.tenants.filter.expired');\r\n    }\r\n\r\n    selectSpace(spaceId) {\r\n        this.data.spaces.forEach((item) => {\r\n            if (item.id === spaceId) {\r\n                this.$scope.selectedSpace = item;\r\n            }\r\n        });\r\n    }\r\n\r\n    getParsedDate(date) {\r\n        return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\r\n    }\r\n\r\n    closeSidebar() {\r\n        this.$rootScope.$broadcast('right-sidebar:close');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tenant-description/tenant-description.controller.js","module.exports = \"<div class=\\\"tenant-descr\\\">\\r\\n    <div ng-if=\\\"context === 'sidebar'\\\" class=\\\"side-close\\\">\\r\\n        <button class=\\\"btn btn-default pull-left\\\" ng-click=\\\"$ctrl.closeSidebar()\\\">\\r\\n            <i class=\\\"fa fa-times\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"cont\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.status')}}</span>\\r\\n            <p class=\\\"stat-text\\\" ng-class=\\\"data.status === 0 ? 'success' : 'error'\\\">{{$ctrl.getStatus(data.status)}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.name')}}</span>\\r\\n            <p class=\\\"stat-text\\\">{{data.tenantName}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.type')}}</span>\\r\\n            <p class=\\\"stat-text\\\">{{$ctrl.getIndustryType(data.industryId)}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.contract_number')}}</span>\\r\\n            <p class=\\\"stat-text\\\">234234</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6\\\">\\r\\n            <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.total_area')}}</span>\\r\\n            <p class=\\\"stat-text\\\">\\r\\n                <span class=\\\"huge\\\">{{data.totalArea}} </span>\\r\\n                <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\" />\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"big\\\">\\r\\n        {{$ctrl.messages('assets.tenants.units')}}: {{data.spaces.length}} in {{$ctrl.getTowersCount()}} {{$ctrl.messages('assets.tenants.towers')}}\\r\\n    </div>\\r\\n    <div class=\\\"spaces\\\">\\r\\n        <span ng-repeat=\\\"space in data.spaces\\\" ng-class=\\\"space.id === selectedSpace.id ? 'selected' : ''\\\" ng-click=\\\"$ctrl.selectSpace(space.id)\\\">\\r\\n            [{{space.number}}]\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"space_descr\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-6\\\">\\r\\n                <div class=\\\"header\\\">\\r\\n                    <span class=\\\"stat-label\\\">{{selectedSpace.number}}</span>\\r\\n                    <span class=\\\"stat-label\\\">{{selectedSpace.towerName}}</span>\\r\\n                    <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.floor')}} {{selectedSpace.floorId}}</span>\\r\\n                </div>\\r\\n                <p class=\\\"stat-text\\\">{{$ctrl.utils.generateAddress(selectedSpace)}}</p>\\r\\n            </div>\\r\\n            <div class=\\\"col-xs-6\\\">\\r\\n                <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.area_in_unit')}}</span>\\r\\n                <p class=\\\"stat-text\\\">\\r\\n                    <span class=\\\"huge\\\">{{selectedSpace.rentableArea}} </span>\\r\\n                    <span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/>\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"stats\\\">\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.lease_start_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.startDate)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.lease_end_date')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{$ctrl.getParsedDate(data.endDate)}}</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.in_place_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">\\r\\n            {{(data.totalRentCost / data.totalArea).toFixed(2)}} €/<span ng-bind-html=\\\"$ctrl.messages('square.meter')\\\"/>\\r\\n            <span ng-if=\\\"data.spaces.length > 1\\\" class=\\\"tenants-avg-indicator\\\">\\r\\n                AVG\\r\\n            </span>\\r\\n        </p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.net_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{(data.totalRentCost - vatCosts - additionalCosts).toFixed(2)}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.vat')}} @ {{data.vat_percent || 10}}%</span>\\r\\n        <p class=\\\"stat-text\\\">{{vatCosts}} €</p>\\r\\n\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.additional_cost')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{additionalCosts}} €</p>\\r\\n\\r\\n        <hr class=\\\"total_hr\\\">\\r\\n        <span class=\\\"stat-label\\\">{{$ctrl.messages('assets.tenants.total_rent')}}</span>\\r\\n        <p class=\\\"stat-text\\\">{{data.totalRentCost}} €</p>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tenant-description/tenant-description.template.html\n// module id = 733\n// module chunks = 0","import Controller from './body-blocker.controller'\r\nimport Template from './body-blocker.template.html'\r\n\r\nlet BodyBlockerComponent = {\r\n  bindings: {\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default BodyBlockerComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/body-blocker/body-blocker.component.js","'use strict';\r\n\r\nexport default class SpaceDescription {\r\n    /*@ngInject*/\r\n    constructor($rootScope) {\r\n        this.$rootScope = $rootScope;\r\n    }\r\n\r\n    onClick() {\r\n        this.$rootScope.$broadcast('right-sidebar:close');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/body-blocker/body-blocker.controller.js","module.exports = \"<div class=\\\"blocker\\\" id=\\\"body-blocker\\\" ng-click=\\\"$ctrl.onClick()\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/body-blocker/body-blocker.template.html\n// module id = 736\n// module chunks = 0","import Controller from './usermenu.controller'\r\nimport Template from './usermenu.template.html'\r\n\r\nlet UserMenuComponent = {\r\n  bindings: {\r\n      userInfo: '=',\r\n      brokerInfo: '=?'\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default UserMenuComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermenu/usermenu.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nexport default class UserMenu {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, SecurityService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.securityService = SecurityService;\r\n        this.messages = Messages;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    signOut() {\r\n        this.securityService.signOut();\r\n        this.$state.go('login', null, { reload: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermenu/usermenu.controller.js","module.exports = \"<!--<ul class=\\\"mobile-menu mobile-navbar navbar-left user-menu\\\">\\r\\n    <div >Test</div>\\r\\n</ul>-->\\r\\n<ul class=\\\"nav navbar-nav navbar-right user-menu\\\">\\r\\n    <li class=\\\"dropdown\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">{{$ctrl.userInfo.displayName}}<span class=\\\"caret\\\"></span></a>\\r\\n\\r\\n        <div class=\\\"dropdown-menu dropdown-profile hidden-xs multi-level animated flipInX\\\">\\r\\n            <div class=\\\"media\\\">\\r\\n            <div class=\\\"profile-image pull-left\\\">\\r\\n                <img class=\\\"media-object user-photo\\\" src=\\\"img/user.svg\\\" alt=\\\"...\\\">\\r\\n            </div>\\r\\n            <div class=\\\"media-body\\\">\\r\\n                <div class=\\\"profile-name text-overflow\\\">{{$ctrl.userInfo.displayName}}</div>\\r\\n                <div class=\\\"profile-company text-overflow\\\">{{$ctrl.userInfo.roleName}}</div>\\r\\n                <div class=\\\"profile-mail text-overflow small text-muted\\\">{{$ctrl.userInfo.email}}</div>\\r\\n            </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <ul class=\\\"nav profile-links\\\">\\r\\n                <li><a ui-sref=\\\"#\\\">{{$ctrl.messages('mainheader.settings.account')}}</a></li>\\r\\n                <!--<li class=\\\"divider\\\"></li>-->\\r\\n                <li><a ng-click=\\\"$ctrl.signOut()\\\">{{$ctrl.messages('mainheader.signout')}}</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </li>\\r\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermenu/usermenu.template.html\n// module id = 739\n// module chunks = 0","import Controller from './actionmenu.controller'\r\nimport Template from './actionmenu.template.html'\r\n\r\nlet ActionMenuComponent = {\r\n  bindings: {\r\n      userInfo: '=',\r\n      brokerInfo: '=?'\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default ActionMenuComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/actionmenu/actionmenu.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nexport default class ActionMenu {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, SecurityService, Activities) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.securityService = SecurityService;\r\n        this.activities = Activities;\r\n        this.messages = Messages;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.applyActivities();\r\n    }\r\n\r\n    applyActivities() {\r\n        this.securityService.getActivities().then(() => {\r\n            this.securityService.canDo(this.activities.HomeView)\r\n                .then(\r\n                    (result) => this.homeAvailable = result,\r\n                    () => this.homeAvailable = false);\r\n            this.securityService.canDo(this.activities.BrokersView)\r\n                .then(\r\n                    (result) => this.brokersAvailable = result,\r\n                    () => this.brokersAvailable = false);\r\n            this.securityService.canDo(this.activities.UsersView)\r\n                .then(\r\n                    (result) => this.usersAvailable = result,\r\n                    () => this.usersAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsManage)\r\n                .then(\r\n                    (result) => this.assetsAvailable = result,\r\n                    () => this.assetsAvailable = false);\r\n            this.securityService.canDo(this.activities.AssetsView)\r\n                .then(\r\n                    (result) => this.assetsViewAvailable = result,\r\n                    () => this.assetsViewAvailable = false);\r\n            this.securityService.canDo(this.activities.ClientsManage)\r\n                .then(\r\n                    (result) => this.clientsAvailable = result,\r\n                    () => this.clientsAvailable = false);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/actionmenu/actionmenu.controller.js","module.exports = \"<ul class=\\\"nav navbar-nav navbar-right user-menu\\\">\\r\\n    <li class=\\\"dropdown\\\">\\r\\n        <div class=\\\"dropdown-toggle header-link\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n            <i class=\\\"pe-7s-keypad\\\"></i>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"dropdown-menu hdropdown bigmenu animated flipInX\\\">\\r\\n            <table>\\r\\n                <tbody ng-if=\\\"$ctrl.userInfo.roleId === 2\\\">\\r\\n                    <tr>\\r\\n                        <td ng-show=\\\"$ctrl.assetsViewAvailable\\\">\\r\\n                            <a ui-sref=\\\"asset-stats\\\">\\r\\n                                <i class=\\\"pe pe-7s-culture text-info\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.assets')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td ng-show=\\\"$ctrl.clientsAvailable\\\">\\r\\n                            <a <a ui-sref=\\\"clients\\\">\\r\\n                                <i class=\\\"pe pe-7s-users text-warning\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.clients')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tbody ng-if=\\\"$ctrl.userInfo.roleId === 1\\\">\\r\\n                    <tr>\\r\\n                        <td ng-show=\\\"$ctrl.brokersAvailable\\\">\\r\\n                            <a <a ui-sref=\\\"brokers\\\">\\r\\n                                <i class=\\\"pe pe-7s-users text-warning\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.brokers')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td ng-show=\\\"$ctrl.usersAvailable\\\">\\r\\n                            <a <a ui-sref=\\\"users\\\">\\r\\n                                <i class=\\\"pe pe-7s-users text-warning\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.users')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                        <td ng-show=\\\"$ctrl.assetsAvailable\\\">\\r\\n                            <a ui-sref=\\\"assets\\\">\\r\\n                                <i class=\\\"pe pe-7s-culture text-info\\\"></i>\\r\\n                                <h5>{{$ctrl.messages('sidebar.assets')}}</h5>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </li>\\r\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/actionmenu/actionmenu.template.html\n// module id = 742\n// module chunks = 0","import Controller from './footer.controller'\r\nimport Template from './footer.template.html'\r\n\r\nlet FooterComponent = {\r\n  bindings: {\r\n  },\r\n  controller: Controller,\r\n  template: Template\r\n};\r\n\r\nexport default FooterComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/footer/footer.component.js","'use strict';\r\n\r\nimport Messages from '../../messages';\r\n\r\nexport default class Footer {\r\n    /*@ngInject*/\r\n    constructor($scope, $state) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.messages = Messages;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/footer/footer.controller.js","module.exports = \"<div class=\\\"footer fixed-footer\\\">\\r\\n        <span class=\\\"pull-right\\\">\\r\\n            Tower360 GmBH 2016-17\\r\\n        </span>\\r\\n        Powered by <img src=\\\"./img/web-logo.svg\\\" style=\\\"width: 50px; height: 18px; display: inline-block\\\">\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/footer/footer.template.html\n// module id = 745\n// module chunks = 0","import $ from 'jquery';\r\nimport jQuery from 'jquery';\r\n// export for others scripts to use\r\nwindow.$ = $;\r\nwindow.jQuery = jQuery;\r\n\r\nimport CustomStore from 'devextreme/data/custom_store';\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('tower360.utils', []);\r\n\r\n    angular.module('tower360.utils')\r\n        .factory('jqPromise', [\r\n            function () {\r\n                return function (promise) {\r\n                    var jqDeferred = $.Deferred();\r\n                    promise.then(function (val) {\r\n                        jqDeferred.resolve.apply(jqDeferred, val);\r\n                    }, function (err) {\r\n                        jqDeferred.reject.apply(jqDeferred, err);\r\n                    });\r\n\r\n                    return jqDeferred.promise();\r\n                }\r\n            }\r\n        ]);\r\n\r\n    angular.module('tower360.utils')\r\n    .factory('StoreAdapter', ['jqPromise',\r\n        function (jqPromise) {\r\n            return {\r\n                createStore: function (resource, queryParams, errorHandler) {\r\n                    queryParams = typeof queryParams !== 'undefined' ? queryParams : {};\r\n\r\n                    errorHandler = typeof errorHandler !== 'undefined' ? errorHandler : {\r\n                        requestFailed: function (response) {\r\n                        }\r\n                    };\r\n\r\n                    var handleError = function (response) {\r\n                        errorHandler.requestFailed(response);\r\n                    };\r\n\r\n                    return new CustomStore({\r\n                        key: \"id\",\r\n                        load: function (loadOptions) {\r\n                            var params = loadOptions.sort ? $.extend({}, queryParams, loadOptions.sort[0]) : queryParams;\r\n\r\n                            return jqPromise(\r\n                                resource.query(params).$promise\r\n                                    .then(function (data) {\r\n                                        return [data, { totalCount: data.length }];\r\n                                    }, function (response) {\r\n                                        handleError(response);\r\n                                    }));\r\n                        },\r\n\r\n                        byKey: function (key) {\r\n                            return jqPromise(resource.get({ id: key }).$promise\r\n                                .catch(function (response) {\r\n                                    handleError(response);\r\n                                }));\r\n                        },\r\n\r\n                        insert: function (data) {\r\n                            return jqPromise(resource.save(data).$promise\r\n                                .catch(function (response) {\r\n                                    handleError(response);\r\n                                }));\r\n                        },\r\n\r\n                        update: function (key, data) {\r\n                            data.id = key;\r\n                            return jqPromise(resource.update(data).$promise\r\n                                .catch(function (response) {\r\n                                    handleError(response);\r\n                                }));\r\n                        },\r\n\r\n                        remove: function (key) {\r\n                            return jqPromise(resource.delete({ id: key }).$promise\r\n                                .catch(function (response) {\r\n                                    handleError(response);\r\n                                }));\r\n                        },\r\n\r\n                        totalCount: function (loadOptions) {\r\n                            return jqPromise(resource.count().$promise\r\n                                .then(function (data) {\r\n                                    return [data.count];\r\n                                }, function (response) {\r\n                                    handleError(response);\r\n                                }));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }]);\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/storeadapter.service.js","import Template from './paneltools.template.html';\r\n\r\nexport default class PanelToolsDirective {\r\n    /*@ngInject*/\r\n    constructor() {\r\n        this.restrict = 'A';\r\n        this.scope = true;\r\n        this.template = Template;\r\n    }\r\n\r\n    /*@ngInject*/\r\n    controller($scope, $element, $timeout) {\r\n        // Function for collapse ibox\r\n        $scope.showhide = function () {\r\n            var hpanel = $element.closest('div.hpanel');\r\n            var icon = $element.find('i:first');\r\n            var body = hpanel.find('div.panel-body');\r\n            var footer = hpanel.find('div.panel-footer');\r\n            body.slideToggle(300);\r\n            footer.slideToggle(200);\r\n            // Toggle icon from up to down\r\n            icon.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\r\n            hpanel.toggleClass('').toggleClass('panel-collapse');\r\n            $timeout(function () {\r\n                hpanel.resize();\r\n                hpanel.find('[id^=map-]').resize();\r\n            }, 50);\r\n        };\r\n\r\n        // Function for close ibox\r\n        $scope.closebox = function () {\r\n            var hpanel = $element.closest('div.hpanel');\r\n            hpanel.remove();\r\n        };\r\n\r\n    }\r\n\r\n    /*@ngInject*/\r\n    static activate() {\r\n        PanelToolsDirective.instance = new PanelToolsDirective();\r\n        return PanelToolsDirective.instance;\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/panels/paneltools.directive.js","module.exports = \"<!-- This is template for panel tools -->\\r\\n<!-- It contains collapse function (showhide) and close function (closebox) -->\\r\\n<!-- All function is handled from directive panelTools in directives.js file -->\\r\\n<div class=\\\"panel-tools\\\">\\r\\n    <a ng-click=\\\"showhide()\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a>\\r\\n    <!--<a ng-click=\\\"closebox()\\\"><i class=\\\"fa fa-times\\\"></i></a>-->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/panels/paneltools.template.html\n// module id = 748\n// module chunks = 0","export default class AnimatePanelDirective {\r\n    /*@ngInject*/\r\n    constructor($timeout, $state) {\r\n        this.restrict = 'A';\r\n        this.$state = $state;\r\n        this.$timeout = $timeout;\r\n    }\r\n\r\n    link(scope, element, attrs) {\r\n        let self = this;\r\n\r\n        //Set default values for start animation and delay\r\n        let startAnimation = 0,\r\n            delay = 0.06,   // seconds\r\n            start = Math.abs(delay) + startAnimation;\r\n\r\n        // Set default values for attrs\r\n        if (!attrs.effect) {\r\n            attrs.effect = 'zoomIn'\r\n        }\r\n\r\n        if (attrs.delay) {\r\n            delay = attrs.delay / 10\r\n        } else {\r\n            delay = 0.06\r\n        }\r\n\r\n        if (!attrs.child) {\r\n            attrs.child = '.row > div'\r\n        } else {\r\n            attrs.child = \".\" + attrs.child\r\n        }\r\n\r\n\r\n        // Get all visible element and set opactiy to 0\r\n        let panel = element.find(attrs.child);\r\n        panel.addClass('opacity-0');\r\n\r\n        // Wrap to $timeout to execute after ng-repeat\r\n        self.$timeout(function () {\r\n\r\n            // Get all elements and add effect class\r\n            panel.addClass('animated-panel').addClass(attrs.effect);\r\n\r\n            let panelsCount = panel.length + 10,\r\n                animateTime = (panelsCount * delay * 10000) / 10;\r\n\r\n            // Add delay for each child elements\r\n            panel.each(function (i, elm) {\r\n                start += delay;\r\n                let rounded = Math.round(start * 10) / 10;\r\n                $(elm).css('animation-delay', rounded + 's');\r\n                // Remove opacity 0 after finish\r\n                $(elm).removeClass('opacity-0');\r\n            });\r\n\r\n            // Clear animation after finish\r\n            self.$timeout(function () {\r\n                $('.stagger').css('animation', '');\r\n                $('.stagger').removeClass(attrs.effect).removeClass('animated-panel').removeClass('stagger');\r\n                panel.resize();\r\n            }, animateTime)\r\n\r\n        });\r\n    }\r\n\r\n    /*@ngInject*/\r\n    static activate($timeout, $state) {\r\n        AnimatePanelDirective.instance = new AnimatePanelDirective($timeout, $state);\r\n        return AnimatePanelDirective.instance;\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/panels/animate.directive.js","'use strict';\r\n\r\nexport default function($timeout, $window) {\r\n    let swal = $window.swal;\r\n    return {\r\n        swal: function(arg1, arg2, arg3) {\r\n            $timeout(function() {\r\n                if (typeof(arg2) === 'function') {\r\n                    swal(arg1, function(isConfirm) {\r\n                        $timeout(function() {\r\n                            arg2(isConfirm);\r\n                        });\r\n                    }, arg3);\r\n                } else {\r\n                    swal(arg1, arg2, arg3);\r\n                }\r\n            }, 200);\r\n        },\r\n        success: function(title, message) {\r\n            $timeout(function() {\r\n                swal(title, message, 'success');\r\n            }, 200);\r\n        },\r\n        error: function(title, message) {\r\n            $timeout(function() {\r\n                swal(title, message, 'error');\r\n            }, 200);\r\n        },\r\n        warning: function(title, message) {\r\n            $timeout(function() {\r\n                swal(title, message, 'warning');\r\n            }, 200);\r\n        },\r\n        info: function(title, message) {\r\n            $timeout(function() {\r\n                swal(title, message, 'info');\r\n            }, 200);\r\n        }\r\n\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/alerts/sweet-alert.factory.js","import HomeController from './home-controller';\r\n\r\nvar module = angular.module('tower360.home', [])\r\n  .controller('HomeController', HomeController);\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.js","export default class HomeController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, SecurityService) {\r\n        this.$state = $state;\r\n        this.securityService = SecurityService;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.securityService.getUserInfo().then(result => {\r\n            let redirectTarget = 'brokers';\r\n            if (result.roleId === 2) {\r\n                redirectTarget = 'asset-stats';\r\n            }\r\n            this.$state.go(redirectTarget);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home-controller.js","import LoginController from './login-controller';\r\n\r\nvar module = angular.module('tower360.login', [])\r\n  .controller('LoginController', LoginController);\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.js","import Messages from '../messages';\r\n\r\nexport default class LoginController {\r\n  /*@ngInject*/\r\n  constructor($state, $stateParams, SecurityService, NotificationService, localStorageService) {\r\n    this.$state = $state;\r\n    this.securityService = SecurityService;\r\n    this.notificationService = NotificationService;\r\n\r\n    this.signInData = new SignInData();\r\n\r\n    if ($stateParams.automatic) {\r\n      this.error = Messages('login.automatic.signout');\r\n    }\r\n    else {\r\n      this.error = null;\r\n    }\r\n  }\r\n\r\n  signIn() {\r\n    this.securityService.signIn(this.signInData.userName, this.signInData.password)\r\n      .then(\r\n        (response) => {\r\n          this.securityService.reset(); \r\n          this.$state.go('home');\r\n        },\r\n        (err) => { this.error = err.data.error_description; }\r\n      );\r\n  }\r\n}\r\n\r\nclass SignInData {\r\n  constructor() {\r\n    this.userName = null;\r\n    this.password = null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login-controller.js","import BrokersController from './brokers.controller';\r\nimport BrokerController from './broker.controller';\r\nimport 'devextreme/integration/angular';\r\nimport Broker from './broker.resource';\r\n\r\nvar module = angular.module('tower360.brokers', ['dx'])\r\n  .controller('BrokersController', BrokersController)\r\n  .controller('BrokerController', BrokerController)\r\n  .factory('Broker', Broker.activate);\r\n\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/brokers/brokers.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport BrokerEditModalController from './broker-edit-modal.controller';\r\nimport BrokerEditModalTemplate from './broker-edit-modal.template.html';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class BrokersController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, SecurityService, NotificationService, Broker, sweetAlert, $uibModal, UtilsService) {\r\n        this.securityService = SecurityService;\r\n        this.notificationService = NotificationService;\r\n        this.Broker = Broker;\r\n        this.$state = $state;\r\n\r\n        this.stateStore = Constants.brokerStateStore();\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n\r\n        this.utils = UtilsService;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function(response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n\r\n        self.brokers = [];\r\n        self.Broker.query(\r\n            {},\r\n            (result) => {\r\n                self.brokers = result;\r\n                \r\n                 self.brokers.forEach(item => {\r\n                    item.address = self.utils.generateAddress(item);\r\n                });\r\n                \r\n                self.store = new ArrayStore({\r\n                    data: self.brokers,\r\n                    key: \"id\",\r\n                    modified: function() {\r\n                        // 'modified' event handler\r\n                    },\r\n                    errorHandler: self.errorHandler.requestFailed\r\n                });\r\n\r\n                self.gridDataSource = {store: self.store};\r\n\r\n\r\n                self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n                    dataSource: self.gridDataSource,\r\n                    columns: [\r\n                        {\r\n                            dataField: \"id\",\r\n                            visible: false\r\n                        }, {\r\n                            dataField: \"name\",\r\n                            caption: Messages('brokers.name'),\r\n                            sortOrder: \"asc\",\r\n                            filterOperations: ['contains', 'startswith', '='],\r\n                            selectedFilterOperation: 'contains',\r\n                            cellTemplate: function(cellElement, cellInfo) {\r\n                                let element = $('<a>', {\r\n                                    'href': '/brokers/' + cellInfo.data.id,\r\n                                    'ui-sref': 'broker'\r\n                                });\r\n\r\n                                element.text(cellInfo.displayValue)\r\n                                       .appendTo(cellElement);\r\n                            }\r\n                        }, {\r\n                            dataField: \"address\",\r\n                            caption: Messages('brokers.address'),\r\n                            filterOperations: ['contains', 'startswith', '='],\r\n                            selectedFilterOperation: 'contains'\r\n                        }, {\r\n                            dataField: 'state',\r\n                            caption: Messages('brokers.state'),\r\n                            width: 100,\r\n                            lookup: {\r\n                                dataSource: this.stateStore,\r\n                                displayExpr: 'display',\r\n                                valueExpr: 'value'\r\n                            },\r\n                        },\r\n                        {\r\n                            caption: Messages('actions'),\r\n                            width: 90,\r\n                            alignment: 'right',\r\n                            cellTemplate: function(container, options) {\r\n                                container.addClass(\"actions-cell\");\r\n\r\n                                $(\"<div />\").dxButton({\r\n                                    type: 'custom',\r\n                                    template: `<div class=\"fa fa-pencil\" title=\"${Messages('brokers.edit')}\"></div>`,\r\n                                    onClick: function(data) {\r\n                                        data.jQueryEvent.stopPropagation();\r\n                                        let modal = self.$uibModal.open({\r\n                                            controller: BrokerEditModalController,\r\n                                            template: BrokerEditModalTemplate,\r\n                                            resolve: {\r\n                                                brokerObject: Object.assign({}, options.data)\r\n                                            }\r\n                                        });\r\n                                        modal.result.then((result) => {\r\n                                            jQuery.extend(options.data, result);\r\n                                        });\r\n                                    }\r\n                                }).appendTo(container);\r\n\r\n                                let isArchived = options.data.state === 2;\r\n                                $(\"<div />\").dxButton({\r\n                                    type: 'custom',\r\n                                    template: `<div class=\"fa ${isArchived ? 'fa-undo' : 'fa-trash-o'}\" title=\"${isArchived ? Messages('brokers.activate') : Messages('brokers.archive')}\"></div>`,\r\n                                    onClick: function(data) {\r\n                                        if (isArchived) {\r\n                                            self.activateBroker(options.data);\r\n                                        } else {\r\n                                            self.archiveBroker(options.data);\r\n                                        }\r\n                                    }\r\n                                }).appendTo(container);\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    archiveBroker(broker) {\r\n        broker = Object.assign({}, broker);\r\n        let self = this;\r\n        broker.state = 2;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('brokers.archive.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('brokers.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('brokers.archive.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    self.Broker.update({id: broker.id},\r\n                        broker,\r\n                        function(result) {\r\n                            self.store.remove(broker.id);\r\n                            self.store.insert(result);\r\n                            $('#gridContainer').dxDataGrid('instance').refresh();\r\n                            self.notificationService.success(Messages('brokers.message.deleted'));\r\n                        },\r\n                        function(result) {\r\n                            self.notificationService.error(result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    activateBroker(broker) {\r\n        broker = Object.assign({}, broker);\r\n\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('brokers.activate.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('brokers.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('brokers.activate.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    broker.state = 1;\r\n                    self.Broker.update({ id: broker.id }, broker,\r\n                        function(result) {\r\n                            self.store.remove(broker.id);\r\n                            self.store.insert(result);\r\n                            $('#gridContainer').dxDataGrid('instance').refresh();\r\n                            self.notificationService.success(Messages('brokers.message.activated'));\r\n                        },\r\n                        function(result) {\r\n                            self.notificationService.error(result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/brokers/brokers.controller.js","import BrokerEditModalController from './broker-edit-modal.controller';\r\nimport BrokerEditModalTemplate from './broker-edit-modal.template.html';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class BrokerController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, Broker, brokerObject, NotificationService, sweetAlert, $filter, $uibModal, NgMap, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Broker = Broker;\r\n        this.brokerObject = brokerObject;\r\n        this.notificationService = NotificationService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n        this.NgMap = NgMap;\r\n        this.utils = UtilsService;\r\n        this.$filter = $filter;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        this.$scope.isArchived = this.brokerObject.state === 2;\r\n\r\n        this.brokerObject.address = this.utils.generateAddress(this.brokerObject);\r\n\r\n        this.NgMap.getMap().then(map => {\r\n            this.map = map;\r\n            if (!this.map.marker) \r\n                this.map.marker = new google.maps.Marker();\r\n\r\n            this.map.marker.setMap(null);\r\n\r\n            let stylez = [{\r\n                featureType: 'all',\r\n                elementType: 'all',\r\n                stylers: [{\r\n                    saturation: -100  // made the map as grayscale\r\n                }]\r\n            }];\r\n            let mapType = new google.maps.StyledMapType(stylez, {\r\n                name: 'Grayscale'\r\n            });\r\n\r\n            map.mapTypes.set('tehgrayz', mapType);\r\n            map.setMapTypeId('tehgrayz');\r\n\r\n            this.setMapCoordinates();\r\n        });\r\n    }\r\n\r\n    editBroker() {\r\n        let modal = this.$uibModal.open({\r\n            controller: BrokerEditModalController,\r\n            template: BrokerEditModalTemplate,\r\n            resolve: {\r\n                brokerObject: Object.assign({}, this.brokerObject)\r\n            }\r\n        });\r\n        modal.result.then((result) => {\r\n            let newAddress = this.utils.generateAddress(result),\r\n                newCountry = result.countryId,\r\n                needToUpdateMap;\r\n\r\n            if (newAddress !== this.brokerObject.address || newCountry !== this.brokerObject.countryId) {\r\n                needToUpdateMap = true;\r\n            }\r\n            \r\n            jQuery.extend(this.brokerObject, result);\r\n            this.$scope.isArchived = result.state === 2;\r\n\r\n            this.brokerObject.address = newAddress;\r\n\r\n            if (needToUpdateMap) {\r\n                this.setMapCoordinates();\r\n            }\r\n        });\r\n    }\r\n\r\n    archiveTrigger() {\r\n        if (this.$scope.isArchived) {\r\n            this.activate();\r\n        } else {\r\n            this.archive();\r\n        }\r\n    }\r\n\r\n    archive() {\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('brokers.archive.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('brokers.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('brokers.archive.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    let broker = Object.assign({}, self.brokerObject);\r\n                    broker.state = 2;\r\n                    self.Broker.update({ id: broker.id },broker,\r\n                        function() {\r\n                            self.brokerObject.state = 2;\r\n                            self.$scope.isArchived = true;\r\n                            self.notificationService.success(Messages('brokers.message.deleted'));\r\n                        },\r\n                        function(result) {\r\n                            self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    activate() {\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('brokers.activate.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('brokers.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('brokers.activate.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    let broker = Object.assign({}, self.brokerObject);\r\n                    broker.state = 1;\r\n                    self.Broker.update({ id: broker.id }, broker,\r\n                        function() {\r\n                            self.brokerObject.state = 1;\r\n                            self.$scope.isArchived = false;\r\n                            self.notificationService.success(Messages('brokers.message.activated'));\r\n                        },\r\n                        function(result) {\r\n                            self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    setMapCoordinates() {\r\n        this.map.marker.setMap(null);\r\n\r\n        if (this.brokerObject.address) {\r\n            let geocoder = new google.maps.Geocoder(),\r\n                countries = Constants.countryStorePlain(),\r\n                country = this.$filter('filter')(countries, {\r\n                    value: this.brokerObject.countryId\r\n                });\r\n\r\n            if (country && country[0]) {\r\n                country = country[0].text + ', ';\r\n            } else {\r\n                country = '';\r\n            }\r\n\r\n            geocoder.geocode({\r\n                address: country + this.brokerObject.address\r\n            }, (result, status) => {\r\n                if (status === 'OK') {\r\n                    this.map.setCenter(result[0].geometry.location);\r\n\r\n                    this.map.marker.setPosition(result[0].geometry.location);\r\n                    this.map.marker.setMap(this.map)\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/brokers/broker.controller.js","export default class Broker {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/brokers/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/brokers',\r\n            isArray: true\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        create: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/brokers',\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Broker.instance = new Broker(ConfigurationService, $resource);\r\n    return Broker.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/brokers/broker.resource.js","import UsersController from './users.controller';\r\nimport UserController from './user.controller';\r\nimport User from './user.resource';\r\nimport Role from './role.resource';\r\nimport Broker from './broker.resource';\r\nimport Locale from './locale.resource';\r\n\r\nvar module = angular.module('tower360.users', [])\r\n  .controller('UsersController', UsersController)\r\n  .controller('UserController', UserController)\r\n  .factory('User', User.activate)\r\n  .factory('Role', Role.activate)\r\n  .factory('Broker', Broker.activate)\r\n  .factory('Locale', Locale.activate);\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport UserEditModalController from './user-edit-modal.controller';\r\nimport UserEditModalTemplate from './user-edit-modal.template.html';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class UsersController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, User, Broker, Role, StoreAdapter, currentUser, NotificationService, sweetAlert, $uibModal) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.User = User;\r\n        this.Broker = Broker;\r\n        this.Role = Role;\r\n        this.StoreAdapter = StoreAdapter;\r\n        this.currentUser = currentUser;\r\n        this.notificationService = NotificationService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n\r\n        this.initGrid();\r\n    }\r\n\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        }\r\n\r\n        self.stateStore = Constants.userStateStore();\r\n\r\n        self.users = [];\r\n\r\n        self.User.query(\r\n            {},\r\n            (result) => {\r\n                self.users = result;\r\n\r\n                self.store = new ArrayStore({\r\n                    data: self.users,\r\n                    key: \"id\",\r\n                    modified: function () {\r\n                        // 'modified' event handler\r\n                    },\r\n                    errorHandler: self.errorHandler.requestFailed\r\n                });\r\n                self.gridDataSource = { store: self.store };\r\n\r\n                self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n                    dataSource: self.gridDataSource,\r\n                    columns: [{\r\n                        dataField: \"id\",\r\n                        visible: false\r\n                    }, {\r\n                        dataField: \"displayName\",\r\n                        caption: Messages('users.displayname'),\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains',\r\n                        cellTemplate: function(cellElement, cellInfo) {\r\n                            let element = $('<a>', {\r\n                                'href': '/users/' + cellInfo.data.id,\r\n                                'ui-sref': 'user'\r\n                            });\r\n\r\n                            element.text(cellInfo.displayValue)\r\n                                   .appendTo(cellElement);\r\n                        }\r\n                    }, {\r\n                        dataField: \"email\",\r\n                        caption: Messages('users.email'),\r\n                        sortOrder: \"asc\",\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains'\r\n                    }, {\r\n                        dataField: \"state\",\r\n                        caption: Messages('users.state'),\r\n                        lookup: {\r\n                            dataSource: self.stateStore,\r\n                            displayExpr: 'display',\r\n                            valueExpr: 'value'\r\n                        }\r\n                    }, {\r\n                        dataField: \"roleId\",\r\n                        caption: Messages('users.role'),\r\n                        lookup: {\r\n                            dataSource: this.StoreAdapter.createStore(this.Role, {}, self.errorHandler),\r\n                            displayExpr: 'name',\r\n                            valueExpr: 'id'\r\n                        }\r\n                    }, {\r\n                        dataField: \"brokerId\",\r\n                        caption: Messages('users.broker'),\r\n                        lookup: {\r\n                            dataSource: this.StoreAdapter.createStore(this.Broker, {}, self.errorHandler),\r\n                            displayExpr: 'name',\r\n                            valueExpr: 'id'\r\n                        }\r\n                    }, {\r\n                        caption: Messages('actions'),\r\n                        width: 90,\r\n                        alignment: 'right',\r\n                        cellTemplate: function (container, options) {\r\n                            container.addClass(\"actions-cell\");\r\n\r\n                            $(\"<div />\").dxButton({\r\n                                type: 'custom',\r\n                                template: `<div class=\"fa fa-pencil\" title=\"${Messages('users.edit')}\"></div>`,\r\n                                disabled: options.data.id === self.currentUser.id, // this is you\r\n                                onClick: function(data) {\r\n                                    data.jQueryEvent.stopPropagation();\r\n\r\n                                    let modal = self.$uibModal.open({\r\n                                        controller: UserEditModalController,\r\n                                        template: UserEditModalTemplate,\r\n                                        resolve: {\r\n                                            userObject: Object.assign({}, options.data)\r\n                                        }\r\n                                    });\r\n                                    modal.result.then((result) => {\r\n                                        jQuery.extend(options.data, result);\r\n                                    });\r\n                                }\r\n                            }).appendTo(container);\r\n\r\n                            let isArchived = options.data.state === 3;\r\n                            $(\"<div />\").dxButton({\r\n                                type: 'custom',\r\n                                template: `<div class=\"fa ${isArchived ? 'fa-undo' : 'fa-trash-o'}\" title=\"${isArchived ? Messages('users.activate') : Messages('users.archive')}\"></div>`,\r\n                                disabled: options.data.id === self.currentUser.id,\r\n                                onClick: function(data) {\r\n                                    if (isArchived) {\r\n                                        self.activateUser(options.data);\r\n                                    } else {\r\n                                        self.archiveUser(options.data);\r\n                                    }\r\n                                }\r\n                            }).appendTo(container);\r\n                        }\r\n                    }]\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    archiveUser(user) {\r\n        let self = this;\r\n        user = Object.assign({}, user);\r\n        \r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('users.archive.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('users.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('users.archive.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    user.state = 3;\r\n                    self.User.update({ id: user.id }, user,\r\n                        function (result) {\r\n                            self.store.remove(user.id);\r\n                            self.store.insert(result);\r\n\r\n                            $('#gridContainer').dxDataGrid('instance').refresh();\r\n                            self.notificationService.success(Messages('users.message.archived'));\r\n                        },\r\n                        function (result) {\r\n                            self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    activateUser(user) {\r\n        user = Object.assign({}, user);\r\n\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('users.activate.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('users.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('users.activate.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    user.state = 2;\r\n                    self.User.update({ id: user.id }, user,\r\n                        function (result) {\r\n                            self.store.remove(user.id);\r\n                            self.store.insert(result);\r\n\r\n                            $('#gridContainer').dxDataGrid('instance').refresh();\r\n                            self.notificationService.success(Messages('users.message.activated'));\r\n                        },\r\n                        function (result) {\r\n                            self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.controller.js","import UserEditModalController from './user-edit-modal.controller';\r\nimport UserChangePasswordModalController from './user-change-password-modal.controller';\r\nimport UserEditModalTemplate from './user-edit-modal.template.html';\r\nimport UserChangePasswordModalTemplate from './user-change-password-modal.template.html';\r\nimport Messages from '../messages';\r\n\r\nexport default class UserController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, User, userObject, currentUser, StoreAdapter, Role, Locale, NotificationService, sweetAlert, $uibModal) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.User = User;\r\n        this.userObject = userObject;\r\n        this.currentUser = currentUser;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.Role = Role;\r\n        this.Locale = Locale;\r\n        this.notificationService = NotificationService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$scope.isArchived = this.userObject.state === 3;\r\n\r\n        let rolesStore = this.storeAdapter.createStore(this.Role, {}, {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        });\r\n\r\n        rolesStore.load().done((result) => {\r\n            this.roles = result;\r\n            this.setRole();\r\n        });\r\n\r\n        let localesStore = this.storeAdapter.createStore(this.Locale, {}, {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        });\r\n\r\n        localesStore.load().done((result) => {\r\n            this.locales = result;\r\n            this.setLocale();\r\n        });\r\n    }\r\n\r\n    setRole() {\r\n        let role = this.roles.find((item) => {\r\n            return item.id === this.userObject.roleId;\r\n        });\r\n        role = role || {};\r\n        this.$scope.role = role;\r\n    }\r\n\r\n    setLocale() {\r\n        let locale = this.locales.find((item) => {\r\n            return item.id === this.userObject.localeId;\r\n        });\r\n        locale = locale || {};\r\n        this.$scope.locale = locale;\r\n    }\r\n\r\n    editUser() {\r\n        let modal = this.$uibModal.open({\r\n            controller: UserEditModalController,\r\n            template: UserEditModalTemplate,\r\n            resolve: {\r\n                userObject: Object.assign({}, this.userObject)\r\n            }\r\n        });\r\n        modal.result.then((result) => {\r\n            jQuery.extend(this.userObject, result);\r\n            this.$scope.isArchived = result.state === 3;\r\n            this.setRole();\r\n            this.setLocale();\r\n        });\r\n    }\r\n\r\n    archiveTrigger() {\r\n        if (this.$scope.isArchived) {\r\n            this.activate();\r\n        } else {\r\n            this.archive();\r\n        }\r\n    }\r\n\r\n    archive() {\r\n        let self = this;\r\n\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('users.archive.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('users.archive.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    let user = Object.assign({}, self.userObject);\r\n                    user.state = 3;\r\n                    self.User.update({ id: user.id }, user,\r\n                        function() {\r\n                            self.userObject.state = 3;\r\n                            self.$scope.isArchived = true;\r\n                            self.notificationService.success(Messages('users.message.archived'));\r\n                        },\r\n                        function(result) {\r\n                            console.error(result);\r\n                            self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    activate() {\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('users.activate.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('users.activate.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    let user = Object.assign({}, self.userObject);\r\n                    user.state = 2;\r\n                    self.User.update({ id: user.id }, user,\r\n                        function() {\r\n                            self.userObject.state = 1;\r\n                            self.$scope.isArchived = false;\r\n                            self.notificationService.success(Messages('users.message.activated'));\r\n                        },\r\n                        function(result) {\r\n                            self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    changePassword(){\r\n        let modal = this.$uibModal.open({\r\n            controller: UserChangePasswordModalController,\r\n            template: UserChangePasswordModalTemplate,\r\n            resolve: {\r\n                userId: this.userObject.id\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user.controller.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class UserChangePasswordController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $uibModalInstance, User, userId, NotificationService, sweetAlert) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.User = User;\r\n        this.userId = userId;\r\n        this.notificationService = NotificationService;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.validationGroup = 'user-change-password';\r\n        this.sweetAlert = sweetAlert;\r\n\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        this.$scope.isSaveOperationDisable = false;\r\n\r\n        this.$scope.changePasswordModel = {\r\n                newPassword: null,\r\n                confirmPassword: null\r\n            }\r\n\r\n        self.$scope.isModalChanged = function(){\r\n            return self.$scope.changePasswordModel.newPassword != null && self.$scope.changePasswordModel.confirmPassword != null;\r\n        }\r\n\r\n        self.comprasionTarget = function() {\r\n            if (self.$scope.changePasswordModel.newPassword) {\r\n                return self.$scope.changePasswordModel.newPassword;\r\n            }\r\n        }\r\n\r\n        self.$scope.isFormValid = function(){\r\n            let result = ValidationEngine.getGroupConfig(self.validationGroup).validate();\r\n            return result.isValid;\r\n        }\r\n\r\n        this.$scope.newPasswordSettings = {\r\n            placeholder: Messages('users.placeholder.newPassword'),\r\n            bindingOptions: {\r\n                value: 'changePasswordModel.newPassword '\r\n            },\r\n            mode: 'password' \r\n        };\r\n        this.$scope.newPasswordValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', min: 6, message :Messages('validation.shortPassword') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.confirmPasswordSettings = {\r\n            placeholder: Messages('users.placeholder.confirmPassword'),\r\n            bindingOptions: {\r\n                value: 'changePasswordModel.confirmPassword '\r\n            },\r\n            mode: 'password' \r\n        };\r\n        this.$scope.confirmPasswordValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'compare',  comparisonTarget: self.comprasionTarget, message: Messages('validation.passwordsNotMatch') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.validateAndSave = () => {\r\n            let result = ValidationEngine.getGroupConfig(this.validationGroup).validate();\r\n            let self = this;\r\n            if (result.isValid) {\r\n                self.$scope.saveInProgress = true;\r\n                self.$scope.isSaveOperationDisable = true;\r\n\r\n                this.User.changePassword({ id: this.userId }, this.$scope.changePasswordModel,\r\n                        (result) => {\r\n                            this.notificationService.success(Messages('users.message.updated'));\r\n                            self.$scope.saveInProgress = false;\r\n                            this.$uibModalInstance.close(this.$scope.user);\r\n                            this.sweetAlert.swal(\r\n                                {\r\n                                    title: Messages('users.changePassord.title'),\r\n                                    text: Messages('users.changePassword.success'),\r\n                                    type: 'success',\r\n                                });\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            self.$scope.saveInProgress = false;\r\n                            self.$scope.isSaveOperationDisable = false;\r\n                            this.sweetAlert.swal(\r\n                                {\r\n                                    title: Messages('users.changePassord.title'),\r\n                                    text: Messages('users.changePassword.failed'),\r\n                                    type: 'warning',\r\n                                });\r\n                        }\r\n                    );\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = () => {\r\n            ValidationEngine.removeGroup(this.validationGroup);\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user-change-password-modal.controller.js","module.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ Messages('users.changePassord.title')  }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-new-password\\\" class=\\\"control-label\\\">{{Messages('users.newPassword')}}</label>\\r\\n                    <div id=\\\"field-new-password\\\" dx-text-box=\\\"newPasswordSettings\\\" dx-validator=\\\"newPasswordValidationRules\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-confirm-password\\\" class=\\\"control-label\\\">{{Messages('users.confirmPassword')}}</label>\\r\\n                    <div id=\\\"field-confirm-password\\\" dx-text-box=\\\"confirmPasswordSettings\\\" dx-validator=\\\"confirmPasswordValidationRules\\\"></div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" ladda=\\\"saveInProgress\\\" class=\\\"btn btn-primary ladda-button\\\" data-style=\\\"expand-left\\\" ng-click=\\\"validateAndSave()\\\" \\r\\n            ng-disabled=\\\"!(isModalChanged() && isFormValid()) || isSaveOperationDisable\\\">\\r\\n            <span class=\\\"ladda-label\\\">\\r\\n                {{ saveInProgress ? Messages('users.changingPasswordBtn') : Messages('users.changePasswordBtn') }}\\r\\n            </span>\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\" ng-disabled=\\\"isSaveOperationDisable\\\">\\r\\n            {{ Messages('users.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/user-change-password-modal.template.html\n// module id = 763\n// module chunks = 0","export default class User {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n     return $resource(ConfigurationService.getApiBaseUrl() + 'api/users/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/users',\r\n            isArray: true\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n         changePassword: {\r\n            method: 'PUT',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/users/:id/password',\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    User.instance = new User(ConfigurationService, $resource);\r\n    return User.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user.resource.js","export default class Role {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n     return $resource(ConfigurationService.getApiBaseUrl() + 'api/roles/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/roles',\r\n            isArray: true\r\n        }\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Role.instance = new Role(ConfigurationService, $resource);\r\n    return Role.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/role.resource.js","export default class Broker {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/brokers/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/brokers',\r\n            isArray: true\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        archive: {\r\n            method: 'DELETE'\r\n        }\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Broker.instance = new Broker(ConfigurationService, $resource);\r\n    return Broker.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/broker.resource.js","export default class Locale {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/locales/:id', { id: '@id' },\r\n        {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/locales',\r\n            isArray: true\r\n        }\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n      Locale.instance = new Locale(ConfigurationService, $resource);\r\n    return Locale.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/locale.resource.js","import AssetsController from './assets.controller';\r\nimport AssetController from './asset.controller';\r\nimport AssetGallaryComponent from './assetgallary.component';\r\nimport FloorComponent from './floors/floor.component';\r\nimport SpaceComponent from './spaces/space.component';\r\nimport SpacesComponent from './spaces/spaces.component';\r\nimport AssetDocumentsComponent from './assetdocuments.component';\r\nimport ObjectComponent from './assetObjects/object.component';\r\nimport Asset from './asset.resource';\r\nimport AssetObject from './assetObjects/object.resource';\r\nimport Floor from './floors/floor.resource';\r\nimport Space from './spaces/space.resource';\r\nimport 'angular-ui-sortable';\r\nimport 'angular-sortable-view';\r\n\r\nvar module = angular.module('tower360.assets',['ui.sortable','angular-sortable-view'])\r\n    .controller('AssetsController', AssetsController)\r\n    .controller('AssetController', AssetController)\r\n    .component('assetgallery', AssetGallaryComponent)\r\n    .component('floor', FloorComponent)\r\n    .component('space', SpaceComponent)\r\n    .component('spaces', SpacesComponent)\r\n    .component('assetdocuments', AssetDocumentsComponent)\r\n    .factory('Asset', Asset.activate)\r\n    .factory('AssetObject', AssetObject.activate)\r\n    .factory('Floor', Floor.activate)\r\n    .factory('Space', Space.activate)\r\n    .component('object', ObjectComponent)\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assets.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport AssetEditModalController from './asset-edit-modal.controller';\r\nimport AssetEditModalTemplate from './asset-edit-modal.template.html';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class AssetsController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, Asset, Broker, StoreAdapter, currentUser, NotificationService, $uibModal, sweetAlert, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Asset = Asset;\r\n        this.Broker = Broker;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.currentUser = currentUser;\r\n        this.notificationService = NotificationService;\r\n        this.$uibModal = $uibModal;\r\n        this.sweetAlert = sweetAlert;\r\n        this.utils = UtilsService;\r\n\r\n        this.initGrid();\r\n    }\r\n\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        self.stateStore = Constants.assetStateStore();\r\n        self.countryStore = Constants.countryStore();\r\n\r\n        self.assets = [];\r\n\r\n        self.Asset.query(\r\n            {},\r\n            (result) => {\r\n                self.assets = result;\r\n\r\n                self.assets.forEach(item => {\r\n                    item.address = self.utils.generateAddress(item);\r\n                });\r\n\r\n                self.store = new ArrayStore({\r\n                    data: self.assets,\r\n                    key: \"id\",\r\n                    modified: function () {\r\n                        // 'modified' event handler\r\n                    },\r\n                    errorHandler: self.errorHandler.requestFailed\r\n                });\r\n\r\n                self.gridDataSource = { store: self.store };\r\n\r\n                self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n                    dataSource: self.gridDataSource,\r\n                    editing: {\r\n                        allowAdding: false,\r\n                        allowUpdate: false,\r\n                        allowDelete: false,\r\n                        texts: {\r\n                            confirmDeleteMessage: ''\r\n                        }\r\n                    },\r\n                    columns: [{\r\n                        dataField: \"id\",\r\n                        visible: false\r\n                    }, {\r\n                        dataField: \"name\",\r\n                        caption: Messages('assets.name'),\r\n                        sortOrder: \"asc\",\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains',\r\n                        cellTemplate: function(cellElement, cellInfo) {\r\n                            let element = $('<a>', {\r\n                                'href': '/assets/' + cellInfo.data.id,\r\n                                'ui-sref': 'asset'\r\n                            });\r\n\r\n                            element.text(cellInfo.displayValue)\r\n                                   .appendTo(cellElement);\r\n                        }\r\n                    }, {\r\n                        dataField: \"address\",\r\n                        caption: Messages('assets.address'),\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains',\r\n                    }, {\r\n                        dataField: \"countryId\",\r\n                        caption: Messages('assets.country'),\r\n                        lookup: {\r\n                            dataSource: self.countryStore,\r\n                            displayExpr: 'display',\r\n                            valueExpr: 'value'\r\n                        },\r\n                    }, {\r\n                        dataField: \"state\",\r\n                        caption: Messages('users.state'),\r\n                        lookup: {\r\n                            dataSource: self.stateStore,\r\n                            displayExpr: 'display',\r\n                            valueExpr: 'value'\r\n                        },\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        dataField: \"brokerDatabaseRecordId\",\r\n                        caption: Messages('assets.brokerDatabaseRecordId'),\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains',\r\n                        alignment: 'right'\r\n                    }, {\r\n                        dataField: \"brokerId\",\r\n                        caption: Messages('assets.broker'),\r\n                        lookup: {\r\n                            dataSource: this.storeAdapter.createStore(this.Broker, {}, self.errorHandler),\r\n                            displayExpr: 'name',\r\n                            valueExpr: 'id'\r\n                        }\r\n                    }, {\r\n                        caption: Messages('actions'),\r\n                        width: 90,\r\n                        alignment: 'right',\r\n                        cellTemplate: function (container, options) {\r\n                            container.addClass(\"actions-cell\");\r\n\r\n                            $(\"<div />\").dxButton({\r\n                                type: 'custom',\r\n                                template: `<div class=\"fa fa-pencil\" title=\"${Messages('assets.edit')}\"></div>`,\r\n                                onClick: function(data) {\r\n                                    data.jQueryEvent.stopPropagation();\r\n                                    let modal = self.$uibModal.open({\r\n                                        controller: AssetEditModalController,\r\n                                        template: AssetEditModalTemplate,\r\n                                        resolve: {\r\n                                            assetObject: Object.assign({}, options.data)\r\n                                        }\r\n                                    });\r\n                                    modal.result.then((result) => {\r\n                                        result.address = self.utils.generateAddress(result);\r\n                                        jQuery.extend(options.data, result);\r\n                                    });\r\n                                }\r\n                            }).appendTo(container);\r\n\r\n                            let isArchived = options.data.state === 3;\r\n                            $(\"<div />\").dxButton({\r\n                                type: 'custom',\r\n                                template: `<div class=\"fa ${isArchived ? 'fa-undo' : 'fa-trash-o'}\" title=\"${isArchived ? Messages('assets.activate') : Messages('assets.archive')}\"></div>`,\r\n                                onClick: function(data) {\r\n                                    if (isArchived) {\r\n                                        self.activateAsset(options.data);\r\n                                    } else {\r\n                                        self.archiveAsset(options.data);\r\n                                    }\r\n                                }\r\n                            }).appendTo(container);\r\n                        }\r\n                    }]\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    archiveAsset(asset) {\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('assets.archive.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('assets.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('assets.archive.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    self.Asset.archive({ id: asset.id },\r\n                        function (result) {\r\n                            self.store.remove(asset.id);\r\n                            result.address = self.utils.generateAddress(result);\r\n                            self.store.insert(result);\r\n\r\n                            $('#gridContainer').dxDataGrid('instance').refresh();\r\n                            self.notificationService.success(Messages('assets.message.archived'));\r\n                        },\r\n                        function (error) {\r\n                            self.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    activateAsset(asset) {\r\n        asset = Object.assign({}, asset);\r\n\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('assets.activate.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('assets.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('assets.activate.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    asset.state = 2;\r\n                    self.Asset.update({ id: asset.id }, asset,\r\n                        function(result) {\r\n                            self.store.remove(asset.id);\r\n                            result.address = self.utils.generateAddress(result);\r\n                            self.store.insert(result);\r\n                            $('#gridContainer').dxDataGrid('instance').refresh();\r\n                            self.notificationService.success(Messages('assets.message.activated'));\r\n                        },\r\n                        function(error) {\r\n                            self.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assets.controller.js","import AssetEditModalController from './asset-edit-modal.controller';\r\nimport AssetEditModalTemplate from './asset-edit-modal.template.html';\r\nimport 'devextreme/ui/text_area';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class AssetController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, Broker, Asset, assetObject, currentUser, ImageService, StoreAdapter, NotificationService, $filter, NgMap, $uibModal, sweetAlert, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.$filter = $filter;\r\n        this.Broker = Broker;\r\n        this.Asset = Asset;\r\n        this.assetObject = assetObject;\r\n        this.currentUser = currentUser;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.notificationService = NotificationService;\r\n        this.NgMap = NgMap;\r\n        this.$uibModal = $uibModal;\r\n        this.sweetAlert = sweetAlert;\r\n        this.utils = UtilsService;\r\n        this.imageService = ImageService;\r\n\r\n        this.init();\r\n        this.initForm();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        self.asset = self.assetObject;\r\n        self.asset.address = self.utils.generateAddress(self.asset);\r\n        self.asset.images = [];\r\n\r\n        if(self.assetObject.mainImageUrl){\r\n            self.asset.images = [{filePath: self.assetObject.mainImageUrl}];\r\n        }\r\n\r\n        self.$scope.isArchived = self.asset.state === 3;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        self.updateDataSources = function(initiator) {\r\n            if(initiator == 'objects') {\r\n                self.$scope.$broadcast('updateAssetObjectDataSource');\r\n            } else if(initiator == 'floors'){\r\n                self.$scope.$broadcast('updateFloorDataSource');\r\n            }\r\n        };\r\n\r\n        self.NgMap.getMap().then(function(map) {\r\n            self.map = map;\r\n\r\n            if (!self.map.marker) \r\n                self.map.marker = new google.maps.Marker();\r\n\r\n            self.map.marker.setMap(null);\r\n\r\n            let stylez = [{\r\n                featureType: 'all',\r\n                elementType: 'all',\r\n                stylers: [{\r\n                    saturation: -100  // made the map as grayscale\r\n                }]\r\n            }];\r\n            let mapType = new google.maps.StyledMapType(stylez, {\r\n                name: 'Grayscale'\r\n            });\r\n\r\n            map.mapTypes.set('tehgrayz', mapType);\r\n            map.setMapTypeId('tehgrayz');\r\n\r\n            self.setMapCoordinates();\r\n        });\r\n\r\n        self.$scope.saveUpdates = function() {\r\n            self.saveUpdates();\r\n        };\r\n\r\n        self.$scope.updateImage = function() {\r\n            self.updateImage();\r\n        }\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.stateStore = Constants.assetStateStore();\r\n        this.countryStore = Constants.countryStore();\r\n\r\n        let brokersStore = this.storeAdapter.createStore(this.Broker, {}, this.errorHandler);\r\n\r\n        brokersStore.load().done((result) => {\r\n            result.forEach(function(value) {\r\n                self.brokers.push({\r\n                    value: value.id,\r\n                    text: value.name\r\n                });\r\n            });\r\n        });\r\n\r\n        this.brokers = [];\r\n        this.brokerId = this.asset.brokerId;\r\n        this.showBroker = function() {\r\n            let selected = self.$filter('filter')(self.brokers, {\r\n                value: self.brokerId\r\n            });\r\n            return (typeof self.brokerId === 'number' && selected.length) ? selected[0].text : 'Not set';\r\n        };\r\n\r\n        this.brokerDatabaseRecordId = this.asset.brokerDatabaseRecordId || '';\r\n        this.brokerDatabaseRecordIdValidation = function(value) {\r\n            if (value.length > 10) {\r\n                return Messages('assets.brokerDatabaseRecordId.errorLength');\r\n            }\r\n        };\r\n\r\n        this.notes = this.asset.notes || '';\r\n        this.notesValidation = function(value) {\r\n            if (value.length > 500) {\r\n                return Messages('assets.notes.errorLength');\r\n            }\r\n        };\r\n    }\r\n\r\n    setMapCoordinates() {\r\n        this.map.marker.setMap(null);\r\n        \r\n        if (this.assetObject.address) {\r\n            var geocoder = new google.maps.Geocoder(),\r\n                countries = Constants.countryStorePlain(),\r\n                country = this.$filter('filter')(countries, {\r\n                    value: this.asset.countryId\r\n                });\r\n\r\n            if (country && country[0]) {\r\n                country = country[0].text + ', ';\r\n            } else {\r\n                country = '';\r\n            }\r\n\r\n            geocoder.geocode({\r\n                address: country + this.assetObject.address\r\n            }, (result, status) => {\r\n                if (status === 'OK') {\r\n                    this.map.setCenter(result[0].geometry.location);\r\n\r\n                    this.map.marker.setPosition(result[0].geometry.location);\r\n                    this.map.marker.setMap(this.map)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updateImage(){\r\n        let self = this;\r\n\r\n        if(self.asset.images.length == 0){\r\n            self.Asset.resetImage(\r\n                { id: this.asset.id },\r\n                (result) => {\r\n                    self.notificationService.success(Messages('assets.gallery.message.deleted'));\r\n                    self.saveInProgress = false;\r\n                },\r\n                (error) => {\r\n                    this.notificationService.error(error.data);\r\n                    self.saveInProgress = false;\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            var blob = self.imageService.dataURItoBlob(self.asset.images[0].imageFile.imageData);\r\n            var fd = new FormData(document.forms[0]);\r\n            fd.append(\"data\", blob, self.asset.images[0].originalFileName);\r\n\r\n            self.Asset.setImage(\r\n                { id: this.asset.id },\r\n                fd ,\r\n                (result) => {\r\n                    self.notificationService.success(Messages('assets.gallery.message.added'));\r\n                    self.saveInProgress = false;\r\n                },\r\n                (error) => {\r\n                    this.notificationService.error(error.data);\r\n                    self.saveInProgress = false;\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    saveUpdates() {\r\n        for (let i in this.asset) {\r\n            if (this.asset.hasOwnProperty(i)) {\r\n                if (this[i] !== undefined) {\r\n                    this.asset[i] = this[i];\r\n                } else if (this.$scope[i] !== undefined) {\r\n                    this.asset[i] = this.$scope[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.Asset.update(\r\n            { id: this.asset.id },\r\n            this.asset,\r\n            (result) => {\r\n                this.notificationService.success(Messages('assets.message.updated'));\r\n                this.saveInProgress = false;\r\n            },\r\n            (error) => {\r\n                this.notificationService.error(error.data);\r\n                this.saveInProgress = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    tabGridsRefresh($event) {\r\n        $event.preventDefault();\r\n        let tab = $event.currentTarget.getAttribute('aria-controls');\r\n        if (tab === 'floors') {\r\n            $('#floorSettings #gridContainer').dxDataGrid('instance').refresh();\r\n        }\r\n\r\n        if (tab === 'spaces') {\r\n            $('#spaceSettings #spacesGridContainer').dxDataGrid('instance').refresh();\r\n        }\r\n\r\n        if (tab === 'objects') {\r\n            $('#objectsSettings #objectsGridContainer').dxDataGrid('instance').refresh();\r\n        }\r\n    }\r\n\r\n    archiveTrigger() {\r\n        if (this.$scope.isArchived) {\r\n            this.activate();\r\n        } else {\r\n            this.archive();\r\n        }\r\n    }\r\n\r\n    editAsset() {\r\n        let modal = this.$uibModal.open({\r\n            controller: AssetEditModalController,\r\n            template: AssetEditModalTemplate,\r\n            resolve: {\r\n                assetObject: Object.assign({}, this.asset)\r\n            }\r\n        });\r\n        modal.result.then(result => {\r\n            let newAddress = this.utils.generateAddress(result),\r\n                newCountry = result.countryId,\r\n                needToUpdateMap;\r\n\r\n            if (newAddress !== this.asset.address || newCountry !== this.asset.countryId) {\r\n                needToUpdateMap = true;\r\n            }\r\n\r\n            $.extend(this.asset, result);\r\n            this.asset.address = newAddress;\r\n\r\n            if (needToUpdateMap) {\r\n                this.setMapCoordinates();\r\n            }\r\n        });\r\n    }\r\n\r\n    archive() {\r\n        let self = this;\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('assets.archive.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('assets.archive.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    self.Asset.archive({ id: self.asset.id },\r\n                        function (result) {\r\n                            self.$scope.isArchived = true;\r\n                            self.notificationService.success(Messages('assets.message.archived'));\r\n                        },\r\n                        function (error) {\r\n                            self.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    activate() {\r\n        let self = this,\r\n            asset = Object.assign({}, this.asset);\r\n\r\n        this.sweetAlert.swal(\r\n            {\r\n                title: Messages('assets.activate.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('assets.activate.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    asset.state = 2;\r\n                    self.Asset.update({ id: asset.id }, asset,\r\n                        function(result) {\r\n                            self.$scope.isArchived = false;\r\n                            self.notificationService.success(Messages('assets.message.activated'));\r\n                        },\r\n                        function(error) {\r\n                            self.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                        });\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/asset.controller.js","let AssetGalleryComponent = {\r\n    bindings: {\r\n        images: '=',\r\n        maxImageWidth: '=?',\r\n        maxImageHeight: '=?',\r\n        maxImageCount: '=?',\r\n        readonly: '=?',\r\n        updateImage: '=?'\r\n    },\r\n    controller: function() {\r\n        let self = this;\r\n\r\n        self.maxImageCount = 1;\r\n        self.maxImageHeight = 500;\r\n        self.maxImageWidth = 500;\r\n\r\n        self.imageAddCallback = function() {\r\n            self.updateImage();\r\n        };\r\n        self.imageDeleteCallback = function() {\r\n            self.updateImage();\r\n        };\r\n        self.sortingChangeCallback = function() {\r\n        };\r\n    },\r\n    template: \"<imagegallery images='$ctrl.images' \" +\r\n    \"                        readonly='$ctrl.readonly' \" +\r\n    \"                        max-image-count='$ctrl.maxImageCount' \" +\r\n    \"                        max-image-height='$ctrl.maxImageHeight' \" +\r\n    \"                        max-image-width='$ctrl.maxImageWidth' \" +\r\n    \"                        image-add-callback='$ctrl.imageAddCallback' \" +\r\n    \"                        image-delete-callback='$ctrl.imageDeleteCallback' \" +\r\n    \"                        sorting-change-callback='$ctrl.sortingChangeCallback' \" +\r\n    \"                        class='asset-gallery'></imagegallery>\"\r\n}\r\n\r\nexport default AssetGalleryComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assetgallary.component.js","// import template and controller from individual component directory\r\nimport Controller from './floor.controller'\r\nimport Template from './floor.template.html'\r\n\r\nlet FloorComponent = {\r\n    bindings: {\r\n        asset: '=',\r\n        saveUpdates: '=?',\r\n        needUpdateDataSources: '&'\r\n    },\r\n    controller: Controller,\r\n    template: Template\r\n};\r\n\r\nexport default FloorComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/floors/floor.component.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../../messages';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport FloorsAddRangeController from './floors-add-range-modal.controller.js';\r\nimport FloorsAddRangeTemplate from './floors-add-range-modal.template.html';\r\nimport Constants from '../../constants';\r\nimport DataSource from 'devextreme/data/data_source';\r\n\r\nexport default class FloorController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, Floor, AssetObject, NotificationService, UtilsService, sweetAlert, $uibModal) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Floor = Floor;\r\n        this.AssetObject = AssetObject;\r\n        this.NotificationService = NotificationService;\r\n        this.utils = UtilsService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n        this.messages = Messages;\r\n\r\n        this.loadData((t) => {\r\n            this.init(); \r\n            this.initGrid();\r\n        });\r\n    }\r\n\r\n    loadData(afterExecuteCallback){\r\n        let self = this;\r\n\r\n        self.loadAssetObjects(() => {\r\n            self.loadFloors(() => {\r\n                if(afterExecuteCallback)\r\n                    afterExecuteCallback();  \r\n            })\r\n        });\r\n    }\r\n\r\n    loadAssetObjects(afterExecuteCallback){\r\n        let self = this;\r\n\r\n        self.AssetObject.query({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.objects = result;\r\n\r\n                if(afterExecuteCallback){\r\n                    afterExecuteCallback();\r\n                }\r\n                \r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    loadFloors(afterExecuteCallback){\r\n        let self = this;\r\n        \r\n        self.Floor.getByAssetId({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.floors = result;\r\n\r\n                if(afterExecuteCallback){\r\n                    afterExecuteCallback();\r\n                }\r\n            },\r\n            (error) => { }\r\n        );\r\n    }\r\n\r\n    createStore(){\r\n        let self = this;\r\n\r\n        self.store = new ArrayStore({\r\n            data: self.floors,\r\n            key: \"id\",\r\n            modified: function () {\r\n                // 'modified' event handler\r\n            },\r\n            errorHandler: self.errorHandler.requestFailed\r\n        });\r\n\r\n        return self.store;\r\n    }\r\n\r\n    init(){\r\n        let self = this;\r\n\r\n        self.isFloorFormVisible = false;\r\n        self.isAddFloorRangeDisabled = false;\r\n        self.$scope.Messages = Messages;\r\n\r\n        self.$scope.$on('updateAssetObjectDataSource', function(e,data) {\r\n            self.updateDataSources();\r\n        });\r\n\r\n        self.updateDataSources = function(){\r\n            self.loadData((t) => {\r\n                var dataGrid = $(\"#gridContainer\").dxDataGrid('instance');\r\n                dataGrid.beginUpdate();\r\n                dataGrid.columnOption('assetObjectId', 'lookup.dataSource', {store: self.assetObjectStore });\r\n                dataGrid.option('dataSource', []);\r\n                dataGrid.option('dataSource', {store: self.createStore()});\r\n                dataGrid.endUpdate(); \r\n\r\n                self.refreshGrid();\r\n            });\r\n        }\r\n\r\n        self.validateFloor = function (oldValue, newValue) {\r\n            var floors = self.floors;\r\n\r\n            if (!newValue || (newValue.number == '' && newValue.number != 0))\r\n                return false;\r\n\r\n            if(newValue.number == undefined)\r\n                return true;\r\n\r\n            for (var i = 0; i < floors.length; i++) {\r\n                if (!oldValue || floors[i].number !== oldValue.number) {\r\n                    if(newValue.number == floors[i].number && newValue.assetObjectId == floors[i].assetObjectId){\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n    }\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        }\r\n\r\n        self.createStore();\r\n\r\n        self.assetObjectStore = new CustomStore({\r\n            load: function (loadOptions) {\r\n                return self.objects;\r\n            },\r\n            byKey: function(key) {\r\n                return { id: key };\r\n            }\r\n        })\r\n\r\n        self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n            dataSource: {store: self.store},\r\n            groupPanel: {\r\n                visible: false\r\n            },\r\n            filterRow: {\r\n                visible: false\r\n            },\r\n            editing: {\r\n                texts: {\r\n                    confirmDeleteMessage: ''\r\n                }\r\n            },\r\n            columns: [\r\n                {\r\n                    dataField: \"number\",\r\n                    caption: Messages('assets.floors.number'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    allowSorting: false,\r\n                    validationRules: [\r\n                        { type: 'required', message: Messages('validation.required') },\r\n                        { type: 'stringLength', max: 10 },\r\n                        ],\r\n                    width: 150,\r\n                    alignment: 'right'\r\n                },\r\n                {\r\n                    dataField: \"description\",\r\n                    caption: Messages('assets.floors.description'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    allowSorting: false,\r\n                    validationRules: [\r\n                        { type: 'stringLength', max: 500 },\r\n                        ]\r\n                },\r\n                {\r\n                    dataField: 'assetObjectId',\r\n                    caption: Messages('assets.floors.assetobject'),\r\n                    width: 100,\r\n                    allowSorting: false,\r\n                    lookup: {\r\n                        dataSource: {store: self.assetObjectStore},\r\n                        displayExpr: 'name',\r\n                        valueExpr: 'id',\r\n                    },\r\n                    alignment: 'right',\r\n                    allowEditing: false\r\n                },\r\n                {\r\n                    dataField: \"order\",\r\n                    visible: false,\r\n                    sortOrder: \"asc\" },\r\n\r\n                {\r\n                    dataField: \"id\",\r\n                    caption: Messages('actions'),\r\n                    width: 100,\r\n                    allowSorting: false,\r\n                    alignment: 'right',\r\n                    cellTemplate: function (container, options) {\r\n                        container.addClass(\"actions-cell\");\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-pencil\"></div>',\r\n                            onClick: function (e) {\r\n                                console.log(\"editing...\");\r\n                                $('#gridContainer').dxDataGrid('instance').editRow(options.rowIndex);\r\n                            }\r\n                        }).appendTo(container);\r\n\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-trash-o\"></div>',\r\n                            onClick: function (e) {\r\n                                if (options.data.spaces && options.data.spaces.length > 0) {\r\n                                    self.NotificationService.warning('Please remove spaces from the floor first');\r\n                                }\r\n                                else {\r\n                                    self.sweetAlert.swal(\r\n                                    {\r\n                                        title: Messages('assets.floors.delete.title'),\r\n                                        type: 'warning',\r\n                                        showCancelButton: true,\r\n                                        cancelButtonText: Messages('assets.cancel'),\r\n                                        confirmButtonColor: '#DD6B55',\r\n                                        confirmButtonText: Messages('assets.floors.delete.confirmButton'),\r\n                                    },\r\n                                    function (isConfirm) {\r\n                                        if (isConfirm) {\r\n                                            self.deleteFloor(options.data);\r\n                                        }}\r\n                                    );\r\n                                }\r\n                            }\r\n                        }).appendTo(container);\r\n                    },\r\n                    editCellTemplate: function (container, options) {\r\n                        container.addClass(\"actions-cell\");\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-floppy-o\"></div>',\r\n                            onClick: function(e) {\r\n                                $('#gridContainer').dxDataGrid('instance').saveEditData(options.rowIndex);\r\n                                if(self.updateFloor){\r\n                                    self.updateFloor(options.data);\r\n                                }\r\n                            }\r\n                        }).appendTo(container);\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-times\"></div>',\r\n                            onClick: function(e) {\r\n                                $('#gridContainer').dxDataGrid('instance').cancelEditData(options.rowIndex);\r\n                            }\r\n                        }).appendTo(container);\r\n                    }\r\n            }],\r\n            onRowValidating: function (e) {\r\n                var dataGrid = e.component;\r\n                var rowIndex = dataGrid.getRowIndexByKey(e.key);\r\n\r\n                if(!self.validateFloor(e.oldData, e.newData)){\r\n                    dataGrid.getCellElement(rowIndex, 'number').find('input').css('background', 'rgba(255, 0, 0, 0.5)');\r\n                    e.isValid = false;\r\n                }\r\n\r\n            },\r\n        });\r\n\r\n        self.refreshGrid = function() {\r\n            $(\"#gridContainer\").dxDataGrid('instance').refresh();\r\n        }\r\n\r\n        self.updateFloor = function(floor) {\r\n            self.Floor.update({ assetId: self.asset.id, objectId: floor.assetObjectId, id: floor.id }, floor, \r\n            (result) => {\r\n                self.NotificationService.success(Messages('assets.floors.updated'));\r\n                self.saveInProgress = false;\r\n\r\n                self.needUpdateDataSources();\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                self.NotificationService.error(error.data);\r\n                self.saveInProgress = false;\r\n            }\r\n            );\r\n        }\r\n\r\n        self.deleteFloor = function(floor){\r\n            self.Floor.delete({ assetId: self.asset.id, assetObjectId: floor.assetObjectId, id: floor.id }, \r\n                (result) => {\r\n                    var floorIdx = self.floors.findIndex(t => t.id == floor.id);\r\n                    self.floors.splice(floorIdx, 1);\r\n\r\n                    self.NotificationService.success(Messages('assets.floors.deleted'));\r\n                    self.saveInProgress = false;\r\n\r\n                    self.needUpdateDataSources();\r\n\r\n                    self.refreshGrid();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    self.NotificationService.error(error.data);\r\n                    self.saveInProgress = false;\r\n                }\r\n            );\r\n        }\r\n\r\n        self.addFloorRange = function(cnt, autoNumerate, assetObjectId) {\r\n            self.Floor.createRange({ assetId: self.asset.id, assetObjectId: assetObjectId, count: cnt, autonumerate: autoNumerate }, \r\n                (result) => {\r\n                    result.forEach((t)=>{\r\n                        self.floors.push(t);\r\n                    });\r\n\r\n                    self.NotificationService.success(Messages('assets.floors.created'));\r\n                    self.saveInProgress = false;\r\n\r\n                    self.needUpdateDataSources();\r\n\r\n                    self.refreshGrid();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    self.NotificationService.error(error.data);\r\n                    self.saveInProgress = false;\r\n                }\r\n            );\r\n        };\r\n\r\n        self.temp = true;\r\n    };\r\n\r\n    addFloorsRange() {\r\n        let self = this;\r\n\r\n        let modal = this.$uibModal.open({\r\n            controller: FloorsAddRangeController,\r\n            template: FloorsAddRangeTemplate,\r\n            resolve: {\r\n                asset: self.asset\r\n            }\r\n        });\r\n        modal.result.then(result => {\r\n            self.addFloorRange(result.addRangeFloorCount, result.autoNumerateFloors, result.assetObjectId);\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/floors/floor.controller.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport 'devextreme/ui/text_area';\r\nimport Messages from '../../messages';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\n\r\nexport default class FloorsAddRangeModalController {\r\n    /*@ngInject*/\r\n    constructor($scope, asset, Asset, AssetObject, $uibModalInstance, NotificationService) {\r\n        this.$scope = $scope;\r\n        this.asset = asset;\r\n        this.Asset = Asset;\r\n        this.AssetObject = AssetObject;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.notificationService = NotificationService;\r\n        this.validationGroup = 'floors-add-range';\r\n\r\n        this.init();\r\n        this.initDataSource();\r\n    }\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n        self.$scope.floorRequest = { addRangeFloorCount: 1, autoNumerateFloors: false, assetObjectId: null};\r\n\r\n        self.$scope.getDataInProgress = false;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        self.$scope.cancel = function () {\r\n            ValidationEngine.removeGroup(self.validationGroup);\r\n            self.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    initDataSource(){\r\n        var self = this;\r\n        self.$scope.getDataInProgress = true;\r\n        self.AssetObject.query({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.objects = result;\r\n                self.assetObjectStore = new ArrayStore({\r\n                    data: self.objects,\r\n                    key: \"id\",\r\n                    errorHandler: self.errorHandler.requestFailed\r\n                });\r\n                self.$scope.getDataInProgress = false;\r\n                self.initForm();\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    initForm() {\r\n        var self = this;\r\n\r\n        self.$scope.floorRangeSettings = {\r\n            showSpinButtons: true,\r\n            showClearButton: false,\r\n            onValueChanged: function(e) {\r\n                let result = ValidationEngine.getGroupConfig(self.validationGroup).validate();\r\n                self.$scope.isAddFloorRangeDisabled = !result.isValid;\r\n            },\r\n            bindingOptions:{\r\n                value: 'floorRequest.addRangeFloorCount'\r\n            }\r\n        };\r\n        self.$scope.floorRangeValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'numeric' },\r\n                { type: 'range', min: 1, max: 100 }\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        self.$scope.autoNumerateFloorSettings = {\r\n            text: '',\r\n            type: 'default',\r\n            bindingOptions: {\r\n                value: 'floorRequest.autoNumerateFloors'\r\n            }\r\n        };\r\n\r\n        self.$scope.assetObjectSelectSettings = {\r\n            dataSource: self.assetObjectStore,\r\n            displayExpr: 'name',\r\n            valueExpr: 'id',\r\n            bindingOptions: {\r\n                value: 'floorRequest.assetObjectId',\r\n            }\r\n        };\r\n\r\n        self.$scope.assetObjectValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        self.$scope.validateAndSaveSettings = function() {\r\n            let result = ValidationEngine.getGroupConfig(self.validationGroup).validate();\r\n            if (result.isValid) {\r\n                self.$scope.saveInProgress = true;\r\n                self.$scope.isSaveOperationDisable = true;\r\n\r\n                self.$uibModalInstance.close({\r\n                    addRangeFloorCount: self.$scope.floorRequest.addRangeFloorCount,\r\n                    autoNumerateFloors: self.$scope.floorRequest.autoNumerateFloors,\r\n                    assetObjectId: self.$scope.floorRequest.assetObjectId\r\n                });\r\n            }\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/floors/floors-add-range-modal.controller.js","module.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{ Messages('assets.floors.range.modal.title') }}</h4>\\r\\n    </div>\\r\\n    <div ng-if=\\\"getDataInProgress\\\" class=\\\"modal-loader\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" ng-if=\\\"!getDataInProgress\\\">\\r\\n        <div id=\\\"floorRangeForm\\\" class=\\\"form-horizontal\\\">\\r\\n            <h4 class=\\\"col-sm-offset-1\\\">{{ Messages('assets.floors.range.title') }}</h4><br>\\r\\n            <fieldset>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-assetobject\\\" class=\\\"col-sm-3 control-label\\\">{{ Messages('assets.floors.assetobject') }}:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div id=\\\"field-assetobject\\\" dx-select-box=\\\"assetObjectSelectSettings\\\" dx-validator=\\\"assetObjectValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>  \\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-floor-number\\\" class=\\\"col-sm-3 control-label\\\">{{ Messages('assets.floors.range.field') }}:</label>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                        <div id=\\\"field-floor-number\\\" dx-number-box=\\\"floorRangeSettings\\\" dx-validator=\\\"floorRangeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"field-floor-settings\\\" class=\\\"col-sm-3 control-label\\\">{{ Messages('assets.floors.range.checkbox') }}:</label>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div id=\\\"field-floor-settings\\\" dx-check-box=\\\"autoNumerateFloorSettings\\\"></div>\\r\\n                        <p class=\\\"help-block\\\"><small>{{ Messages('assets.floors.range.checkbox.help') }}</small></p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSaveSettings()\\\" ng-disabled=\\\"isAddFloorRangeDisabled\\\">\\r\\n            {{ Messages('assets.floors.addbutton') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.floors.cancelbutton') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/floors/floors-add-range-modal.template.html\n// module id = 775\n// module chunks = 0","module.exports = \"<form name=\\\"settingsForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addFloorsRange()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('assets.floors.addrange')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"gridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/floors/floor.template.html\n// module id = 777\n// module chunks = 0","import Controller from './space.controller';\r\nimport Template from './space.template.html';\r\nimport Messages from '../../messages';\r\n\r\nlet SpaceComponent = {\r\n    bindings: {\r\n        asset: '=',\r\n        listMode: '=',\r\n        space: '='\r\n    },\r\n    controller: Controller,\r\n    template: Template,\r\n    Messages: Messages\r\n};\r\n\r\nexport default SpaceComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/spaces/space.component.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../../messages';\r\nimport Constants from '../../constants';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\nimport DataSource from 'devextreme/data/data_source';\r\n\r\nexport default class SpaceController {\r\n    /*@ngInject*/\r\n    constructor($scope, asset, assetObjectId, floorId, spaceId, AssetObject, Floor, Space, NotificationService, UtilsService, $uibModalInstance) {\r\n        // from component\r\n        this.$scope = $scope;\r\n        this.asset = asset;\r\n        this.assetObjectId = assetObjectId;\r\n        this.floorId = floorId;\r\n        this.spaceId = spaceId;\r\n\r\n        this.utils = UtilsService;\r\n\r\n        this.Messages = Messages;\r\n\r\n        // injected\r\n        this.AssetObject = AssetObject;\r\n        this.Floor = Floor;\r\n        this.Space = Space;\r\n        this.NotificationService = NotificationService;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n\r\n        this.validationGroup = 'spaces-add';\r\n\r\n        // initialization\r\n        this.init();\r\n        this.initDataSource(t => { this.initForm(); });\r\n        self.objects = [];\r\n        self.floors = [];\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        self.$scope.asset = self.asset;\r\n        self.$scope.Messages = Messages;\r\n        self.$scope.getDataInProgress = false;\r\n        self.$scope.editMode = self.spaceId > 0;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        if (self.spaceId > 0) {\r\n            this.$scope.getDataInProgress = true;\r\n            self.Space.getFull({assetId: self.asset.id, assetObjectId: self.assetObjectId, floorId: self.floorId, id: self.spaceId},\r\n                result => {\r\n                    self.space = result;\r\n                    self.$scope.space = self.space;\r\n                    this.$scope.getDataInProgress = false;\r\n                },\r\n                error => {\r\n                    this.NotificationService.error(error.data.message ? error.data.message : error.data);\r\n                });\r\n        } \r\n        else {\r\n            self.space = {\r\n                id: 0,\r\n                uniqueId: self.utils.generateGuid(),\r\n                number: '',\r\n                type: 1,\r\n                rentableArea: null,\r\n                assetId: self.asset.id,\r\n                assetObjectId: null,\r\n                floorId: null,\r\n                brokerId: self.asset.brokerId,\r\n                marketingDescription: '',\r\n                notes: ''\r\n            };\r\n            self.$scope.space = self.space;\r\n            \r\n        }\r\n\r\n        self.spaceTypeStore = Constants.spaceTypeStore();\r\n        self.spaceStateStore = Constants.spaceStateStore();\r\n    }\r\n\r\n    loadAssetObjects(callback){\r\n        let self = this;\r\n        self.AssetObject.query({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.objects = result;\r\n                if(callback) {\r\n                    callback();\r\n                }\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    loadFloors(assetObjectId, callback){\r\n        let self = this;\r\n        self.Floor.query({ assetId: self.asset.id, assetObjectId: assetObjectId },\r\n            (result) => {\r\n                self.floors = result;\r\n                if(callback) {\r\n                    callback();\r\n                }\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    initDataSource(callback) {\r\n        let self = this;\r\n\r\n        self.loadAssetObjects(t => {\r\n            self.assetObjectStore = new ArrayStore({\r\n                data: self.objects,\r\n                key: \"id\",\r\n                errorHandler: self.errorHandler.requestFailed\r\n            });\r\n\r\n            self.floorStore = new DataSource({\r\n                load: function(loadOptions) {\r\n                    return self.floors;\r\n                },\r\n                byKey: function(key) {\r\n                    return { id: key };\r\n                },\r\n                errorHandler: self.errorHandler.requestFailed\r\n            });\r\n\r\n            if(callback){\r\n                callback();\r\n            }\r\n        })\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;  \r\n\r\n        self.$scope.numberSettings = {\r\n            placeholder: Messages('assets.spaces.placeholder.number'),\r\n            bindingOptions: {\r\n                value: 'space.number'\r\n            }\r\n        };\r\n        self.$scope.numberValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 20, message: Messages('validation.maxLength') },\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        self.$scope.typeSelectSettings = {\r\n            dataSource: self.spaceTypeStore,\r\n            displayExpr: 'display',\r\n            valueExpr: 'value',\r\n            bindingOptions: {\r\n                value: 'space.type'\r\n            }\r\n        };\r\n\r\n        self.$scope.typeValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        self.$scope.rentableAreaSettings = {\r\n            placeholder: Messages('assets.spaces.placeholder.rentableArea'),\r\n            bindingOptions: { value: 'space.rentableArea' },\r\n            value: 1,\r\n            showSpinButtons: true,\r\n            showClearButton: false,\r\n            max: 1000,\r\n            min: 1\r\n        };\r\n\r\n        self.$scope.rentableAreaValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'numeric' },\r\n                { type: 'range', min: 0 }\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        self.$scope.floorSelectSettings = {\r\n            dataSource: self.floorStore,\r\n            displayExpr: 'number',\r\n            valueExpr: 'id',\r\n            bindingOptions: {\r\n                value: 'space.floorId',\r\n                disabled: 'editMode'\r\n            }\r\n        };\r\n\r\n        self.$scope.floorValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        self.$scope.assetObjectSelectSettings = {\r\n            dataSource: self.assetObjectStore,\r\n            displayExpr: 'name',\r\n            valueExpr: 'id',\r\n            bindingOptions: {\r\n                value: 'space.assetObjectId',\r\n                disabled: 'editMode'\r\n            },\r\n            onSelectionChanged: function(e){\r\n                self.loadFloors(e.selectedItem.id, (t) => {\r\n                    self.floorStore.load().done(() => {\r\n                        if(self.assetObjectId != self.space.assetObjectId) {\r\n                            self.space.floorId = null;\r\n                            self.assetObjectId = self.space.assetObjectId;\r\n                        }\r\n\r\n                        $(\"#field-floor\").dxSelectBox(\"instance\").repaint();\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n        this.$scope.assetObjectValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') }\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.marketingDescriptionSettings = {\r\n            placeholder: Messages('assets.spaces.placeholder.marketingDescription'),\r\n            height: 180,\r\n            maxLength: 500,\r\n            bindingOptions: {\r\n                value: 'space.marketingDescription'\r\n            }\r\n        };\r\n        this.$scope.marketingDescriptionValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 500 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.notesSettings = {\r\n            placeholder: Messages('assets.spaces.placeholder.notes'),\r\n            height: 180,\r\n            maxLength: 500,\r\n            bindingOptions: { value: 'space.notes' }\r\n        };\r\n        this.$scope.notesValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 500 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        self.$scope.minAskingPriceSettings = {\r\n            placeholder: Messages('assets.spaces.placeholder.minAskingPrice'),\r\n            bindingOptions: {\r\n                value: 'space.minAskingPrice'\r\n            }\r\n        };\r\n        self.$scope.minAskingPriceValidationRules = {\r\n            validationRules: [\r\n                { type: 'numeric' },\r\n                { type: 'range', min: 0 },\r\n                {\r\n                    type: 'custom',\r\n                    validationCallback: function(options) {\r\n                        if (!options.value)\r\n                            return true;\r\n                        if (!self.space.maxAskingPrice)\r\n                            return true;\r\n\r\n                        options.rule.message = Messages('assets.spaces.validation.maxAskingPrice');\r\n\r\n                        return (options.value < self.space.maxAskingPrice);\r\n                    }\r\n                }\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        self.$scope.maxAskingPriceSettings = {\r\n            placeholder: Messages('assets.spaces.placeholder.maxAskingPrice'),\r\n            bindingOptions: {\r\n                value: 'space.maxAskingPrice'\r\n            }\r\n        };\r\n        self.$scope.maxAskingPriceValidationRules = {\r\n            validationRules: [\r\n                { type: 'numeric' },\r\n                { type: 'range', min: 0 },\r\n                {\r\n                    type: 'custom',\r\n                    validationCallback: function(options) {\r\n                        if (!options.value)\r\n                            return true;\r\n                        if (!self.space.minAskingPrice)\r\n                            return true;\r\n\r\n                        options.rule.message = Messages('assets.spaces.validation.maxAskingPrice');\r\n\r\n                        return (options.value > self.space.minAskingPrice);\r\n                    }\r\n                }\r\n            ],\r\n            validationGroup: self.validationGroup\r\n        };\r\n\r\n        this.$scope.validateAndSave = function() {\r\n            let result = ValidationEngine.getGroupConfig(self.validationGroup).validate();\r\n            if (result.isValid) {\r\n                self.$uibModalInstance.close({\r\n                    space: self.$scope.space\r\n                });\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = function () {\r\n            ValidationEngine.removeGroup(self.validationGroup);\r\n            self.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/spaces/space.controller.js","module.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">{{ Messages('assets.spaces.modal.title') }}</h4>\\r\\n    </div>\\r\\n    <div ng-if=\\\"getDataInProgress\\\" class=\\\"modal-loader\\\">\\r\\n            <i class=\\\"fa fa-spinner fa-pulse fa-3x fa-fw\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" ng-if=\\\"!getDataInProgress\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-number\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.number') }}:</label>\\r\\n            <div id=\\\"field-number\\\" dx-text-box=\\\"numberSettings\\\" dx-validator=\\\"numberValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-type\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.type') }}:</label>\\r\\n            <div id=\\\"field-type\\\" dx-select-box=\\\"typeSelectSettings\\\" dx-validator=\\\"typeValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-rentable-area\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.rentableArea') }}:</label>\\r\\n            <div id=\\\"field-rentable-area\\\" dx-number-box=\\\"rentableAreaSettings\\\" dx-validator=\\\"rentableAreaValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-assetobject\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.assetobject') }}:</label>\\r\\n            <div id=\\\"field-assetobject\\\" dx-select-box=\\\"assetObjectSelectSettings\\\" dx-validator=\\\"assetObjectValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-floor\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.floor') }}:</label>\\r\\n            <div id=\\\"field-floor\\\" dx-select-box=\\\"floorSelectSettings\\\" dx-validator=\\\"floorValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-min-asking-price\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.minAskingPrice') }}:</label>\\r\\n            <div id=\\\"field-min-asking-price\\\" dx-number-box=\\\"minAskingPriceSettings\\\" dx-validator=\\\"minAskingPriceValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-max-asking-price\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.maxAskingPrice') }}:</label>\\r\\n            <div id=\\\"field-max-asking-price\\\" dx-number-box=\\\"maxAskingPriceSettings\\\" dx-validator=\\\"maxAskingPriceValidationRules\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-marketing-description\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.marketingDescription') }}:</label>\\r\\n            <div id=\\\"field-marketing-description\\\" dx-text-area=\\\"marketingDescriptionSettings\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"field-notes\\\" class=\\\"control-label\\\">{{ Messages('assets.spaces.notes') }}:</label>\\r\\n            <div id=\\\"field-notes\\\" dx-text-area=\\\"notesSettings\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('assets.spaces.saving') : Messages('assets.spaces.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.spaces.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/spaces/space.template.html\n// module id = 780\n// module chunks = 0","import Controller from './spaces.controller';\r\nimport Template from './spaces.template.html';\r\n\r\nlet SpacesComponent = {\r\n    bindings: {\r\n        asset: '=',\r\n        saveUpdates: '=?',\r\n        needUpdateDataSources: '&'\r\n    },\r\n    controller: Controller,\r\n    template: Template\r\n};\r\n\r\nexport default SpacesComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/spaces/spaces.component.js","import Messages from '../../messages';\r\nimport Constants from '../../constants';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport SpaceController from './space.controller';\r\nimport SpaceTemplate from './space.template.html';\r\n\r\nexport default class SpacesController {\r\n    /*@ngInject*/\r\n    constructor($scope, AssetObject, Floor, Space, NotificationService, UtilsService, sweetAlert, $uibModal) {\r\n        // from component\r\n        this.asset = this.asset;\r\n\r\n        // injected\r\n        this.$scope = $scope;\r\n        this.NotificationService = NotificationService;\r\n        this.utils = UtilsService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n        this.messages = Messages;\r\n\r\n        this.AssetObject = AssetObject;\r\n        this.Floor = Floor;\r\n        this.Space = Space;\r\n\r\n        this.loadData((t) => {\r\n            this.init(); \r\n            this.initGrid();\r\n        });\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n        self.$scope.$on('updateAssetObjectDataSource', function(e,data) {\r\n            self.updateDataSources();\r\n        });\r\n\r\n        self.$scope.$on('updateFloorDataSource', function(e,data) {\r\n            self.updateDataSources();\r\n        });\r\n\r\n        self.updateDataSources = function(){\r\n            self.loadData((t) => {\r\n                var dataGrid = $(\"#spacesGridContainer\").dxDataGrid('instance');\r\n                dataGrid.beginUpdate();\r\n                dataGrid.columnOption('floorId', 'lookup.dataSource', {store: self.floorStore });\r\n                dataGrid.columnOption('assetObjectId', 'lookup.dataSource', {store: self.assetObjectStore });\r\n                dataGrid.option('dataSource', []);\r\n                dataGrid.option('dataSource', {store: self.createStore()});\r\n                dataGrid.endUpdate(); \r\n\r\n                self.refreshGrid();\r\n            });\r\n        }\r\n    }\r\n    loadData(afterExecuteCallback) {\r\n        let self = this;\r\n\r\n        self.loadAssetObjects(() => {\r\n            self.loadFloors(() => {\r\n                self.loadSpaces(() => {\r\n                    if(afterExecuteCallback)\r\n                        afterExecuteCallback();         \r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    loadAssetObjects(afterExecuteCallback){\r\n        let self = this;\r\n\r\n        self.AssetObject.query({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.objects = result;\r\n\r\n                if(afterExecuteCallback){\r\n                    afterExecuteCallback();\r\n                }\r\n                \r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    loadFloors(afterExecuteCallback){\r\n        let self = this;\r\n        \r\n        self.Floor.getByAssetId({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.floors = result;\r\n\r\n                if(afterExecuteCallback){\r\n                    afterExecuteCallback();\r\n                }\r\n            },\r\n            (error) => { }\r\n        );\r\n    }\r\n\r\n    loadSpaces(afterExecuteCallback){\r\n        let self = this;\r\n        \r\n        self.Space.getByAssetId({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.spaces = result;\r\n                \r\n                if(afterExecuteCallback){\r\n                    afterExecuteCallback();\r\n                }\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    createStore(){\r\n        let self = this;\r\n\r\n        self.store = new ArrayStore({\r\n            data: self.spaces,\r\n            key: \"id\",\r\n            modified: function () {\r\n                // 'modified' event handler\r\n            },\r\n            errorHandler: self.errorHandler.requestFailed\r\n        });\r\n\r\n        return self.store;\r\n    }\r\n\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        self.spaceTypeStore = Constants.spaceTypeStore();\r\n\r\n        self.createStore();\r\n\r\n        self.floorStore = new CustomStore({\r\n            load: function (loadOptions) {\r\n                return self.floors;\r\n            },\r\n            byKey: function(key) {\r\n                return { id: key };\r\n            }\r\n        })\r\n\r\n        self.assetObjectStore = new CustomStore({\r\n            load: function (loadOptions) {\r\n                return self.objects;\r\n            },\r\n            byKey: function(key) {\r\n                return { id: key };\r\n            }\r\n        })\r\n\r\n        self.gridDataSource = self.store;\r\n\r\n        self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n            dataSource: {store: self.store},\r\n            filterRow: { visible: false },\r\n            groupPanel: { visible: false },\r\n            columns: [\r\n                {\r\n                    dataField: 'number',\r\n                    caption: Messages('assets.spaces.number'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    sortOrder: 'asc',\r\n                    alignment: 'right'\r\n                },\r\n                {\r\n                    dataField: 'type',\r\n                    caption: Messages('assets.spaces.type'),\r\n                    // width: 100,\r\n                    lookup: {\r\n                        dataSource: self.spaceTypeStore,\r\n                        displayExpr: 'display',\r\n                        valueExpr: 'value'\r\n                    }\r\n                },\r\n                {\r\n                    dataField: 'rentableArea',\r\n                    dataType: 'number',\r\n                    caption: Messages('assets.spaces.rentableArea'),\r\n                    filterOperations: ['>', '<', '='],\r\n                    selectedFilterOperation: '>',\r\n                    alignment: 'right'\r\n                },\r\n                {\r\n                    dataField: 'floorId',\r\n                    caption: Messages('assets.spaces.floor'),\r\n                    // width: 100,\r\n                    lookup: {\r\n                        dataSource: {store: self.floorStore},\r\n                        displayExpr: 'number',\r\n                        valueExpr: 'id'\r\n                    },\r\n                    alignment: 'right',\r\n                    allowEditing: false\r\n                },\r\n                {\r\n                    dataField: 'assetObjectId',\r\n                    caption: Messages('assets.spaces.assetobject'),\r\n                    width: 100,\r\n                    lookup: {\r\n                        dataSource: {store: self.assetObjectStore},\r\n                        displayExpr: 'name',\r\n                        valueExpr: 'id'\r\n                    },\r\n                    alignment: 'right',\r\n                    allowEditing: false\r\n                },\r\n                {\r\n                    dataField: \"id\",\r\n                    caption: Messages('actions'),\r\n                    width: 100,\r\n                    alignment: 'right',\r\n                    cellTemplate: function (container, options) {\r\n                        container.addClass(\"actions-cell\");\r\n\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-pencil\"></div>',\r\n                            onClick: function(e) {\r\n                                self.updateSpace(options.data);\r\n                            }\r\n                        }).appendTo(container);\r\n\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-trash-o\"></div>',\r\n                            onClick: function(e) {\r\n                                self.deleteSpace(options.data);\r\n                            }\r\n                        }).appendTo(container);\r\n                    }}\r\n                ]\r\n        });\r\n    }\r\n\r\n    createSpace() {\r\n        var modal = this.$uibModal.open({\r\n            controller: SpaceController,\r\n            template: SpaceTemplate,\r\n            resolve: {\r\n                asset: this.asset,\r\n                assetObjectId: null,\r\n                floorId: null,\r\n                spaceId: 0\r\n            },\r\n            size: 'lg'\r\n        });\r\n        modal.result.then(result => {\r\n            \r\n            this.Space.create({ assetId: this.asset.id, assetObjectId: result.space.assetObjectId, floorId: result.space.floorId }, result.space,\r\n                (result) => {\r\n                    this.spaces.push(result);\r\n                    this.NotificationService.success(Messages('assets.spaces.created'));\r\n                    this.saveInProgress = false;\r\n\r\n                    this.refreshGrid();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this.NotificationService.error(error.data);\r\n                    this.saveInProgress = false;\r\n                }\r\n            );\r\n        });\r\n\r\n        modal.closed.then(() => {\r\n            //this.refreshGrid();\r\n        });\r\n\r\n        this.space = null;\r\n    }\r\n\r\n    updateSpace(space) {\r\n        let self = this;\r\n\r\n        var modal = self.$uibModal.open({\r\n            controller: SpaceController,\r\n            template: SpaceTemplate,\r\n            resolve: {\r\n                asset: self.asset,\r\n                assetObjectId: space.assetObjectId,\r\n                floorId: space.floorId,\r\n                spaceId: space.id\r\n            },\r\n            size: 'lg'\r\n        });\r\n        modal.result.then(function(result) {\r\n            jQuery.extend(space, result.space);\r\n\r\n            self.Space.update({ assetId: self.asset.id, assetObjectId: result.space.assetObjectId, floorId: result.space.floorId, id: result.space.id }, result.space,\r\n                (result) => {\r\n                    self.NotificationService.success(Messages('assets.spaces.updated'));\r\n                    self.saveInProgress = false;\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    self.NotificationService.error(error.data);\r\n                    self.saveInProgress = false;\r\n                }\r\n            );\r\n        });\r\n        modal.closed.then(function() {\r\n\r\n        });\r\n    }\r\n\r\n    deleteSpace(space) {\r\n        let self = this;\r\n        self.sweetAlert.swal(\r\n            {\r\n                title: Messages('assets.spaces.delete.title'),\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                cancelButtonText: Messages('assets.cancel'),\r\n                confirmButtonColor: '#DD6B55',\r\n                confirmButtonText: Messages('assets.spaces.delete.confirmButton'),\r\n            },\r\n            function (isConfirm) {\r\n                if (isConfirm) {\r\n                    self.Space.delete({ assetId: self.asset.id, assetObjectId: space.assetObjectId, floorId: space.floorId, id: space.id },\r\n                        (result) => {\r\n                            var spaceIdx = self.spaces.findIndex(t => t.id == space.id);\r\n                            self.spaces.splice(spaceIdx, 1);\r\n\r\n                            self.refreshGrid();\r\n                            self.NotificationService.success(Messages('assets.spaces.deleted'));\r\n                            self.saveInProgress = false;\r\n                        },\r\n                        (error) => {\r\n                            console.log(error);\r\n                            self.NotificationService.error(error.data.message ? error.data.message : error.data);\r\n                            self.saveInProgress = false;\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    refreshGrid() {\r\n        $(\"#spacesGridContainer\").dxDataGrid('instance').refresh();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/spaces/spaces.controller.js","module.exports = \"<form name=\\\"spacesForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.createSpace()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('assets.spaces.add')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"spacesGridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/spaces/spaces.template.html\n// module id = 783\n// module chunks = 0","let AssetDocumentsComponent = {\r\n    bindings: {\r\n        documents: '=',\r\n        asset: '=',\r\n        maxAttachementSize: '=?',\r\n        maxAttachementCount: '=?',\r\n        readonly: '=?',\r\n        documentCreateCallback: '=?',\r\n        saveUpdates: '=?'\r\n    },\r\n    controller : function() {\r\n        let self = this;\r\n\r\n        self.maxAttachementCount = 10;\r\n        self.maxAttachementSize = 5000000;\r\n\r\n        self.documentCreateCallback = function (document) {\r\n            document.assetId = self.asset.id;\r\n            self.saveUpdates();\r\n            //spaceId: self.space.spaceId,\r\n        };\r\n        self.documentDeleteCallback = function (document) {\r\n            self.saveUpdates();\r\n        };\r\n    },\r\n    template: \"<attachements documents='$ctrl.documents' \" +\r\n    \"                        readonly='$ctrl.readonly' \" +\r\n    \"                        max-attachement-count='$ctrl.maxAttachementCount' \" +\r\n    \"                        max-attachement-size='$ctrl.maxAttachementSize' \" +\r\n    \"                        document-create-callback='$ctrl.documentCreateCallback' \" +\r\n    \"                        document-delete-callback='$ctrl.documentDeleteCallback' \" +\r\n    \"                        class='asset-documents'></attachements>\"\r\n};\r\n\r\nexport default AssetDocumentsComponent;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assetdocuments.component.js","// import template and controller from individual component directory\r\nimport Controller from './object.controller'\r\nimport Template from './object.template.html'\r\n\r\nlet AssetObjectComponent = {\r\n    bindings: {\r\n        asset: '=',\r\n        saveUpdates: '=?',\r\n        needUpdateDataSources: '&'\r\n    },\r\n    controller: Controller,\r\n    template: Template\r\n};\r\n\r\nexport default AssetObjectComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assetObjects/object.component.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../../messages';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\nimport Constants from '../../constants';\r\nimport AssetObjectEditModalController from './asset-object-edit-modal.controller';\r\nimport AssetObjectEditModalTemplate from './asset-object-edit-modal.template.html';\r\n\r\n\r\nexport default class AssetObjectController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, AssetObject, NotificationService, UtilsService, sweetAlert, $uibModal) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.AssetObject = AssetObject;\r\n        this.NotificationService = NotificationService;\r\n        this.utils = UtilsService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n\r\n        this.messages = Messages;\r\n\r\n        this.init();\r\n    }\r\n\r\n   \r\n    init(){\r\n        let self = this;\r\n\r\n        self.AssetObject.query({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.objects = result;\r\n\r\n                for (var i = 0; i < self.objects.length; i++){\r\n                    if(!self.objects[i].uniqueId) {\r\n                        self.objects[i].uniqueId = self.utils.generateGuid();\r\n                    }\r\n                    self.objects[i].address = self.utils.generateAddress(self.objects[i]);\r\n                }\r\n\r\n                self.initGrid();\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        }\r\n\r\n        self.store = new ArrayStore({\r\n            data: self.objects,\r\n            key: \"uniqueId\",\r\n            modified: function () {\r\n                // 'modified' event handler\r\n            },\r\n            errorHandler: self.errorHandler.requestFailed\r\n        });\r\n\r\n        self.gridDataSource = { store: self.store };\r\n\r\n        self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n            dataSource: self.gridDataSource,\r\n            groupPanel: {\r\n                visible: false\r\n            },\r\n            filterRow: {\r\n                visible: false\r\n            },\r\n            columns: [\r\n                {\r\n                    dataField: \"name\",\r\n                    caption: Messages('assets.objects.name'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    allowSorting: false,\r\n                    width: 150,\r\n                    alignment: 'right'\r\n                },\r\n                {\r\n                    dataField: \"address\",\r\n                    caption: Messages('assets.objects.address'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    allowSorting: false,\r\n                },\r\n                {\r\n                    dataField: \"isDisplayOnStackingPlan\",\r\n                    caption: Messages('assets.objects.isDisplayOnStackingPlan'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    allowSorting: false,\r\n                    dataType: 'boolean'\r\n                },\r\n                {\r\n                    dataField: \"id\",\r\n                    visible: false,\r\n                },\r\n                {\r\n                    dataField: \"uniqueId\",\r\n                    caption: Messages('actions'),\r\n                    width: 100,\r\n                    allowSorting: false,\r\n                    alignment: 'right',\r\n                    cellTemplate: function (container, options) {\r\n                        container.addClass(\"actions-cell\");\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-pencil\"></div>',\r\n                            onClick: function (e) {\r\n                                self.editAssetObject(options.data.id);\r\n                            }\r\n                        }).appendTo(container);\r\n                        \r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-trash-o\"></div>',\r\n                            onClick: function (e) {\r\n                                self.sweetAlert.swal(\r\n                                    {\r\n                                        title: Messages('assets.objects.delete.title'),\r\n                                        type: 'warning',\r\n                                        showCancelButton: true,\r\n                                        cancelButtonText: Messages('assets.cancel'),\r\n                                        confirmButtonColor: '#DD6B55',\r\n                                        confirmButtonText: Messages('assets.objects.delete.confirmButton'),\r\n                                    },\r\n                                    function (isConfirm) {\r\n                                        if (isConfirm) {\r\n                                            self.deleteAssetObject(options.data);\r\n                                        }}\r\n                                    );\r\n                            }\r\n                        }).appendTo(container);\r\n                        \r\n                    },\r\n            }],\r\n        });\r\n\r\n        self.refreshGrid = function() {\r\n            $(\"#objectsGridContainer\").dxDataGrid('instance').refresh();\r\n        }\r\n\r\n        self.deleteAssetObject = function(assetObject){\r\n            self.AssetObject.archive({ assetId: self.asset.id, id: assetObject.id }, \r\n            (result) => {\r\n                var assetObjectIdx = self.objects.findIndex(t => t.id == assetObject.id);\r\n                self.objects.splice(assetObjectIdx, 1);\r\n\r\n                self.NotificationService.success(Messages('assets.objects.message.deleted'));\r\n                self.saveInProgress = false;\r\n\r\n                self.needUpdateDataSources();\r\n                self.refreshData();\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                self.NotificationService.error(error.data);\r\n                self.saveInProgress = false;\r\n            }\r\n            );\r\n        }\r\n    };\r\n\r\n    addAssetObject() {\r\n        let self = this;\r\n\r\n\r\n        let modal = this.$uibModal.open({\r\n            controller: AssetObjectEditModalController,\r\n            template: AssetObjectEditModalTemplate,\r\n            resolve: {\r\n                towerObject: null,\r\n                assetId: self.asset.id\r\n            }\r\n        });\r\n        modal.result.then(result => {\r\n            self.needUpdateDataSources();\r\n            self.refreshData();\r\n        });\r\n    }\r\n\r\n    editAssetObject(objectId) {\r\n        let self = this;\r\n\r\n        this.AssetObject.getById(\r\n                {id: objectId, assetId: self.asset.id},\r\n                result => {\r\n                    let modal = this.$uibModal.open({\r\n                        controller: AssetObjectEditModalController,\r\n                        template: AssetObjectEditModalTemplate,\r\n                        resolve: {\r\n                            towerObject: result,\r\n                            assetId: self.asset.id\r\n                        }\r\n                    });\r\n                    modal.result.then(result => {\r\n                        self.needUpdateDataSources();\r\n                        self.refreshData();\r\n                    });\r\n                },\r\n                error => {\r\n                    this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n    refreshData(){\r\n        let self = this;\r\n\r\n        self.AssetObject.query({ assetId: self.asset.id },\r\n            (result) => {\r\n                self.objects = result;\r\n\r\n                for (var i = 0; i < self.objects.length; i++){\r\n                    if(!self.objects[i].uniqueId) {\r\n                        self.objects[i].uniqueId = self.utils.generateGuid();\r\n                    }\r\n                    self.objects[i].address = self.utils.generateAddress(self.objects[i]);\r\n                }\r\n\r\n                self.store = new ArrayStore({\r\n                    data: self.objects,\r\n                    key: \"uniqueId\",\r\n                    modified: function () {\r\n                    },\r\n                    errorHandler: self.errorHandler.requestFailed\r\n                });\r\n                let dataGrid = $(\"#objectsGridContainer\").dxDataGrid('instance');\r\n                dataGrid.beginUpdate();\r\n                dataGrid.option('dataSource', []);\r\n                dataGrid.option('dataSource', {store: self.store});\r\n                dataGrid.endUpdate(); \r\n\r\n                self.refreshGrid();\r\n            },\r\n            (error) => { });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assetObjects/object.controller.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../../messages';\r\nimport Constants from '../../constants';\r\n\r\nexport default class AssetObjectEditController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $timeout, AssetObject, towerObject, assetId, NotificationService, $uibModalInstance, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.$timeout = $timeout;\r\n        this.AssetObject = AssetObject;\r\n        this.towerObject = towerObject;\r\n        this.notificationService = NotificationService;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.utils = UtilsService;\r\n        this.validationGroup = 'asset-object-edit';\r\n        this.addressValidationGroup = 'asset-object-edit-address';\r\n        this.assetId = assetId;\r\n\r\n        this.init();\r\n        this.initForm();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        this.$timeout(() => {\r\n            this.initAutocomplete();\r\n        });\r\n\r\n        this.$scope.clearAddress = function(){\r\n             self.$scope.tower.address = null;\r\n        }\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        this.$scope.editMode = this.towerObject !== null;\r\n        this.isSaveOperationDisable = true;\r\n\r\n        if (this.$scope.editMode) {\r\n            this.$scope.tower = this.towerObject;\r\n        } else {\r\n            this.$scope.tower = {\r\n                name: '',\r\n                countryId: 1,\r\n                city: '',\r\n                street: '',\r\n                streetAddress: '',\r\n                postCode: '',\r\n                isDisplayOnStackingPlan: false\r\n            }\r\n        }\r\n\r\n        this.$scope.nameSettings = {\r\n            placeholder: Messages('assets.objects.placeholder.name'),\r\n            bindingOptions: {\r\n                value: 'tower.name'\r\n            }\r\n        };\r\n        this.$scope.nameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', max: 255, message: Messages('validation.maxLength') },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.displaySettings = {\r\n            bindingOptions: {\r\n                value: 'tower.isDisplayOnStackingPlan'\r\n            }\r\n        };\r\n        this.$scope.displayValidationRules = {\r\n            validationRules: [\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.countryStore = Constants.countryStore();\r\n        this.$scope.countrySettings = {\r\n            dataSource: this.countryStore,\r\n            displayExpr: 'display',\r\n            valueExpr: 'value',\r\n            bindingOptions: {\r\n                value: 'tower.countryId'\r\n            }\r\n        };\r\n\r\n        this.$scope.countryValidationRules = {\r\n            validationRules: [],\r\n            validationGroup: this.validationGroup,\r\n            onOptionChanged: function() {\r\n                self.setAutocompleteCountry();\r\n            }\r\n        };\r\n\r\n        this.$scope.tower.address = '';\r\n        this.$scope.addressSettings = {\r\n            bindingOptions: {\r\n                value: 'tower.address',\r\n                disabled: '!tower.countryId'\r\n            }\r\n        };\r\n        this.$scope.addressValidationRules = {\r\n            validationRules: [{\r\n                type: 'custom',\r\n                validationCallback: function(options) {\r\n                    if (!self.$scope.tower.countryId) {\r\n                        options.rule.message = Messages('address.validation.countryRequired');\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }],\r\n            validationGroup: this.addressValidationGroup\r\n        };\r\n\r\n        this.$scope.citySettings = {\r\n            placeholder: Messages('address.placeholder.city'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'tower.city'\r\n            }\r\n        };\r\n        this.$scope.cityValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 80 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetSettings = {\r\n            placeholder: Messages('address.placeholder.street'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'tower.street'\r\n            }\r\n        };\r\n        this.$scope.streetValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 100 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.streetAddressSettings = {\r\n            placeholder: Messages('address.placeholder.streetAddress'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'tower.streetAddress'\r\n            }\r\n        };\r\n        this.$scope.streetAddressValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.postCodeSettings = {\r\n            placeholder: Messages('address.placeholder.postCode'),\r\n            onChange: self.$scope.clearAddress,\r\n            bindingOptions: {\r\n                value: 'tower.postCode'\r\n            }\r\n        };\r\n        this.$scope.postCodeValidationRules = {\r\n            validationRules: [\r\n                { type: 'stringLength', max: 10 },\r\n            ],\r\n            validationGroup: this.validationGroup\r\n        };\r\n\r\n        this.$scope.validateAndSave = () => {\r\n            let self = this;\r\n            \r\n            let result = ValidationEngine.getGroupConfig(this.validationGroup).validate();\r\n            if (result.isValid) {\r\n                this.saveInProgress = true;\r\n                this.isSaveOperationDisable = true;\r\n                if (!this.$scope.editMode) {\r\n                    this.AssetObject.save({ assetId : self.assetId }, this.$scope.tower,\r\n                        (result) => {\r\n                            this.saveInProgress = false;\r\n                            this.$uibModalInstance.close(this.$scope.tower);\r\n                            this.notificationService.success(Messages('assets.objects.message.created'));\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            this.saveInProgress = false;\r\n                        }\r\n                    );\r\n                } else {\r\n                    this.AssetObject.update({ id: this.$scope.tower.id, assetId : self.assetId  }, this.$scope.tower,\r\n                        (result) => {\r\n                            this.notificationService.success(Messages('assets.objects.message.updated'));\r\n                            this.saveInProgress = false;\r\n                            this.$uibModalInstance.close(this.$scope.tower);\r\n                        },\r\n                        (error) => {\r\n                            this.notificationService.error(error.data.message ? error.data.message : error.data);\r\n                            this.saveInProgress = false;\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        this.$scope.cancel = () => {\r\n            ValidationEngine.removeGroup(this.validationGroup);\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n    }\r\n\r\n    initAutocomplete() {\r\n        if (!window.google) {\r\n            return;\r\n        }\r\n\r\n        this.autocomplete = new google.maps.places.Autocomplete($('#tower-address-field input')[0]);\r\n        google.maps.event.addListener(this.autocomplete, 'place_changed', () => {\r\n            let place = this.autocomplete.getPlace(),\r\n                citySet, streetSet, buildingSet, postCodeSet;\r\n\r\n            if (place.address_components instanceof Array) {\r\n                place.address_components.forEach((item) => {\r\n                    if (item.types.indexOf('locality') !== -1) {\r\n                        this.$scope.tower.city = item.long_name;\r\n                        citySet = true;\r\n                    }\r\n                    if (item.types.indexOf('route') !== -1) {\r\n                        this.$scope.tower.street = item.long_name;\r\n                        streetSet = true;\r\n                    }\r\n                    if (item.types.indexOf('street_number') !== -1) {\r\n                        this.$scope.tower.streetAddress = item.long_name;\r\n                        buildingSet = true;\r\n                    }\r\n                    if (item.types.indexOf('postal_code') !== -1) {\r\n                        this.$scope.tower.postCode = item.long_name;\r\n                        postCodeSet = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!citySet) {\r\n                this.$scope.tower.city = null;\r\n            }\r\n            if (!streetSet) {\r\n                this.$scope.tower.street = null;\r\n            }\r\n            if (!buildingSet) {\r\n                this.$scope.tower.streetAddress = null;\r\n            }\r\n            if (!postCodeSet) {\r\n                this.$scope.tower.postCode = null;\r\n            }\r\n            ValidationEngine.getGroupConfig(this.addressValidationGroup).validate();\r\n        });\r\n\r\n        if (this.$scope.tower.countryId) {\r\n            this.setAutocompleteCountry();\r\n        }\r\n    }\r\n\r\n\r\n    setAutocompleteCountry() {\r\n        let countries = Constants.countryStorePlain(),\r\n            curCountryCode;\r\n\r\n        countries.forEach((country) => {\r\n            if (country.value === this.$scope.tower.countryId) {\r\n                curCountryCode = country.isoCode;\r\n            }\r\n        });\r\n\r\n        this.autocomplete.setComponentRestrictions({\r\n            'country': curCountryCode\r\n        });\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assetObjects/asset-object-edit-modal.controller.js","module.exports = \"<div class=\\\"inmodal\\\" ng-class=\\\"editMode ? 'hmodal-info' : ''\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-header text-center\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            {{ editMode ? Messages('assets.objects.edit.title') : Messages('assets.objects.create.title') }}\\r\\n        </h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-name\\\" class=\\\"control-label\\\">{{Messages('assets.objects.create.name')}}</label>\\r\\n                <div id=\\\"field-name\\\" dx-text-box=\\\"nameSettings\\\" dx-validator=\\\"nameValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-display\\\" class=\\\"control-label\\\">{{Messages('assets.objects.create.isDisplayOnStackingPlan')}}</label>\\r\\n                <div id=\\\"field-display\\\" dx-check-box=\\\"displaySettings\\\" dx-validator=\\\"displayValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"field-country\\\" class=\\\"control-label\\\">{{Messages('address.country')}}</label>\\r\\n                <div id=\\\"field-country\\\" dx-select-box=\\\"countrySettings\\\" dx-validator=\\\"countryValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"tower-address-field\\\" class=\\\"control-label\\\">{{ Messages('address.autoComplete') }}</label>\\r\\n                <div id=\\\"tower-address-field\\\" dx-text-box=\\\"addressSettings\\\" dx-validator=\\\"addressValidationRules\\\"></div>\\r\\n            </div>\\r\\n            <label class=\\\"control-label\\\">{{ Messages('address.manually') }}</label>\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-city\\\" class=\\\"control-label\\\">{{Messages('address.city')}}</label>\\r\\n                        <div id=\\\"field-city\\\" dx-text-box=\\\"citySettings\\\" dx-validator=\\\"cityValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street\\\" class=\\\"control-label\\\">{{Messages('address.street')}}</label>\\r\\n                        <div id=\\\"field-street\\\" dx-text-box=\\\"streetSettings\\\" dx-validator=\\\"streetValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-street-address\\\" class=\\\"control-label\\\">{{Messages('address.streetAddress')}}</label>\\r\\n                        <div id=\\\"field-street-address\\\" dx-text-box=\\\"streetAddressSettings\\\" dx-validator=\\\"streetAddressValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"field-post-code\\\" class=\\\"control-label\\\">{{Messages('address.postCode')}}</label>\\r\\n                        <div id=\\\"field-post-code\\\" dx-text-box=\\\"postCodeSettings\\\" dx-validator=\\\"postCodeValidationRules\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"validateAndSave()\\\">\\r\\n            {{ saveInProgress ? Messages('assets.objects.saving') : Messages('assets.objects.save') }}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{ Messages('assets.objects.cancel') }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/assetObjects/asset-object-edit-modal.template.html\n// module id = 788\n// module chunks = 0","module.exports = \"<form name=\\\"assetObjectsForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addAssetObject()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('assets.objects.add')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"objectsGridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/assets/assetObjects/object.template.html\n// module id = 789\n// module chunks = 0","export default class Asset {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n     return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets',\r\n            isArray: true\r\n        },\r\n        getFull: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/full',\r\n        },\r\n        setImage: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/image',\r\n            transformRequest: angular.identity,\r\n            headers: { 'Content-Type': undefined }\r\n        },\r\n        resetImage: {\r\n            method: 'DELETE',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/image',\r\n        },\r\n        create: {\r\n            method: 'POST'\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        archive: {\r\n            method: 'DELETE'\r\n        }\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Asset.instance = new Asset(ConfigurationService, $resource);\r\n    return Asset.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/asset.resource.js","export default class AssetObject {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n     return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:id', { assetId: '@assetId', id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects',\r\n            isArray: true\r\n        },\r\n        create: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects',\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        archive: {\r\n            method: 'DELETE'\r\n        },\r\n        getById: {\r\n            method: 'GET',\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    AssetObject.instance = new AssetObject(ConfigurationService, $resource);\r\n    return AssetObject.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/assetObjects/object.resource.js","export default class Floor {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n     return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:id', { assetId: '@assetId', assetObjectId: '@assetObjectId', id: '@id', count: '@count', autonumerate:'@autonumerate'  }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors',\r\n            isArray: true\r\n        },\r\n        createRange: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors?count=:count&autonumerate=:autonumerate',\r\n            isArray: true\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        delete: {\r\n            method: 'DELETE'\r\n        },\r\n        getFull: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:id/full',\r\n        },\r\n        getByAssetId: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/floors',\r\n            isArray: true\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Floor.instance = new Floor(ConfigurationService, $resource);\r\n    return Floor.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/floors/floor.resource.js","export default class Space {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n     return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces/:id', \r\n                                                            { assetId: '@assetId', assetObjectId: '@assetObjectId', 'floorId': '@floorId', id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces',\r\n            isArray: true\r\n        },\r\n        create: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces',\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        delete: {\r\n            method: 'DELETE'\r\n        },\r\n        getFull: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces/:id/full',\r\n        },\r\n        getByAssetId: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/spaces',\r\n            isArray: true\r\n        },\r\n        getByAssetObjectId: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/spaces',\r\n            isArray: true\r\n        }\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Space.instance = new Space(ConfigurationService, $resource);\r\n    return Space.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/assets/spaces/space.resource.js","import AssetStatsController from './asset-stats.controller';\r\nimport AssetStatSpacesController from './asset-stat-spaces.controller';\r\nimport AssetStatTenantsController from './tenants/asset-stat-tenants.controller';\r\nimport AssetStatStackingPlan from './asset-stat-stacking-plan.resource';\r\nimport AssetStatStackingPlanController from './asset-stat-stacking-plan.controller';\r\nimport AssetStats from './asset-stats.resource';\r\nimport AssetStatSpaces from './asset-stat-spaces.resource';\r\nimport AssetStatTenants from './tenants/asset-stat-tenants.resource';\r\n\r\nvar module = angular.module('tower360.assetStats', [])\r\n  .controller('AssetStatsController', AssetStatsController)\r\n  .controller('AssetStatSpacesController', AssetStatSpacesController)\r\n  .controller('AssetStatTenantsController', AssetStatTenantsController)\r\n  .controller('AssetStatStackingPlanController', AssetStatStackingPlanController)\r\n  .factory('AssetStats', AssetStats.activate)\r\n  .factory('AssetStatSpaces', AssetStatSpaces.activate)\r\n  .factory('AssetStatTenants', AssetStatTenants.activate)\r\n  .factory('AssetStatStackingPlan', AssetStatStackingPlan.activate)\r\n  .directive('resize', ['$window', function ($window) {\r\n    return function (scope, element) {\r\n        var w = angular.element($window);\r\n        var changeHeight = function () {\r\n          element.css('height', (element.width()));\r\n        }\r\n        w.bind('resize', function () {\r\n            changeHeight();\r\n        });\r\n        changeHeight();\r\n    }\r\n  }]);\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stats.js","import Messages from '../messages';\r\n\r\nexport default class AssetStatsController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, StoreAdapter, AssetStats, NotificationService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.storeAdapter = StoreAdapter;\r\n        //this.currentUser = currentUser;\r\n        this.notificationService = NotificationService;\r\n\r\n        this.Messages = Messages;\r\n\r\n        this.assetStats = AssetStats;\r\n\r\n        this.init();\r\n\r\n        this.isMore = false;\r\n        this.page = 0;\r\n        this.pageSize = 8;\r\n        this.loadedImages = [];\r\n        this.loadedImagesCount = 0;\r\n        this.totalRowsCount = 0;\r\n    }\r\n\r\n    init() {\r\n        this.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        this.assetStats.query({\r\n            pageNumber: this.page\r\n        }, (result) => {\r\n            let assets = [],\r\n                rowIndex = 0;\r\n\r\n            result.forEach((item, i) => {\r\n                if (i % 4 === 0 && i !== 0) {\r\n                    rowIndex++;\r\n                }\r\n                if (!assets[rowIndex]) {\r\n                    assets[rowIndex] = [];\r\n                }\r\n                item.color = this.getPanelColor();\r\n                assets[rowIndex].push(item);\r\n            });\r\n\r\n            this.assets = assets;\r\n            this.assetsLength = result.length;\r\n            this.totalRowsCount = result.length;\r\n        }, (error) => {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    loadMore() {\r\n        this.page++;\r\n\r\n        this.assetStats.query({\r\n            pageNumber: this.page\r\n        }, (result) => {\r\n            this.assets = this.assets.concat(result.items);\r\n        }, (error) => {\r\n\r\n        });\r\n    }\r\n\r\n    imageLoad() {\r\n        this.loadedImagesCount++;\r\n        if (this.loadedImagesCount === this.assetsLength) {\r\n            this.loadedImages[this.page] = true;\r\n            this.isMore = this.assetsLength < this.totalRowsCount;\r\n            this.$scope.$apply();\r\n        }\r\n    }\r\n\r\n    isShow(index) {\r\n        return this.loadedImages[Math.floor(index / this.pageSize)];\r\n    }\r\n\r\n    getPanelColor() {\r\n        let panelColors = ['hgreen', 'hblue', 'hyellow', 'hviolet', 'horange', 'hred', 'hreddeep', 'hnavyblue'];\r\n        return panelColors[Math.floor(Math.random() * panelColors.length)];\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stats.controller.js","import FilterController from './spaces-filter-modal.controller';\r\nimport FilterTemplate from './spaces-filter-modal.template.html';\r\nimport Constants from '../constants';\r\nimport Messages from '../messages';\r\nimport moment from 'moment';\r\n\r\nexport default class AssetStatSpacesController {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, $state, asset, assetId, AssetStatSpaces, AssetStatStackingPlan, $uibModal, uibDateParser, $timeout, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.$state = $state;\r\n        this.asset = asset;\r\n        this.assetId = assetId;\r\n        this.AssetStatSpaces = AssetStatSpaces;\r\n        this.AssetStatStackingPlan = AssetStatStackingPlan;\r\n        this.$uibModal = $uibModal;\r\n        this.uibDateParser = uibDateParser;\r\n        this.$timeout = $timeout;\r\n        this.utils = UtilsService;\r\n\r\n        this.Messages = Messages;\r\n\r\n        this.init();\r\n\r\n        $scope.$on('$destroy', () => {\r\n            $rootScope.$broadcast('right-sidebar:close');\r\n        });\r\n        $scope.$on('right-sidebar:closed', () => {\r\n            this.selectSpaceRow([]);\r\n            this.selectedSpace = null;\r\n        });\r\n    }\r\n\r\n    init() {\r\n        this.$scope.greedData = [];\r\n\r\n        this.$scope.statuses = [{\r\n            id: 'all',\r\n            value: 1,\r\n            name: Messages('assets.spaces.filter.all'),\r\n        }, {\r\n            id: 'vacant',\r\n            value: 3,\r\n            name: Messages('assets.spaces.filter.vacant')\r\n        }, {\r\n            id: 'occupied',\r\n            value: 2,\r\n            name: Messages('assets.spaces.filter.occupied')\r\n        }, {\r\n            id: '1_month',\r\n            value: 1,\r\n            name: Messages('assets.spaces.filter.in_1_month')\r\n        }, {\r\n            id: '3_month',\r\n            value: 3,\r\n            name: Messages('assets.spaces.filter.in_3_month')\r\n        }, {\r\n            id: '6_month',\r\n            value: 6,\r\n            name: Messages('assets.spaces.filter.in_6_month')\r\n        }, {\r\n            id: '1_year',\r\n            value: 12,\r\n            name: Messages('assets.spaces.filter.in_1_year')\r\n        }, {\r\n            id: 'custom',\r\n            name: Messages('assets.spaces.filter.custom_dates')\r\n        }];\r\n        this.$scope.selectedStatus = this.$scope.statuses[0];\r\n\r\n        this.$timeout(() => {\r\n            this.customDateElement = $('#spaces-filter-daterangepicker');\r\n            $(this.customDateElement).daterangepicker({\r\n                minDate: new Date(),\r\n                autoApply: true\r\n            });\r\n            $(this.customDateElement).on('apply.daterangepicker', (ev, picker) => {\r\n                this.customAvailableFrom = picker.startDate;\r\n                this.customAvailableTo = picker.endDate;\r\n                this.$scope.customAvailableFrom = this.getParsedDate(picker.startDate);\r\n                this.$scope.customAvailableTo = this.getParsedDate(picker.endDate);\r\n                this.gridUpdate(1);\r\n            });\r\n        }, 1);\r\n\r\n        this.$scope.extraFilters = [];\r\n        this.$scope.towers = [];\r\n        this.$scope.sortType = 'unit';\r\n        this.$scope.sortDirection = 0;\r\n\r\n        this.gridUpdate(1);\r\n\r\n        this.AssetStatStackingPlan.getObjects({\r\n            asset: this.assetId\r\n        }, (result) => {\r\n            this.$scope.towers = result;\r\n        }, (err) => {\r\n\r\n        });\r\n\r\n        this.statsLabelsDisctionary = {\r\n                'all': 'totalSpacesCount',\r\n                'vacant' :'totalVacantSpacesCount',\r\n                'occupied' :'totalOccupiedSpacesCount',\r\n                '1_month': 'expiresInOneMonthCount',\r\n                '3_month': 'expiresInThreeMonthCount',\r\n                '6_month' : 'expiresInSixMonthCount',\r\n                '1_year': 'expiresInOneYearCount'\r\n        };\r\n    }\r\n\r\n    gridUpdate(page) {\r\n        this.$scope.update = true;\r\n        this.page = page;\r\n\r\n        let extraFilters = this.$scope.extraFilters,\r\n            status = null,\r\n            availableFrom = null,\r\n            availableTo = null,\r\n            inPlacePriceFrom = extraFilters.find((item) => {\r\n                return item.id === 'in_place_rent_from';\r\n            }),\r\n            inPlacePriceTo = extraFilters.find((item) => {\r\n                return item.id === 'in_place_rent_to';\r\n            }),\r\n            priceFrom = extraFilters.find((item) => {\r\n                return item.id === 'price_from';\r\n            }),\r\n            priceTo = extraFilters.find((item) => {\r\n                return item.id === 'price_to';\r\n            }),\r\n            areaFrom = extraFilters.find((item) => {\r\n                return item.id === 'area_from';\r\n            }),\r\n            areaTo = extraFilters.find((item) => {\r\n                return item.id === 'area_to';\r\n            }),\r\n            floorFrom = extraFilters.find((item) => {\r\n                return item.id === 'floor_from';\r\n            }),\r\n            floorTo = extraFilters.find((item) => {\r\n                return item.id === 'floor_to';\r\n            }),\r\n            towers = [],\r\n            spaceTypes = [];\r\n\r\n        extraFilters.forEach((item) => {\r\n            if (item.id.indexOf('tower_') === 0) {\r\n                towers.push(item.value.id);\r\n            }\r\n            if (item.id.indexOf('office_type_') === 0) {\r\n                spaceTypes.push(item.value.id);\r\n            }\r\n        });\r\n\r\n        switch (this.$scope.selectedStatus.id) {\r\n            case 'all':\r\n            case 'vacant':\r\n            case 'occupied':\r\n                status = this.$scope.selectedStatus.value;\r\n                break;\r\n            case '1_month':\r\n            case '3_month':\r\n            case '6_month':\r\n            case '1_year':\r\n                availableFrom = moment().format();\r\n                availableTo = moment().add(this.$scope.selectedStatus.value, 'M').format();\r\n                break;\r\n            case 'custom':\r\n                availableFrom = moment(this.customAvailableFrom).format();\r\n                availableTo = moment(this.customAvailableTo).format();\r\n                break;\r\n        }\r\n\r\n        this.AssetStatSpaces.search({\r\n            id: this.assetId,\r\n            st: status,\r\n            agte: areaFrom && areaFrom.value,\r\n            alte: areaTo && areaTo.value,\r\n            apgte: priceFrom && priceFrom.value,\r\n            aplte: priceTo && priceTo.value,\r\n            ipgte: inPlacePriceFrom && inPlacePriceFrom.value,\r\n            iplte: inPlacePriceTo && inPlacePriceTo.value,\r\n            expgte: availableFrom,\r\n            explte: availableTo,\r\n            fgte: floorFrom && floorFrom.value,\r\n            flte: floorTo && floorTo.value,\r\n            twr: towers,\r\n            ot: spaceTypes,\r\n            srt: this.$scope.sortType,\r\n            ord: this.$scope.sortDirection,\r\n            pg: page || 1,\r\n            ps: 20\r\n        }, (result) => {\r\n            // console.log(result);\r\n            this.$scope.update = false;\r\n            this.floorsMax = result.maxFloor;\r\n            this.floorsMin = result.minFloor;\r\n\r\n            if (page === 1) {\r\n                this.$scope.greedData = result.items;\r\n                this.$scope.disable_infinite_scrolling = false;\r\n                this.updateStatusLabels(result.stats);\r\n            } else {\r\n                if (result.items.length === 0) {\r\n                    this.$scope.disable_infinite_scrolling = true;\r\n                } else {\r\n                    this.$scope.disable_infinite_scrolling = false;\r\n                    this.$scope.greedData = this.$scope.greedData.concat(result.items);\r\n                }\r\n            }\r\n\r\n            \r\n\r\n            this.$timeout(() => {\r\n                this.$scope.load_more = false;\r\n            }, 1);\r\n        }, (error) => {\r\n            console.log(error);\r\n            this.$scope.update = false;\r\n            this.$scope.error = error;\r\n        });\r\n\r\n        this.$rootScope.$broadcast('right-sidebar:close');\r\n    }\r\n    loadMoreItems() {\r\n        if (!this.$scope.greedData.length) {\r\n            return;\r\n        }\r\n\r\n        this.$scope.load_more = true;\r\n        this.gridUpdate(++this.page);\r\n    }\r\n    sortGrid(sortType) {\r\n        this.$scope.sortType = sortType;\r\n        this.$scope.sortDirection = this.$scope.sortDirection === 1 ? 0 : 1;\r\n        this.gridUpdate(1);\r\n    }\r\n\r\n    getOfficeType(type) {\r\n        let officeType = Constants.spaceTypeStorePlain().find((item) => {\r\n            return item.value === type;\r\n        });\r\n        return officeType.text;\r\n    }\r\n\r\n    getParsedDate(date) {\r\n        return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\r\n    }\r\n\r\n    selectStatus(e, status) {\r\n        e.preventDefault();\r\n        this.$scope.selectedStatus = status;\r\n\r\n        if (status.id !== 'custom') {\r\n            this.gridUpdate(1);\r\n            this.$scope.customAvailableFrom = null;\r\n            this.$scope.customAvailableTo = null;\r\n            $(this.customDateElement).data('daterangepicker').setStartDate(new Date());\r\n            $(this.customDateElement).data('daterangepicker').setEndDate(new Date());\r\n        } else {\r\n            this.showDateRangeSelector();\r\n        }\r\n    }\r\n\r\n    showDateRangeSelector() {\r\n        $(this.customDateElement).focus();\r\n    }\r\n\r\n    showExtraFilters() {\r\n        let modal = this.$uibModal.open({\r\n            controller: FilterController,\r\n            template: FilterTemplate,\r\n            resolve: {\r\n                filter: {\r\n                    data: this.$scope.extraFilters\r\n                },\r\n                towers: {\r\n                    data: this.$scope.towers\r\n                },\r\n                floors: {\r\n                    min: this.floorsMin,\r\n                    max: this.floorsMax\r\n                }\r\n            },\r\n            size: 'lg'\r\n        });\r\n        modal.result.then((result) => {\r\n            this.$scope.extraFilters = result;\r\n            if (result.length) {\r\n                this.gridUpdate(1);\r\n            }\r\n        });\r\n    }\r\n\r\n    extraFilterRemoveItem(item) {\r\n        let id = item.id,\r\n            itemIndex = this.$scope.extraFilters.findIndex(function(item) {\r\n              return item.id === id;\r\n            });\r\n\r\n        this.$scope.extraFilters.splice(itemIndex, 1);\r\n        this.gridUpdate(1);\r\n    }\r\n\r\n    selectSpaceRow(row) {\r\n        let cl = 'filtered-spaces-row-selected';\r\n        $('#filtered-spaces-grid tr').each(function(i, item) {\r\n            if (item === row[0]) {\r\n                $(item).addClass(cl);\r\n            } else {\r\n                $(item).removeClass(cl);\r\n            }\r\n        });\r\n    }\r\n\r\n    showSpaceInfo(event, data) {\r\n        if (this.selectedSpace === data.number) {\r\n            this.$rootScope.$broadcast('right-sidebar:close');\r\n            return;\r\n        }\r\n\r\n        this.selectedSpace = data.number;\r\n        let result = Object.assign({}, data),\r\n            contract = data.contract;\r\n\r\n        if (contract && contract.industryId != null){\r\n            Constants.clientsIndustryStore().byKey(contract.industryId).done(function(dataItem) {\r\n                result.industryId = contract.industryId;\r\n                result.industry = dataItem.display;\r\n            });\r\n        }\r\n\r\n        this.$rootScope.$broadcast('right-sidebar:open', {\r\n            type: 'spaceDescription',\r\n            data: result\r\n        });\r\n\r\n        this.selectSpaceRow($(event.target).parent('tr'));\r\n    }\r\n\r\n    updateStatusLabels(stats){\r\n            let self = this;\r\n            this.$scope.statuses.forEach(function(element) {\r\n                let value = Number(stats[self.statsLabelsDisctionary[element.id]]);\r\n                element.label = this.utils.formatBadgeValue(value);\r\n            }, this);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stat-spaces.controller.js","import Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class SpacesFilterController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, filter, towers, floors, $uibModalInstance, uibDateParser) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.filter = filter.data;\r\n        this.towers = towers.data;\r\n        this.floors = floors;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.uibDateParser = uibDateParser;\r\n\r\n        this.init();\r\n        this.initForm();\r\n    }\r\n\r\n    init() {\r\n        let spaceTypes = Constants.spaceTypeStorePlain(),\r\n            piecesPerRow = Math.round(spaceTypes.length / 3),\r\n            typesRows = [];\r\n\r\n        for (let i = 0, l = 3; i < l; i++) {\r\n            typesRows[i] = [];\r\n            let j = 0;\r\n            for (let jl = piecesPerRow; j < jl; j++) {\r\n                let item = spaceTypes.shift();\r\n                if (item) {\r\n                    typesRows[i].push(item);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.$scope.typesRows = typesRows;\r\n    }\r\n\r\n    initForm() {\r\n        this.$scope.fromValueChanged = (from, to) => {\r\n            if (this.$scope[from] && this.$scope[to] && this.$scope[from] > this.$scope[to]) {\r\n                this.$scope[to] = this.$scope[from];\r\n            }\r\n        };\r\n        this.$scope.toValueChanged = (from, to) => {\r\n            if (this.$scope[from] && this.$scope[to] && this.$scope[to] < this.$scope[from]) {\r\n                this.$scope[from] = this.$scope[to];\r\n            }\r\n        };\r\n\r\n        this.$scope.fromSelectorChanged = (from, to) => {\r\n            if (this.$scope[from] && this.$scope[to] && Number(this.$scope[from]) > Number(this.$scope[to])) {\r\n                this.$scope[to] = this.$scope[from];\r\n            }\r\n        };\r\n        this.$scope.toSelectorChanged = (from, to) => {\r\n            if (this.$scope[from] && this.$scope[to] && Number(this.$scope[to]) < Number(this.$scope[from])) {\r\n                this.$scope[from] = this.$scope[to];\r\n            }\r\n        };\r\n\r\n        // price\r\n        let price_from = this.filter.find((item) => {\r\n            return item.id === 'price_from';\r\n        });\r\n        this.$scope.price_from = price_from && price_from.value;\r\n        let price_to = this.filter.find((item) => {\r\n            return item.id === 'price_to';\r\n        });\r\n        this.$scope.price_to = price_to && price_to.value;\r\n\r\n        // area\r\n        let area_from = this.filter.find((item) => {\r\n            return item.id === 'area_from';\r\n        });\r\n        this.$scope.area_from = area_from && area_from.value;\r\n        let area_to = this.filter.find((item) => {\r\n            return item.id === 'area_to';\r\n        });\r\n        this.$scope.area_to = area_to && area_to.value;\r\n\r\n        // floor\r\n        let floor_from = this.filter.find((item) => {\r\n            return item.id === 'floor_from';\r\n        });\r\n        this.$scope.floor_from = floor_from && floor_from.value;\r\n        let floor_to = this.filter.find((item) => {\r\n            return item.id === 'floor_to';\r\n        });\r\n        this.$scope.floor_to = floor_to && floor_to.value;\r\n        this.$scope.floors = [];\r\n        for (let i = this.floors.min, l = this.floors.max; i <= l; i++) {\r\n            let name;\r\n            if (i < 0) {\r\n                name = `${i} UG`;\r\n            } else if (i > 0) {\r\n                name = `${i} OG`;\r\n            } else {\r\n                name = `EG`\r\n            }\r\n            this.$scope.floors.push({\r\n                id: i,\r\n                name\r\n            });\r\n        }\r\n\r\n        // asking price\r\n        let in_place_rent_from = this.filter.find((item) => {\r\n            return item.id === 'in_place_rent_from';\r\n        });\r\n        this.$scope.in_place_rent_from = in_place_rent_from && in_place_rent_from.value;\r\n        let in_place_rent_to = this.filter.find((item) => {\r\n            return item.id === 'in_place_rent_to';\r\n        });\r\n        this.$scope.in_place_rent_to = in_place_rent_to && in_place_rent_to.value;\r\n\r\n        // towers\r\n        this.$scope.towers = {\r\n            available: this.towers,\r\n            selected: []\r\n        };\r\n        this.filter.forEach((item) => {\r\n            if (item.id.indexOf('tower_') === 0) {\r\n                this.$scope.towers.selected.push(item.value);\r\n            }\r\n        });\r\n\r\n        // office type\r\n        this.$scope.office_types = [];\r\n        this.$scope.office_types_ids = [];\r\n        this.filter.forEach((item) => {\r\n            if (item.id.indexOf('office_type_') === 0) {\r\n                this.$scope.office_types.push(item.value);\r\n                this.$scope.office_types_ids.push(item.value.id);\r\n            }\r\n        });\r\n        this.$scope.officeTypeToggleSelection = (type, valueString) => {\r\n            let id = this.$scope.office_types.findIndex((item) => {\r\n                return item.id === type;\r\n            });\r\n\r\n            if (id > -1) {\r\n                this.$scope.office_types.splice(id, 1);\r\n                this.$scope.office_types_ids.splice(id, 1);\r\n            } else {\r\n                this.$scope.office_types.push({\r\n                    id: type,\r\n                    name: valueString\r\n                });\r\n                this.$scope.office_types_ids.push(type);\r\n            }\r\n        };\r\n\r\n\r\n        this.$scope.cancel = () => {\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n\r\n        this.$scope.save = () => {\r\n            let result = [];\r\n            if (this.$scope.price_from) {\r\n                result.push({\r\n                    id: 'price_from',\r\n                    name: Messages('assets.spaces.filter.asking_price_from'),\r\n                    value: this.$scope.price_from,\r\n                    text: `${this.$scope.price_from} [€/${Messages('square.meter')}]`\r\n                });\r\n            }\r\n            if (this.$scope.price_to) {\r\n                result.push({\r\n                    id: 'price_to',\r\n                    name: Messages('assets.spaces.filter.asking_price_to'),\r\n                    value: this.$scope.price_to,\r\n                    text: `${this.$scope.price_to} [€/${Messages('square.meter')}]`\r\n                });\r\n            }\r\n            if (this.$scope.area_from) {\r\n                result.push({\r\n                    id: 'area_from',\r\n                    name: Messages('assets.spaces.filter.rentable_area_from'),\r\n                    value: this.$scope.area_from,\r\n                    text: `${this.$scope.area_from} ${Messages('square.meter')}`\r\n                });\r\n            }\r\n            if (this.$scope.area_to) {\r\n                result.push({\r\n                    id: 'area_to',\r\n                    name: Messages('assets.spaces.filter.rentable_area_to'),\r\n                    value: this.$scope.area_to,\r\n                    text: `${this.$scope.area_to} ${Messages('square.meter')}`\r\n                });\r\n            }\r\n            if (this.$scope.floor_from) {\r\n                let florFrom = this.$scope.floors.find((item) => {\r\n                    return item.id === Number(this.$scope.floor_from);\r\n                });\r\n                result.push({\r\n                    id: 'floor_from',\r\n                    name: Messages('assets.spaces.filter.floor_from'),\r\n                    value: this.$scope.floor_from,\r\n                    text: `${florFrom.name}`\r\n                });\r\n            }\r\n            if (this.$scope.floor_to) {\r\n                let florTo = this.$scope.floors.find((item) => {\r\n                    return item.id === Number(this.$scope.floor_to);\r\n                });\r\n                result.push({\r\n                    id: 'floor_to',\r\n                    name: Messages('assets.spaces.filter.floor_to'),\r\n                    value: this.$scope.floor_to,\r\n                    text: `${florTo.name}`\r\n                });\r\n            }\r\n            if (this.$scope.in_place_rent_from) {\r\n                result.push({\r\n                    id: 'in_place_rent_from',\r\n                    name: Messages('assets.spaces.filter.in_place_rent_from'),\r\n                    value: this.$scope.in_place_rent_from,\r\n                    text: `${this.$scope.in_place_rent_from} [€/${Messages('square.meter')}]`\r\n                });\r\n            }\r\n            if (this.$scope.in_place_rent_to) {\r\n                result.push({\r\n                    id: 'in_place_rent_to',\r\n                    name: Messages('assets.spaces.filter.in_place_rent_to'),\r\n                    value: this.$scope.in_place_rent_to,\r\n                    text: `${this.$scope.in_place_rent_to} [€/${Messages('square.meter')}]`\r\n                });\r\n            }\r\n            if (this.$scope.towers.selected.length) {\r\n                this.$scope.towers.selected.forEach(function(item) {\r\n                    result.push({\r\n                        id: `tower_${item.name}`,\r\n                        value: item,\r\n                        text: item.name\r\n                    });\r\n                });\r\n            }\r\n            if (this.$scope.office_types.length) {\r\n                this.$scope.office_types.forEach((item) => {\r\n                    result.push({\r\n                        id: `office_type_${item.id}`,\r\n                        value: item,\r\n                        text: item.name\r\n                    });\r\n                });\r\n            }\r\n            this.$uibModalInstance.close(result);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/spaces-filter-modal.controller.js","module.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\" class=\\\"o-hidden\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.asking_price')}} [€/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            id=\\\"asking_price_from\\\"\\r\\n                            ng-model=\\\"price_from\\\"\\r\\n                            ng-blur=\\\"fromValueChanged('asking_price_from', 'asking_price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.from')}}\\\"\\r\\n                        >\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            ng-model=\\\"price_to\\\"\\r\\n                            ng-blur=\\\"toValueChanged('asking_price_from', 'asking_price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.to')}}\\\"\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.in_place_rent')}} [€/<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            id=\\\"price_from\\\"\\r\\n                            ng-model=\\\"in_place_rent_from\\\"\\r\\n                            ng-blur=\\\"fromValueChanged('price_from', 'price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.from')}}\\\"\\r\\n                        >\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            ng-model=\\\"in_place_rent_to\\\"\\r\\n                            ng-blur=\\\"toValueChanged('price_from', 'price_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.to')}}\\\"\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.rentable_area')}} [<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            id=\\\"areaFrom\\\"\\r\\n                            ng-model=\\\"area_from\\\"\\r\\n                            ng-blur=\\\"fromValueChanged('area_from', 'area_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.from')}}\\\"\\r\\n                        >\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"input-sm form-control\\\"\\r\\n                            ng-model=\\\"area_to\\\"\\r\\n                            ng-blur=\\\"toValueChanged('area_from', 'area_to')\\\"\\r\\n                            placeholder=\\\"{{Messages('assets.spaces.filter.to')}}\\\"\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"m-b-xl\\\">\\r\\n                    <p>{{Messages('assets.spaces.filter.floor')}}</p>\\r\\n                    <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                        <select class=\\\"input-sm form-control\\\" ng-model=\\\"floor_from\\\" ng-change=\\\"fromSelectorChanged('floor_from', 'floor_to')\\\">\\r\\n                            <option value=\\\"{{floor.id}}\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                {{floor.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <span class=\\\"input-group-addon\\\">-</span>\\r\\n                        <select class=\\\"input-sm form-control\\\" ng-model=\\\"floor_to\\\" ng-change=\\\"toSelectorChanged('floor_from', 'floor_to')\\\">\\r\\n                            <option value=\\\"{{floor.id}}\\\" ng-repeat=\\\"floor in floors\\\">\\r\\n                                {{floor.name}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12 m-b-xl\\\">\\r\\n                <p>{{Messages('assets.spaces.filter.towers')}}</p>\\r\\n                <ui-select multiple ng-model=\\\"towers.selected\\\" close-on-select=\\\"false\\\" theme=\\\"bootstrap\\\">\\r\\n                    <ui-select-match placeholder=\\\"{{Messages('assets.spaces.filter.towers.placeholder')}}\\\">\\r\\n                        {{$item.name}}\\r\\n                    </ui-select-match>\\r\\n                    <ui-select-choices repeat=\\\"item in towers.available | filter: $select.search\\\">\\r\\n                        {{item.name}}\\r\\n                    </ui-select-choices>\\r\\n                </ui-select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 m-b-xl\\\" ng-repeat=\\\"row in typesRows\\\">\\r\\n                <p ng-if=\\\"$index === 0\\\">{{Messages('assets.spaces.filter.type')}}</p>\\r\\n                <p ng-if=\\\"$index !== 0\\\">&nbsp;</p>\\r\\n                <div class=\\\"checkbox green\\\" ng-repeat=\\\"item in row\\\">\\r\\n                    <label>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            class=\\\"i-checks\\\"\\r\\n                            name=\\\"office_type\\\"\\r\\n                            ng-checked=\\\"office_types_ids.indexOf(item.value) !== -1\\\"\\r\\n                            ng-click=\\\"officeTypeToggleSelection(item.value, item.text)\\\"\\r\\n                        >\\r\\n                        <span class=\\\"icheckbox_square\\\"></span>\\r\\n                        <span class=\\\"label\\\">{{item.text}}</span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">\\r\\n            {{Messages('assets.spaces.filter.apply')}}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{Messages('assets.spaces.filter.cancel')}}\\r\\n        </button>\\r\\n       \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/spaces-filter-modal.template.html\n// module id = 800\n// module chunks = 0","import FilterController from './tenants-filter-modal.controller';\r\nimport FilterTemplate from './tenants-filter-modal.template.html';\r\nimport Constants from '../../constants';\r\nimport Messages from '../../messages';\r\nimport moment from 'moment';\r\n\r\nexport default class AssetStatsTenantsController {\r\n    /*@ngInject*/\r\n    constructor($scope, $rootScope, $state, asset, assetId, AssetStatTenants, AssetStatStackingPlan, sweetAlert, $uibModal, uibDateParser, UtilsService, $timeout) {\r\n        this.$scope = $scope;\r\n        this.$rootScope = $rootScope;\r\n        this.asset = asset;\r\n        this.assetId = assetId;\r\n        this.$state = $state;\r\n        this.AssetStatTenants = AssetStatTenants;\r\n        this.AssetStatStackingPlan = AssetStatStackingPlan;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n        this.uibDateParser = uibDateParser;\r\n        this.utils = UtilsService;\r\n        this.$timeout = $timeout;\r\n\r\n        this.init();\r\n\r\n        $scope.$on('$destroy', () => {\r\n            $rootScope.$broadcast('right-sidebar:close');\r\n        });\r\n        $scope.$on('right-sidebar:closed', () => {\r\n            this.selectSpaceRow([]);\r\n            this.selectedTenant = null;\r\n        });\r\n    }\r\n\r\n    init() {\r\n        this.$scope.greedData = [];\r\n\r\n        this.$scope.statuses = [{\r\n            id: 'in_place',\r\n            value: 0,\r\n            name: Messages('assets.tenants.filter.in_place'),\r\n        }, {\r\n            id: 'expired',\r\n            value: 1,\r\n            name: Messages('assets.tenants.filter.expired')\r\n        }, {\r\n            id: '1_month',\r\n            value: 1,\r\n            name: Messages('assets.tenants.filter.within_1_month')\r\n        }, {\r\n            id: '3_month',\r\n            value: 3,\r\n            name: Messages('assets.tenants.filter.within_3_month')\r\n        }, {\r\n            id: '6_month',\r\n            value: 6,\r\n            name: Messages('assets.tenants.filter.within_6_month')\r\n        }, {\r\n            id: '1_year',\r\n            value: 12,\r\n            name: Messages('assets.tenants.filter.within_1_year')\r\n        }, {\r\n            id: 'custom',\r\n            name: Messages('assets.tenants.filter.custom_dates')\r\n        }];\r\n        this.$scope.selectedStatus = this.$scope.statuses[0];\r\n\r\n        this.$timeout(() => {\r\n            this.customDateElement = $('#spaces-filter-daterangepicker');\r\n            $(this.customDateElement).daterangepicker({\r\n                minDate: new Date(),\r\n                autoApply: true,\r\n                opens: 'left'\r\n            });\r\n            $(this.customDateElement).on('apply.daterangepicker', (ev, picker) => {\r\n                this.customExpirationFrom = picker.startDate;\r\n                this.customExpirationTo = picker.endDate;\r\n                this.$scope.customExpirationFrom = this.getParsedDate(picker.startDate);\r\n                this.$scope.customExpirationTo = this.getParsedDate(picker.endDate);\r\n                this.gridUpdate(1);\r\n            });\r\n        }, 1);\r\n\r\n        this.statsLabelsDisctionary = {\r\n            'in_place': 'totalAreaActiveContract',\r\n            '1_month': 'totalAreaExpiresInOneMonth',\r\n            '3_month': 'totalAreaExpiresInThreeMonth',\r\n            '6_month' : 'totalAreaExpiresInSixMonth',\r\n            '1_year': 'totalAreaExpiresInOneYear'\r\n        };\r\n\r\n        this.$scope.extraFilters = [];\r\n        this.$scope.towers = [];\r\n\r\n        this.AssetStatStackingPlan.getObjects({\r\n            asset: this.assetId\r\n        }, (result) => {\r\n            this.$scope.towers = result;\r\n        }, (err) => {\r\n\r\n        });\r\n\r\n        this.gridUpdate(1);\r\n    }\r\n\r\n    selectStatus(e, status) {\r\n        e.preventDefault();\r\n        this.$scope.selectedStatus = status;\r\n\r\n        if (status.id !== 'custom') {\r\n            this.gridUpdate(1);\r\n            this.$scope.customExpirationFrom = null;\r\n            this.$scope.customExpirationTo = null;\r\n            $(this.customDateElement).data('daterangepicker').setStartDate(new Date());\r\n            $(this.customDateElement).data('daterangepicker').setEndDate(new Date());\r\n        } else {\r\n            $(this.customDateElement).focus();\r\n        }\r\n    }\r\n\r\n    gridUpdate(page) {\r\n        this.$scope.update = true;\r\n        this.page = page;\r\n\r\n        let extraFilters = this.$scope.extraFilters,\r\n            status,\r\n            expirationFrom,\r\n            expirationTo,\r\n            pricePerMeterFrom = extraFilters.find((item) => {\r\n                return item.id === 'area_from';\r\n            }),\r\n            pricePerMeterTo = extraFilters.find((item) => {\r\n                return item.id === 'area_to';\r\n            }),\r\n            contractStartDate = extraFilters.find((item) => {\r\n                return item.id === 'lease_start';\r\n            }),\r\n            contractEndDate = extraFilters.find((item) => {\r\n                return item.id === 'lease_end';\r\n            }),\r\n            towers = [],\r\n            spaceTypes = [],\r\n            industries = [];\r\n\r\n        extraFilters.forEach((item) => {\r\n            if (item.id.indexOf('tower_') === 0) {\r\n                towers.push(item.value.id);\r\n            }\r\n            if (item.id.indexOf('office_type_') === 0) {\r\n                spaceTypes.push(item.value.id);\r\n            }\r\n            if (item.id.indexOf('industry_') === 0) {\r\n                industries.push(item.value.value);\r\n            }\r\n        });\r\n\r\n        switch (this.$scope.selectedStatus.id) {\r\n            case 'in_place':\r\n            case 'expired':\r\n                status = this.$scope.selectedStatus.value;\r\n                break;\r\n            case '1_month':\r\n            case '3_month':\r\n            case '6_month':\r\n            case '1_year':\r\n                expirationFrom = moment().format();\r\n                expirationTo = moment().add(this.$scope.selectedStatus.value, 'M').format();\r\n                break;\r\n            case 'custom':\r\n                expirationFrom = moment(this.customExpirationFrom).format();\r\n                expirationTo = moment(this.customExpirationTo).format();\r\n                break;\r\n        }\r\n\r\n        this.AssetStatTenants.query({\r\n            id: this.assetId,\r\n            st: status,\r\n            expgte: expirationFrom,\r\n            explte: expirationTo,\r\n            ipgte: pricePerMeterFrom && pricePerMeterFrom.value,\r\n            iplte: pricePerMeterTo && pricePerMeterTo.value,\r\n            stgte: contractStartDate && moment(contractStartDate.value).format(),\r\n            stlte: contractEndDate && moment(contractEndDate.value).format(),\r\n            twr: towers,\r\n            ot: spaceTypes,\r\n            ind: industries,\r\n            srt: this.$scope.sortType,\r\n            ord: this.$scope.sortDirection,\r\n            pg: page || 1,\r\n            ps: 20\r\n        }, (result) => {\r\n            this.$scope.update = false;\r\n\r\n            if (page === 1) {\r\n                this.$scope.greedData = result.items;\r\n                this.$scope.disable_infinite_scrolling = false;\r\n                this.updateStatusLabels(result.stats);\r\n            } else {\r\n                if (result.items.length === 0) {\r\n                    this.$scope.disable_infinite_scrolling = true;\r\n                } else {\r\n                    this.$scope.disable_infinite_scrolling = false;\r\n                    this.$scope.greedData = this.$scope.greedData.concat(result.items);\r\n                }\r\n            }\r\n\r\n            this.$timeout(() => {\r\n                this.$scope.load_more = false;\r\n            }, 1);\r\n        }, (error) => {\r\n            console.log(error);\r\n            this.$scope.update = false;\r\n            this.$scope.error = error;\r\n        });\r\n\r\n        this.$rootScope.$broadcast('right-sidebar:close');\r\n    }\r\n\r\n    loadMoreItems() {\r\n        if (!this.$scope.greedData.length) {\r\n            return;\r\n        }\r\n\r\n        this.$scope.load_more = true;\r\n        this.gridUpdate(++this.page);\r\n    }\r\n    sortGrid(sortType) {\r\n        this.$scope.sortType = sortType;\r\n        this.$scope.sortDirection = this.$scope.sortDirection === 1 ? 0 : 1;\r\n        this.gridUpdate(1);\r\n    }\r\n\r\n    showExtraFilters() {\r\n        let modal = this.$uibModal.open({\r\n            controller: FilterController,\r\n            template: FilterTemplate,\r\n            resolve: {\r\n                filter: {\r\n                    data: this.$scope.extraFilters\r\n                },\r\n                towers: {\r\n                    data: this.$scope.towers\r\n                }\r\n            },\r\n            size: 'lg'\r\n        });\r\n        modal.result.then((result) => {\r\n            this.$scope.extraFilters = result;\r\n            if (result.length) {\r\n                this.gridUpdate(1);\r\n            }\r\n        });\r\n    }\r\n\r\n    extraFilterRemoveItem(item) {\r\n        let id = item.id,\r\n            itemIndex = this.$scope.extraFilters.findIndex(function(item) {\r\n                return item.id === id;\r\n            });\r\n\r\n        this.$scope.extraFilters.splice(itemIndex, 1);\r\n        this.gridUpdate(1);\r\n    }\r\n\r\n    getParsedDate(date) {\r\n        return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\r\n    }\r\n\r\n    selectSpaceRow(row) {\r\n        let cl = 'filtered-spaces-row-selected';\r\n        $('#filtered-spaces-grid tr').each(function(i, item) {\r\n            if (item === row[0]) {\r\n                $(item).addClass(cl);\r\n            } else {\r\n                $(item).removeClass(cl);\r\n            }\r\n        });\r\n    }\r\n\r\n    getOfficeType(type) {\r\n        let officeType = Constants.spaceTypeStorePlain().find((item) => {\r\n            return item.value === type;\r\n        });\r\n        return officeType.text;\r\n    }\r\n\r\n    getUniqueSpacesTowers(spaces) {\r\n        let uniqueSpacesTowers = [];\r\n        spaces.forEach(function(item) {\r\n            if (uniqueSpacesTowers.indexOf(item.towerName) === -1) {\r\n                uniqueSpacesTowers.push(item.towerName);\r\n            }\r\n        });\r\n        return uniqueSpacesTowers;\r\n    }\r\n\r\n    showSpaceInfo(space) {\r\n        this.$rootScope.$broadcast('right-sidebar:open', {\r\n            type: 'loading'\r\n        });\r\n        this.AssetStatTenants.getSpaceInfo({\r\n            assetId: this.assetId,\r\n            assetObjectId: space.assetObjectId,\r\n            floorId: space.floorId,\r\n            id: space.id\r\n        }, (result) => {\r\n            let contract = result.contract;\r\n\r\n            result.spaceTypeString = this.getOfficeType(result.type);\r\n            result.spaceNumber = result.number;\r\n            result.spaceArea = result.rentableArea;\r\n            if (contract && contract.industryId != null){\r\n                Constants.clientsIndustryStore().byKey(contract.industryId).done(function(dataItem) {\r\n                    result.industryId = contract.industryId;\r\n                    result.industry = dataItem.display;\r\n                });\r\n            }\r\n            result.tenantName = contract && contract.tenantName;\r\n            result.leaseStartDate = contract && contract.startsAt;\r\n            result.leaseEndDate = contract && contract.endsAt;\r\n            if (result.leaseStartDate && result.leaseEndDate) {\r\n                result.expires = (moment(moment.utc()).diff(moment(result.leaseStartDate))/moment(result.leaseEndDate).diff(moment(result.leaseStartDate))).toFixed(2) * 100;\r\n            }\r\n            result.totalCosts = contract && contract.totalCosts;\r\n            result.inPlaceRent = contract && contract.inPlaceRent;\r\n            result.netRent = contract && contract.netRent;\r\n            result.additionalCosts = contract && contract.additionalCosts;\r\n            result.otherCosts = contract && contract.otherCosts;\r\n            result.vatCosts = contract && contract.vatCosts;\r\n\r\n            this.$rootScope.$broadcast('right-sidebar:open', {\r\n                type: 'spaceDescription',\r\n                data: result\r\n            });\r\n        });\r\n    }\r\n\r\n    showTenantInfo(event, tenant) {\r\n        if (event.target.nodeName === 'A') {\r\n            return;\r\n        }\r\n\r\n        let row = $(event.target).parent('tr');\r\n        if (this.selectedTenant === row[0]) {\r\n            this.$rootScope.$broadcast('right-sidebar:close');\r\n            return;\r\n        }\r\n        this.selectedTenant = row[0];\r\n\r\n        this.$rootScope.$broadcast('right-sidebar:open', {\r\n            type: 'tenantDescription',\r\n            data: tenant\r\n        });\r\n        this.selectSpaceRow(row);\r\n    }\r\n\r\n    updateStatusLabels(stats){\r\n        stats = stats || [];\r\n        this.$scope.statuses.forEach((element) => {\r\n            let value = Number(stats[this.statsLabelsDisctionary[element.id]]);\r\n            element.label = this.utils.formatBadgeValue(value);\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/tenants/asset-stat-tenants.controller.js","import Messages from '../../messages';\r\nimport Constants from '../../constants';\r\nimport moment from 'moment';\r\n\r\nexport default class SpacesFilterController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, filter, towers, $uibModalInstance, uibDateParser, $timeout) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.filter = filter.data;\r\n        this.towers = towers.data;\r\n        this.$uibModalInstance = $uibModalInstance;\r\n        this.uibDateParser = uibDateParser;\r\n        this.$timeout = $timeout;\r\n\r\n        this.init();\r\n        this.initForm();\r\n    }\r\n\r\n    init() {\r\n        let spaceTypes = Constants.spaceTypeStorePlain(),\r\n            piecesPerRow = Math.round(spaceTypes.length / 3),\r\n            typesRows = [];\r\n\r\n        for (let i = 0, l = 3; i < l; i++) {\r\n            typesRows[i] = [];\r\n            let j = 0;\r\n            for (let jl = piecesPerRow; j < jl; j++) {\r\n                let item = spaceTypes.shift();\r\n                if (item) {\r\n                    typesRows[i].push(item);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.$scope.typesRows = typesRows;\r\n    }\r\n\r\n    initForm() {\r\n        this.$scope.fromValueChanged = (from, to) => {\r\n            if (this.$scope[from] && this.$scope[to] && this.$scope[from] > this.$scope[to]) {\r\n                this.$scope[to] = this.$scope[from];\r\n            }\r\n        };\r\n        this.$scope.toValueChanged = (from, to) => {\r\n            if (this.$scope[from] && this.$scope[to] && this.$scope[to] < this.$scope[from]) {\r\n                this.$scope[from] = this.$scope[to];\r\n            }\r\n        };\r\n\r\n        // area\r\n        let area_from = this.filter.find((item) => {\r\n            return item.id === 'area_from';\r\n        });\r\n        this.$scope.area_from = area_from && area_from.value;\r\n        let area_to = this.filter.find((item) => {\r\n            return item.id === 'area_to';\r\n        });\r\n        this.$scope.area_to = area_to && area_to.value;\r\n\r\n        // towers\r\n        this.$scope.towers = {\r\n            available: this.towers,\r\n            selected: []\r\n        };\r\n\r\n        // industry\r\n        this.$scope.industry = {\r\n            available: Constants.clientsIndustryPlain(),\r\n            selected: []\r\n        };\r\n\r\n        // office type\r\n        this.$scope.office_types = [];\r\n        this.$scope.office_types_ids = [];\r\n        this.$scope.officeTypeToggleSelection = (type, valueString) => {\r\n            let id = this.$scope.office_types.findIndex((item) => {\r\n                return item.id === type;\r\n            });\r\n\r\n            if (id > -1) {\r\n                this.$scope.office_types.splice(id, 1);\r\n                this.$scope.office_types_ids.splice(id, 1);\r\n            } else {\r\n                this.$scope.office_types.push({\r\n                    id: type,\r\n                    name: valueString\r\n                });\r\n                this.$scope.office_types_ids.push(type);\r\n            }\r\n        };\r\n\r\n        this.leaseDateStart = null;\r\n        this.leaseDateEnd = null;\r\n\r\n        this.filter.forEach((item) => {\r\n            if (item.id.indexOf('tower_') === 0) {\r\n                this.$scope.towers.selected.push(item.value);\r\n            } else if (item.id.indexOf('industry_') === 0) {\r\n                this.$scope.industry.selected.push(item.value);\r\n            } else if (item.id.indexOf('office_type_') === 0) {\r\n                this.$scope.office_types.push(item.value);\r\n                this.$scope.office_types_ids.push(item.value.id);\r\n            } else if (item.id.indexOf('lease_start') === 0) {\r\n                this.leaseDateStart = item.value;\r\n            } else if (item.id.indexOf('lease_end') === 0) {\r\n                this.leaseDateEnd = item.value;\r\n            }\r\n        });\r\n\r\n        if (this.leaseDateStart && this.leaseDateEnd) {\r\n            this.$scope.lease_date = this.getParsedDate(this.leaseDateStart) + ' - ' + this.getParsedDate(this.leaseDateEnd);\r\n        }\r\n\r\n        this.$timeout(() => {\r\n            let pickerField = $('#tenants-filter-daterangepicker');\r\n            pickerField.daterangepicker({\r\n                startDate: this.leaseDateStart || new Date(),\r\n                endDate: this.leaseDateEnd || new Date(),\r\n                locale: {\r\n                    cancelLabel: Messages('assets.tenants.filter.datepicker.clear')\r\n                },\r\n                autoUpdateInput: false,\r\n                ranges: {\r\n                    [Messages('assets.tenants.filter.this_month')]: [moment().startOf('month'), moment().endOf('month')],\r\n                    [Messages('assets.tenants.filter.last_month')]: [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\r\n                    [Messages('assets.tenants.filter.this_year')]: [moment().startOf('year'), moment().endOf('year')],\r\n                    [Messages('assets.tenants.filter.last_year')]: [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')]\r\n                }\r\n            });\r\n            pickerField.on('apply.daterangepicker', (ev, picker) => {\r\n                this.leaseDateStart = picker.startDate;\r\n                this.leaseDateEnd = picker.endDate;\r\n                pickerField.val(this.getParsedDate(picker.startDate) + ' - ' + this.getParsedDate(picker.endDate));\r\n            });\r\n            pickerField.on('cancel.daterangepicker', (ev, picker) => {\r\n                pickerField.val('');\r\n                let d = new Date();\r\n                this.leaseDateStart = null;\r\n                this.leaseDateEnd = null;\r\n                pickerField.data('daterangepicker').setStartDate(d);\r\n                pickerField.data('daterangepicker').setEndDate(d);\r\n            });\r\n        }, 10);\r\n\r\n\r\n        this.$scope.cancel = () => {\r\n            this.$uibModalInstance.dismiss('cancel');\r\n        };\r\n\r\n        this.$scope.save = () => {\r\n            let result = [];\r\n            if (this.$scope.area_from) {\r\n                result.push({\r\n                    id: 'area_from',\r\n                    name: Messages('assets.tenants.filter.rentable_area_from'),\r\n                    value: this.$scope.area_from,\r\n                    text: `${this.$scope.area_from} ${Messages('square.meter')}`\r\n                });\r\n            }\r\n            if (this.$scope.area_to) {\r\n                result.push({\r\n                    id: 'area_to',\r\n                    name: Messages('assets.tenants.filter.rentable_area_to'),\r\n                    value: this.$scope.area_to,\r\n                    text: `${this.$scope.area_to} ${Messages('square.meter')}`\r\n                });\r\n            }\r\n            if (this.$scope.towers.selected.length) {\r\n                this.$scope.towers.selected.forEach(function(item) {\r\n                    result.push({\r\n                        id: `tower_${item.name}`,\r\n                        value: item,\r\n                        text: item.name\r\n                    });\r\n                });\r\n            }\r\n            if (this.$scope.industry.selected.length) {\r\n                this.$scope.industry.selected.forEach(function(item) {\r\n                    result.push({\r\n                        id: `industry_${item.value}`,\r\n                        value: item,\r\n                        text: item.text\r\n                    });\r\n                });\r\n            }\r\n            if (this.$scope.office_types.length) {\r\n                this.$scope.office_types.forEach((item) => {\r\n                    result.push({\r\n                        id: `office_type_${item.id}`,\r\n                        value: item,\r\n                        text: item.name\r\n                    });\r\n                });\r\n            }\r\n            if (this.leaseDateStart) {\r\n                result.push({\r\n                    id: `lease_start`,\r\n                    name: Messages('assets.tenants.filter.lease_start_date'),\r\n                    value: this.leaseDateStart,\r\n                    text: this.getParsedDate(this.leaseDateStart)\r\n                });\r\n            }\r\n            if (this.leaseDateEnd) {\r\n                result.push({\r\n                    id: `lease_end`,\r\n                    name: Messages('assets.tenants.filter.lease_end_date'),\r\n                    value: this.leaseDateEnd,\r\n                    text: this.getParsedDate(this.leaseDateEnd)\r\n                });\r\n            }\r\n            this.$uibModalInstance.close(result);\r\n        }\r\n    }\r\n\r\n    getParsedDate(date) {\r\n        return this.uibDateParser.filter(new Date(date), 'dd/MM/yyyy');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/tenants/tenants-filter-modal.controller.js","module.exports = \"<div class=\\\"inmodal hmodal-info\\\">\\r\\n    <div class=\\\"color-line\\\"></div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form role=\\\"form\\\" class=\\\"o-hidden\\\">\\r\\n            <div class=\\\"col-md-6 m-b-xl\\\">\\r\\n                <p>{{Messages('assets.tenants.filter.towers')}}</p>\\r\\n                <ui-select multiple ng-model=\\\"towers.selected\\\" close-on-select=\\\"false\\\" theme=\\\"bootstrap\\\">\\r\\n                    <ui-select-match placeholder=\\\"{{Messages('assets.tenants.filter.towers.placeholder')}}\\\">\\r\\n                        {{$item.name}}\\r\\n                    </ui-select-match>\\r\\n                    <ui-select-choices repeat=\\\"item in towers.available | filter: $select.search\\\">\\r\\n                        {{item.name}}\\r\\n                    </ui-select-choices>\\r\\n                </ui-select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 m-b-xl\\\">\\r\\n                <p>{{Messages('assets.tenants.filter.industry')}}</p>\\r\\n                <ui-select multiple ng-model=\\\"industry.selected\\\" close-on-select=\\\"false\\\" theme=\\\"bootstrap\\\">\\r\\n                    <ui-select-match placeholder=\\\"{{Messages('assets.tenants.filter.industry.placeholder')}}\\\">\\r\\n                        {{$item.text}}\\r\\n                    </ui-select-match>\\r\\n                    <ui-select-choices repeat=\\\"item in industry.available | filter: $select.search\\\">\\r\\n                        {{item.text}}\\r\\n                    </ui-select-choices>\\r\\n                </ui-select>\\r\\n            </div>\\r\\n            <div class=\\\"clear\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"m-b-xl\\\">\\r\\n                        <p>{{Messages('assets.tenants.filter.lease_date')}}</p>\\r\\n                        <div class='input-group date' id='datetimepicker1'>\\r\\n                            <input type='text' class=\\\"input-sm form-control\\\" ng-model=\\\"lease_date\\\" id=\\\"tenants-filter-daterangepicker\\\">\\r\\n                            <span class=\\\"input-group-addon\\\">\\r\\n                                <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"m-b-xl\\\">\\r\\n                        <p>{{Messages('assets.tenants.filter.rentable_area')}} [<span ng-bind-html=\\\"Messages('square.meter')\\\"/>]</p>\\r\\n                        <div class=\\\"input-group space-filter-range-inputs\\\">\\r\\n                            <input\\r\\n                                type=\\\"number\\\"\\r\\n                                class=\\\"input-sm form-control\\\"\\r\\n                                id=\\\"areaFrom\\\"\\r\\n                                ng-model=\\\"area_from\\\"\\r\\n                                ng-blur=\\\"fromValueChanged('area_from', 'area_to')\\\"\\r\\n                                placeholder=\\\"{{Messages('assets.tenants.filter.from')}}\\\"\\r\\n                            >\\r\\n                            <span class=\\\"input-group-addon\\\">-</span>\\r\\n                            <input\\r\\n                                type=\\\"number\\\"\\r\\n                                class=\\\"input-sm form-control\\\"\\r\\n                                ng-model=\\\"area_to\\\"\\r\\n                                ng-blur=\\\"toValueChanged('area_from', 'area_to')\\\"\\r\\n                                placeholder=\\\"{{Messages('assets.tenants.filter.to')}}\\\"\\r\\n                            >\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 m-b-xl\\\" ng-repeat=\\\"row in typesRows\\\">\\r\\n                <p ng-if=\\\"$index === 0\\\">{{Messages('assets.tenants.filter.type')}}</p>\\r\\n                <p ng-if=\\\"$index !== 0\\\">&nbsp;</p>\\r\\n                <div class=\\\"checkbox green\\\" ng-repeat=\\\"item in row\\\">\\r\\n                    <label>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            class=\\\"i-checks\\\"\\r\\n                            name=\\\"office_type\\\"\\r\\n                            ng-checked=\\\"office_types_ids.indexOf(item.value) !== -1\\\"\\r\\n                            ng-click=\\\"officeTypeToggleSelection(item.value, item.text)\\\"\\r\\n                        >\\r\\n                        <span class=\\\"icheckbox_square\\\"></span>\\r\\n                        <span class=\\\"label\\\">{{item.text}}</span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"save()\\\">\\r\\n            {{Messages('assets.tenants.filter.apply')}}\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">\\r\\n            {{Messages('assets.tenants.filter.cancel')}}\\r\\n        </button>\\r\\n       \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/asset-stats/tenants/tenants-filter-modal.template.html\n// module id = 803\n// module chunks = 0","export default class AssetStatStackingPlan {\r\n    /*@ngInject*/\r\n    constructor(ConfigurationService, $resource) {\r\n        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:asset/objects', {asset: '@asset', object: '@object'}, {\r\n            getObjects: {\r\n                method: 'GET',\r\n                isArray: true\r\n            },\r\n            getObjectData: {\r\n                method: 'GET',\r\n                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:asset/objects/:object/plan'\r\n            },\r\n        });\r\n    }\r\n\r\n    /*@ngInject*/\r\n    static activate(ConfigurationService, $resource) {\r\n        AssetStatStackingPlan.instance = new AssetStatStackingPlan(ConfigurationService, $resource);\r\n        return AssetStatStackingPlan.instance;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stat-stacking-plan.resource.js","'use strict';\r\nimport Constants from '../constants';\r\nimport Messages from '../messages';\r\nimport moment from 'moment';\r\n\r\nexport default class AssetStatStackingPlanController {\r\n    /*@ngInject*/\r\n    constructor($scope, $timeout, asset, assetId, AssetStatStackingPlan) {\r\n        this.$scope = $scope;\r\n        this.viewHeight = 0;\r\n        this.assetId = assetId;\r\n        this.asset = asset;\r\n        this.AssetStatStackingPlan = AssetStatStackingPlan;\r\n        this.$timeout = $timeout;\r\n\r\n        this.Messages = Messages;\r\n\r\n        this.onMouseDownOnScrollDriverEventHandler = this.onMouseDownOnScrollDriverEventHandler.bind(this);\r\n        this.onContentScrollEventHandler = this.onContentScrollEventHandler.bind(this);\r\n        this.onMouseMoveOnDocumentEventHandler = this.onMouseMoveOnDocumentEventHandler.bind(this);\r\n        this.onMouseUpOnDocumentEventHandler = this.onMouseUpOnDocumentEventHandler.bind(this);\r\n        this.breadcrumbStates = [{ path: 'asset-stats', title: this.Messages('assets.title') }, { title: this.Messages('stacking-plan.title') }];\r\n\r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        this.$scope.isTabsLoadingState = true;\r\n        this.$scope.noStackingPlan = false;\r\n        this.AssetStatStackingPlan.getObjects({\r\n            asset: this.assetId\r\n        }, (result) => {\r\n            this.$scope.tabs = result;\r\n            this.$scope.isTabsLoadingState = false;\r\n            if (result.length) {\r\n                this.$scope.isLoadingState = true;\r\n                this.getFloorData(result[0]);\r\n            } else {\r\n                this.$scope.noStackingPlan = true;\r\n            }\r\n        }, (err) => {\r\n            this.$scope.isTabsLoadingState = false;\r\n            this.$scope.noStackingPlan = true;\r\n            this.$scope.noStackingPlanMessage = err.data.message;\r\n        });\r\n\r\n        this.$scope.$on(\"$destroy\", () => {\r\n            this.clearScrollHandlers();\r\n        });\r\n\r\n        this.legendYears = this.generateYearsList();\r\n    }\r\n\r\n    setSizes() {\r\n        this.scrollDriverBlockerEl = $('#plan-scroll-blocker');\r\n        this.scrollDriverWrap = $('#plan-scroll-wrap');\r\n        this.contentWrap = $('#plan-wrap');\r\n\r\n        this.scrollDriverBlockerHeight = this.scrollDriverBlockerEl.height();\r\n        this.scrollDriverHeight = $('#plan-scroll-cont').outerHeight();\r\n        this.contentHeight = $('#plan-cont').height();\r\n\r\n        let wrapperOffset = $('#plan-page-wrap').offset(),\r\n            height = $(window).height() - wrapperOffset.top - 260,\r\n            scrollDriverTargetHeight;\r\n\r\n        this.viewHeight = height;\r\n\r\n        this.contentWrap.height(height);\r\n\r\n        if (this.scrollDriverHeight > height) {\r\n            scrollDriverTargetHeight = height;\r\n        } else if (this.scrollDriverHeight < this.scrollDriverBlockerHeight) {\r\n            scrollDriverTargetHeight = this.scrollDriverBlockerHeight;\r\n        } else {\r\n            scrollDriverTargetHeight = this.scrollDriverHeight;\r\n        }\r\n        this.scrollDriverWrap.height(scrollDriverTargetHeight);\r\n        this.scrollDriverWrapHeight = scrollDriverTargetHeight;\r\n\r\n        this.initScrollHandlers();\r\n    }\r\n\r\n    initScrollHandlers() {\r\n        this.scrollDriverWrap.on('mousewheel', this.onMouseWheelOnScrollDriverEventHandler);\r\n\r\n        this.contentWrap.hover(() => {\r\n            this.contentWrap.on('scroll', this.onContentScrollEventHandler);\r\n        }, () => {\r\n            this.contentWrap.off('scroll', this.onContentScrollEventHandler);\r\n        });\r\n\r\n        this.blockerInitialTop = null;\r\n        this.blockerCurPosition = null;\r\n\r\n        this.scrollDriverBlockerEl.on('mousedown', this.onMouseDownOnScrollDriverEventHandler);\r\n        $(document.body).on('mousemove', this.onMouseMoveOnDocumentEventHandler);\r\n        $(document.body).on('mouseup', this.onMouseUpOnDocumentEventHandler);\r\n    }\r\n\r\n    clearScrollHandlers() {\r\n        if (!this.scrollDriverWrap) {\r\n            return;\r\n        }\r\n\r\n        this.scrollDriverWrap.off('mousewheel', this.onMouseWheelOnScrollDriverEventHandler);\r\n        this.scrollDriverBlockerEl.off('mousedown', this.onMouseDownOnScrollDriverEventHandler);\r\n        $(document.body).off('mousemove', this.onMouseMoveOnDocumentEventHandler);\r\n        $(document.body).off('mouseup', this.onMouseUpOnDocumentEventHandler);\r\n    }\r\n\r\n    onMouseWheelOnScrollDriverEventHandler(e) {\r\n        e.originalEvent.preventDefault();\r\n    }\r\n\r\n    onMouseDownOnScrollDriverEventHandler(e) {\r\n        e = e.originalEvent;\r\n\r\n        this.blockerInitialTop = e.pageY;\r\n        this.blockerCurPosition = parseInt(this.scrollDriverBlockerEl.css('top'), 10);\r\n    }\r\n\r\n    onContentScrollEventHandler(e) {\r\n        let curScroll = e.target.scrollTop,\r\n            scrollInPercents = curScroll / ((this.contentHeight - this.viewHeight) / 100),\r\n            targetPositionForBlocker;\r\n\r\n        if (scrollInPercents > 100) {\r\n            scrollInPercents = 100;\r\n        }\r\n\r\n        if (this.scrollDriverHeight > this.viewHeight) {\r\n            this.scrollDriverWrap[0].scrollTop = (this.scrollDriverHeight - this.viewHeight) / 100 * scrollInPercents;\r\n        }\r\n\r\n        targetPositionForBlocker = (this.scrollDriverWrapHeight - this.scrollDriverBlockerHeight) / 100 * scrollInPercents;\r\n        this.scrollDriverBlockerEl.css({\r\n            top: targetPositionForBlocker + 'px'\r\n        });\r\n    }\r\n\r\n    onMouseMoveOnDocumentEventHandler(e) {\r\n        if (this.blockerInitialTop === null) {\r\n            return;\r\n        }\r\n\r\n        e = e.originalEvent;\r\n\r\n        let position = this.blockerCurPosition - (this.blockerInitialTop - e.pageY);\r\n\r\n        if (position < 0) {\r\n            position = 0;\r\n        } else if (position + this.scrollDriverBlockerHeight > this.scrollDriverWrapHeight) {\r\n            position = this.scrollDriverWrapHeight - this.scrollDriverBlockerHeight;\r\n        }\r\n\r\n        this.scrollDriverBlockerEl.css({\r\n            top: position + 'px'\r\n        });\r\n\r\n        let positionInPercents = position / ((this.scrollDriverWrapHeight - this.scrollDriverBlockerHeight) / 100);\r\n        this.contentWrap[0].scrollTop = (this.contentHeight - this.viewHeight) / 100 * positionInPercents;\r\n        this.scrollDriverWrap[0].scrollTop = (this.scrollDriverHeight - this.viewHeight) / 100 * positionInPercents;\r\n    }\r\n\r\n    onMouseUpOnDocumentEventHandler() {\r\n        this.blockerInitialTop = null;\r\n    }\r\n\r\n    showSpaceDescription(data) {\r\n        let self = this;\r\n\r\n        self.$scope.description = data;\r\n        self.$scope.details = null;\r\n\r\n        self.$timeout(() => {\r\n            self.$scope.details = data;\r\n\r\n            if (data.leaseStartDate && data.leaseEndDate) {\r\n                self.$scope.details.expires = (moment(moment.utc()).diff(moment(data.leaseStartDate))/moment(data.leaseEndDate).diff(moment(data.leaseStartDate))).toFixed(2) * 100;\r\n            }\r\n            else {\r\n                self.$scope.details.expires = null;\r\n            }\r\n\r\n            // additional data\r\n            Constants.spaceTypeStore()\r\n                .byKey(this.$scope.details.spaceType)\r\n                .done(function(dataItem) {\r\n                    self.$scope.details.spaceTypeString = dataItem.display;\r\n                });\r\n        }, 51);\r\n    }\r\n\r\n    hideSpaceDescription() {\r\n        let self = this;\r\n\r\n        self.$scope.description = null;\r\n        self.$scope.details = null;\r\n    }\r\n\r\n    tabSelected(e, data) {\r\n        e.preventDefault();\r\n        this.$scope.description = null;\r\n        this.$scope.isLoadingState = true;\r\n        this.clearScrollHandlers();\r\n        this.getFloorData(data);\r\n    }\r\n\r\n    getMaxOfFloorArea(floors) {\r\n        let maxFloorArea = 0;\r\n\r\n        floors.forEach(function(floor) {\r\n            if (floor.totalFloorArea > maxFloorArea) {\r\n                maxFloorArea = floor.totalFloorArea;\r\n            }\r\n        });\r\n\r\n        return maxFloorArea;\r\n    }\r\n\r\n    getFloorData(object) {\r\n        this.AssetStatStackingPlan.getObjectData({\r\n            asset: this.assetId,\r\n            object: object.id\r\n        }, (result) => {\r\n            let maxFloorArea = this.getMaxOfFloorArea(result.floors);\r\n            result.floors.forEach((floor) => {\r\n                let floorWidth;\r\n\r\n                if (this.$scope.view === 'actual') {\r\n                    floorWidth = floor.totalFloorArea / (maxFloorArea / 100) + '%';\r\n                } else {\r\n                    floorWidth = '100%';\r\n                }\r\n                floor.width = floorWidth;\r\n\r\n                for (let i = 0, l = floor.spaces.length; i < l; i++) {\r\n                    let space = floor.spaces[i],\r\n                        spaceInPercents;\r\n                    //filling industry name\r\n                    if (space.industryId != null){\r\n                        Constants.clientsIndustryStore().byKey(space.industryId).done(function(dataItem) {\r\n                                space.industry = dataItem.display;\r\n                        })\r\n                    }\r\n                    //end filling industry name\r\n                    space.leaseEndYearIndex = this.getLeaseEndYearIndex(space.leaseEndDate);\r\n                    \r\n                    // let spaceWithTheSameTenantId = floor.spaces.find(function(item) {\r\n                    //     return item.tenantId === space.tenantId;\r\n                    // });\r\n\r\n                    // if (spaceWithTheSameTenantId && spaceWithTheSameTenantId.spaceId !== space.spaceId) {\r\n                    //     spaceWithTheSameTenantId.spaceArea += space.spaceArea;\r\n\r\n                    //     spaceInPercents = spaceWithTheSameTenantId.spaceArea / (floor.totalFloorArea / 100);\r\n\r\n                    //     if (!(spaceWithTheSameTenantId.spaceId instanceof Array)) {\r\n                    //         spaceWithTheSameTenantId.spaceId = [spaceWithTheSameTenantId.spaceId];\r\n                    //     }\r\n                    //     spaceWithTheSameTenantId.spaceId.push(space.spaceId);\r\n\r\n                    //     spaceWithTheSameTenantId.weight = spaceInPercents;\r\n\r\n                    //     floor.spaces.splice(i, 1);\r\n                    //     i--; l--;\r\n                    // } else {\r\n                        spaceInPercents = space.spaceArea / (floor.totalFloorArea / 100);\r\n                        space.weight = spaceInPercents;\r\n                    //}\r\n                }\r\n                floor.spaces.sort(function(a, b) {\r\n                    if (!a.tenantId && b.tenantId) {\r\n                        return 1;\r\n                    } else if (a.tenantId && !b.tenantId) {\r\n                        return -1;\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n                });\r\n            });\r\n            result.floors.sort(function(a, b) {\r\n                if (a.floorOrder > b.floorOrder) {\r\n                    return -1;\r\n                } else if (a.floorOrder < b.floorOrder) {\r\n                    return 1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n\r\n            this.$scope.floors = result.floors;\r\n            this.$scope.isLoadingState = false;\r\n            this.$timeout(() => {\r\n                this.setSizes();\r\n            }, 201);\r\n        });\r\n    }\r\n\r\n    viewChanged(e) {\r\n        e.originalEvent.preventDefault();\r\n\r\n        let target = e.originalEvent.target,\r\n            activeCl = 'active',\r\n            viewType = target.getAttribute('data-type');\r\n\r\n        $('.plan-tabs .view-tab').each(function(key, item) {\r\n            let type = item.getAttribute('data-type');\r\n            if (type !== viewType) {\r\n                $(item).removeClass(activeCl);\r\n            } else {\r\n                $(item).addClass(activeCl);\r\n            }\r\n        });\r\n\r\n        let maxFloorArea = this.getMaxOfFloorArea(this.$scope.floors);\r\n        this.$scope.floors.forEach((floor) => {\r\n            this.$scope.view = viewType;\r\n            let floorWidth;\r\n            if (viewType === 'actual') {\r\n                floorWidth = floor.totalFloorArea / (maxFloorArea / 100) + '%';\r\n            } else {\r\n                floorWidth = '100%';\r\n            }\r\n            floor.width = floorWidth;\r\n        });\r\n\r\n        this.clearScrollHandlers();\r\n        this.$timeout(() => {\r\n            this.setSizes();\r\n        }, 350);\r\n    }\r\n\r\n    generateYearsList(){\r\n        var currentYear = new Date().getFullYear();\r\n\r\n        var result =[];\r\n\r\n        for (var i=0; i<5; i++){\r\n            result.push({title :  currentYear + i, index: i})\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getLeaseEndYearIndex(leaseEndDate){\r\n        if (leaseEndDate == null) return null;\r\n\r\n        var date = new Date(leaseEndDate);\r\n        var leaseEndYear = date.getFullYear();\r\n\r\n        var currentYear = new Date().getFullYear();\r\n\r\n        var result = leaseEndYear - currentYear;\r\n\r\n        if (result > 4) result = 4;\r\n\r\n        return result;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stat-stacking-plan.controller.js","export default class AssetStats {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/assets',\r\n            isArray: true\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    AssetStats.instance = new AssetStats(ConfigurationService, $resource);\r\n    return AssetStats.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stats.resource.js","export default class AssetStatSpaces {\r\n    /*@ngInject*/\r\n    constructor(ConfigurationService, $resource) {\r\n        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id/spaces', {id: '@id'}, {\r\n            query: {\r\n                method: 'GET',\r\n                //url: ConfigurationService.getApiBaseUrl() + 'api/assets',\r\n                isArray: true\r\n            },\r\n            search: {\r\n                method: 'GET',\r\n                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:id/spaces/search'\r\n            },\r\n        });\r\n    }\r\n\r\n    /*@ngInject*/\r\n    static activate(ConfigurationService, $resource) {\r\n        AssetStatSpaces.instance = new AssetStatSpaces(ConfigurationService, $resource);\r\n        return AssetStatSpaces.instance;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/asset-stat-spaces.resource.js","export default class AssetStatTenants {\r\n    /*@ngInject*/\r\n    constructor(ConfigurationService, $resource) {\r\n        return $resource(ConfigurationService.getApiBaseUrl() + 'api/assets/:id/contracts/search', {id: '@id'}, {\r\n            query: {\r\n                method: 'GET'\r\n            },\r\n            getSpaceInfo: {\r\n                method: 'GET',\r\n                url: ConfigurationService.getApiBaseUrl() + 'api/assets/:assetId/objects/:assetObjectId/floors/:floorId/spaces/:id/full'\r\n            }\r\n        });\r\n    }\r\n\r\n    /*@ngInject*/\r\n    static activate(ConfigurationService, $resource) {\r\n        AssetStatTenants.instance = new AssetStatTenants(ConfigurationService, $resource);\r\n        return AssetStatTenants.instance;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/asset-stats/tenants/asset-stat-tenants.resource.js","import ClientController from './client.controller';\r\nimport ClientsController from './clients.controller';\r\nimport 'devextreme/integration/angular';\r\nimport Client from './client.resource';\r\nimport RepresentativesComponent from './representatives/representatives.component';\r\nimport Representative from './representatives/representatives.resource';\r\n\r\nvar module = angular.module('tower360.clients', ['dx'])\r\n  .controller('ClientController', ClientController)\r\n  .controller('ClientsController', ClientsController)\r\n  .factory('Client', Client.activate)\r\n  .component('representatives', RepresentativesComponent)\r\n  .factory('Representative', Representative.activate);\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/clients.js","import ClientEditModalController from './client-edit-modal.controller';\r\nimport ClientEditModalTemplate from './client-edit-modal.template.html';\r\nimport Constants from '../constants';\r\n\r\nexport default class ClientController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, Client, clientObject, NotificationService, $filter, $uibModal, NgMap, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Client = Client;\r\n        this.clientObject = clientObject;\r\n        this.notificationService = NotificationService;\r\n        this.$filter = $filter;\r\n        this.$uibModal = $uibModal;\r\n        this.NgMap = NgMap;\r\n        this.utils = UtilsService;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n        this.clientObject.address = this.utils.generateAddress(this.clientObject);\r\n        if (this.clientObject.industryId != null){\r\n            Constants.clientsIndustryStore().byKey(this.clientObject.industryId).done(function(dataItem) {\r\n                    self.clientObject.industry = dataItem.display;\r\n             })\r\n        }\r\n\r\n        this.NgMap.getMap().then(map => {\r\n            this.map = map;\r\n            if (!this.map.marker) \r\n                this.map.marker = new google.maps.Marker();\r\n\r\n            this.map.marker.setMap(null);\r\n\r\n            let stylez = [{\r\n                featureType: 'all',\r\n                elementType: 'all',\r\n                stylers: [{\r\n                    saturation: -100  // made the map as grayscale\r\n                }]\r\n            }];\r\n            let mapType = new google.maps.StyledMapType(stylez, {\r\n                name: 'Grayscale'\r\n            });\r\n\r\n            map.mapTypes.set('tehgrayz', mapType);\r\n            map.setMapTypeId('tehgrayz');\r\n\r\n            this.setMapCoordinates();\r\n        });\r\n    }\r\n\r\n    editClient() {\r\n        let modal = this.$uibModal.open({\r\n            controller: ClientEditModalController,\r\n            template: ClientEditModalTemplate,\r\n            resolve: {\r\n                clientId: this.clientObject.id\r\n            }\r\n        });\r\n        modal.result.then((result) => {\r\n            let newAddress = this.utils.generateAddress(result),\r\n                newCountry = result.countryId,\r\n                needToUpdateMap;\r\n\r\n            if (newAddress !== this.clientObject.address || newCountry !== this.clientObject.countryId) {\r\n                needToUpdateMap = true;\r\n            }\r\n\r\n            jQuery.extend(this.clientObject, result);\r\n            this.clientObject.address = newAddress;\r\n\r\n            if (needToUpdateMap) {\r\n                this.setMapCoordinates();\r\n            }\r\n        });\r\n    }\r\n\r\n    setMapCoordinates() {\r\n        this.map.marker.setMap(null);\r\n\r\n        if (this.clientObject.address) {\r\n            let geocoder = new google.maps.Geocoder(),\r\n                countries = Constants.countryStorePlain(),\r\n                country = this.$filter('filter')(countries, {\r\n                    value: this.clientObject.countryId\r\n                });\r\n\r\n            if (country && country[0]) {\r\n                country = country[0].text + ', ';\r\n            } else {\r\n                country = '';\r\n            }\r\n\r\n            geocoder.geocode({\r\n                address: country + this.clientObject.address\r\n            }, (result, status) => {\r\n                if (status === 'OK') {\r\n                    this.map.setCenter(result[0].geometry.location);\r\n\r\n                    this.map.marker.setPosition(result[0].geometry.location);\r\n                    this.map.marker.setMap(this.map)\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/client.controller.js","import ArrayStore from 'devextreme/data/array_store';\r\nimport ClientEditModalController from './client-edit-modal.controller';\r\nimport ClientEditModalTemplate from './client-edit-modal.template.html';\r\nimport Messages from '../messages';\r\nimport Constants from '../constants';\r\n\r\nexport default class ClientsController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, Client, StoreAdapter, currentUser, NotificationService, DialogService, sweetAlert, $uibModal, UtilsService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Client = Client;\r\n        this.storeAdapter = StoreAdapter;\r\n        this.currentUser = currentUser;\r\n        this.notificationService = NotificationService;\r\n        this.dialogService = DialogService;\r\n        this.sweetAlert = sweetAlert;\r\n        this.$uibModal = $uibModal;\r\n        this.utils = UtilsService;\r\n\r\n        this.initGrid();\r\n    }\r\n\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        };\r\n\r\n        self.stateStore = Constants.clientsStateStore();\r\n        self.countryStore = Constants.countryStore();\r\n\r\n        self.clients = [];\r\n\r\n        self.Client.query(\r\n            {},\r\n            (result) => {\r\n                self.clients = result;\r\n\r\n                self.clients.forEach(item => {\r\n                    item.address = self.utils.generateAddress(item);\r\n                });\r\n\r\n                self.store = new ArrayStore({\r\n                    data: self.clients,\r\n                    key: \"id\",\r\n                    modified: function () {\r\n                        // 'modified' event handler\r\n                    },\r\n                    errorHandler: self.errorHandler.requestFailed\r\n                });\r\n\r\n                self.gridDataSource = { store: self.store };\r\n\r\n                self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n                    dataSource: self.gridDataSource,\r\n                    columns: [{\r\n                        dataField: \"id\",\r\n                        visible: false\r\n                    }, {\r\n                        dataField: \"name\",\r\n                        caption: Messages('clients.name'),\r\n                        sortOrder: \"asc\",\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains',\r\n                        cellTemplate: function(cellElement, cellInfo) {\r\n                            let element = $('<a>', {\r\n                                'href': '/clients/' + cellInfo.data.id,\r\n                                'ui-sref': 'client'\r\n                            });\r\n\r\n                            element.text(cellInfo.displayValue)\r\n                                   .appendTo(cellElement);\r\n                        }\r\n                    }, {\r\n                        dataField: \"address\",\r\n                        caption: Messages('clients.address'),\r\n                        filterOperations: ['contains', 'startswith', '='],\r\n                        selectedFilterOperation: 'contains',\r\n                    }, {\r\n                        dataField: \"countryId\",\r\n                        caption: Messages('clients.country'),\r\n                        lookup: {\r\n                            dataSource: self.countryStore,\r\n                            displayExpr: 'display',\r\n                            valueExpr: 'value'\r\n                        },\r\n                    }, {\r\n                        dataField: \"state\",\r\n                        caption: Messages('clients.state'),\r\n                        lookup: {\r\n                            dataSource: self.stateStore,\r\n                            displayExpr: 'display',\r\n                            valueExpr: 'value'\r\n                        },\r\n                        width: 100\r\n                    },\r\n                   {\r\n                        caption: Messages('actions'),\r\n                        width: 90,\r\n                        alignment: 'right',\r\n                        cellTemplate: function (container, options) {\r\n                            container.addClass(\"actions-cell\");\r\n\r\n                            $(\"<div />\").dxButton({\r\n                                type: 'custom',\r\n                                template: `<div class=\"fa fa-pencil\" title=\"${Messages('clients.edit')}\"></div>`,\r\n                                onClick: function (data) {\r\n                                    data.jQueryEvent.stopPropagation();\r\n\r\n                                    let modal = self.$uibModal.open({\r\n                                        controller: ClientEditModalController,\r\n                                        template: ClientEditModalTemplate,\r\n                                        resolve: {\r\n                                            clientId: options.data.id\r\n                                        }\r\n                                    });\r\n                                    modal.result.then((result) => {\r\n                                        result.address = self.utils.generateAddress(result);\r\n                                        jQuery.extend(options.data, result);\r\n                                    });\r\n                                }\r\n                            }).appendTo(container);\r\n\r\n                            // let isArchived = options.data.state === 2;\r\n                            // $(\"<div />\").dxButton({\r\n                            //     type: 'custom',\r\n                            //     template: `<div class=\"fa ${isArchived ? 'fa-undo' : 'fa-trash-o'}\" title=\"${isArchived ? Messages('clients.activate') : Messages('clients.archive')}\"></div>`,\r\n                            //     disabled: options.data.state === 2,\r\n                            //     onClick: function (data) {\r\n                            //         if (isArchived) {\r\n                            //             self.activateClient(options.data);\r\n                            //         } else {\r\n                            //             self.archiveClient(options.data);\r\n                            //         }\r\n                            //     }\r\n                            // }).appendTo(container);\r\n                        }\r\n                    }],\r\n                    selection: {\r\n                        mode: 'single' // 'multiple'\r\n                    },\r\n                    onSelectionChanged: function(selectedItems){\r\n                        self.selectedClient = selectedItems.selectedRowsData[0];\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    // archiveClient(client) {\r\n    //     client = Object.assign({}, client);\r\n    //     let self = this;\r\n    //     client.state = 2;\r\n    //     this.sweetAlert.swal(\r\n    //         {\r\n    //             title: Messages('clients.archive.title'),\r\n    //             type: 'warning',\r\n    //             showCancelButton: true,\r\n    //             confirmButtonColor: '#DD6B55',\r\n    //             confirmButtonText: Messages('clients.archive.confirmButton'),\r\n    //         },\r\n    //         function (isConfirm) {\r\n    //             if (isConfirm) {\r\n    //                 self.Client.update({id: client.id}, client,\r\n    //                     function(result) {\r\n    //                         self.store.remove(client.id);\r\n    //                         self.store.insert(result);\r\n    //\r\n    //                         $('#gridContainer').dxDataGrid('instance').refresh();\r\n    //                         self.notificationService.success(Messages('clients.message.archived'));\r\n    //                     },\r\n    //                     function(result) {\r\n    //                         self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n    //                     });\r\n    //             }\r\n    //         }\r\n    //     );\r\n    // }\r\n    //\r\n    // activateClient(client) {\r\n    //     client = Object.assign({}, client);\r\n    //\r\n    //     let self = this;\r\n    //     this.sweetAlert.swal(\r\n    //         {\r\n    //             title: Messages('clients.activate.title'),\r\n    //             type: 'warning',\r\n    //             showCancelButton: true,\r\n    //             confirmButtonColor: '#DD6B55',\r\n    //             confirmButtonText: Messages('clients.activate.confirmButton'),\r\n    //         },\r\n    //         function (isConfirm) {\r\n    //             if (isConfirm) {\r\n    //                 clients.state = 1;\r\n    //                 self.Client.update({ id: client.id }, client,\r\n    //                     function(result) {\r\n    //                         self.store.remove(client.id);\r\n    //                         self.store.insert(result);\r\n    //\r\n    //                         $('#gridContainer').dxDataGrid('instance').refresh();\r\n    //                         self.notificationService.success(Messages('clients.message.archived'));\r\n    //                     },\r\n    //                     function(result) {\r\n    //                         self.notificationService.error(result.data.message ? result.data.message : result.data);\r\n    //                     });\r\n    //             }\r\n    //         }\r\n    //     );\r\n    // }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/clients.controller.js","export default class Client {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/clients/:id', { id: '@id' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/clients',\r\n            isArray: true\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        create: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/clients',\r\n        },\r\n        getFull: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/clients/:id/full',\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Client.instance = new Client(ConfigurationService, $resource);\r\n    return Client.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/client.resource.js","import Controller from './representatives.controller';\r\nimport Template from './representatives.template.html';\r\nimport Messages from '../../messages';\r\n\r\nlet RepresentativesComponent = {\r\n    bindings: {\r\n        client: '='\r\n    },\r\n    controller: Controller,\r\n    template: Template,\r\n    Messages: Messages,\r\n}\r\n\r\nexport default RepresentativesComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/representatives/representatives.component.js","import Messages from '../../messages';\r\nimport Constants from '../../constants';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\n\r\nexport default class RepresentativesController {\r\n    /*@ngInject*/\r\n    constructor($scope, NotificationService, UtilsService, Representative, DialogService) {\r\n        // from component\r\n        this.client = this.client;\r\n\r\n        // injected\r\n        this.$scope = $scope;\r\n        this.NotificationService = NotificationService;\r\n        this.utils = UtilsService;\r\n        this.messages = Messages;\r\n        this.dialogService = DialogService;\r\n        this.Representative = Representative;\r\n        // initialization\r\n        this.init();\r\n        this.initGrid();\r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        self.client.representatives.forEach(function (rep) {\r\n            if(!rep.uniqueId){\r\n                rep.uniqueId = self.utils.generateGuid();\r\n            }\r\n        })\r\n    }\r\n\r\n    initGrid() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                self.NotificationService.error(response.data);\r\n            }\r\n        }\r\n\r\n        self.store = new ArrayStore({\r\n            data: self.client.representatives,\r\n            key: \"uniqueId\",\r\n            errorHandler: self.errorHandler.requestFailed\r\n        });\r\n\r\n        self.gridDataSource = { store: self.store };\r\n\r\n        self.gridSettings = $.extend(Constants.defaultGridSettings(), {\r\n            dataSource: self.gridDataSource,\r\n            onInitialized: function (e) {\r\n                self.gridInstance = e.component;\r\n            },\r\n            filterRow: { visible: false },\r\n            groupPanel: { visible: false },\r\n            editing: {\r\n                allowUpdate: true,\r\n                allowDelete: true\r\n            },\r\n            columns: [\r\n                {\r\n                    dataField: 'name',\r\n                    caption: Messages('clients.representatives.name'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    sortOrder: 'asc',\r\n                    alignment: 'left',\r\n                    validationRules: [\r\n                        { type: 'required', message: Messages('validation.required') },\r\n                        { type: 'stringLength', max: 255 },\r\n                    ],\r\n                },\r\n                {\r\n                    dataField: 'email',\r\n                    caption: Messages('clients.representatives.email'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    alignment: 'left',\r\n                    validationRules: [\r\n                        { type: 'email' },\r\n                    ],\r\n                },\r\n                {\r\n                    dataField: 'phone',\r\n                    caption: Messages('clients.representatives.phone'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    validationRules: [\r\n                        {\r\n                            type: \"pattern\",\r\n                            message: Messages('validation.phone'),\r\n                            pattern: Constants.phonePattern() \r\n                        }\r\n                    ],\r\n                },\r\n                {\r\n                    dataField: 'position',\r\n                    caption: Messages('clients.representatives.position'),\r\n                    filterOperations: ['contains', 'startswith', '='],\r\n                    selectedFilterOperation: 'contains',\r\n                    alignment: 'right',\r\n                    validationRules: [\r\n                        { type: 'stringLength', max: 100 },\r\n                    ],\r\n                },\r\n                {\r\n                    dataField: \"id\",\r\n                    caption: Messages('actions'),\r\n                    width: 100,\r\n                    alignment: 'right',\r\n                    cellTemplate: function (container, options) {\r\n                        container.addClass(\"actions-cell\");\r\n\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-pencil\"></div>',\r\n                            onClick: function (e) {\r\n                                self.gridInstance.editRow(options.rowIndex);\r\n                            }\r\n                        }).appendTo(container);\r\n\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-trash-o\"></div>',\r\n                            onClick: function (e) {\r\n                                self.gridInstance.deleteRow(options.rowIndex);\r\n                            }\r\n                        }).appendTo(container);\r\n                    },\r\n                    editCellTemplate: function (container, options) {\r\n                        container.addClass(\"actions-cell\");\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-floppy-o\"></div>',\r\n                            onClick: function (e) {\r\n                                 self.gridInstance.saveEditData(options.rowIndex);\r\n                            }\r\n                        }).appendTo(container);\r\n                        $(\"<div />\").dxButton({\r\n                            type: 'custom',\r\n                            template: '<div class=\"fa fa-trash-o\"></div>',\r\n                            onClick: function (e) {\r\n                                self.gridInstance.cancelEditData(options.rowIndex);\r\n                            }\r\n                        }).appendTo(container);\r\n                    }\r\n                }\r\n            ],\r\n            onRowInserting: function(e){\r\n                self.create(e);\r\n            },\r\n            onRowUpdating: function(e){\r\n                self.update(e);\r\n            },\r\n            onRowRemoving: function(e) {\r\n                self.delete(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    addRow() {\r\n        this.gridInstance.addRow();\r\n    }\r\n\r\n    create(e){\r\n        let self = this;\r\n\r\n        var d = $.Deferred();\r\n        self.Representative.create({ clientId: self.client.id }, e.data,\r\n                (result) => {\r\n                    self.NotificationService.success(Messages('clients.representatives.message.created'));\r\n                    e.data.id = result.id;\r\n                    d.resolve();\r\n                },\r\n                (error) => {\r\n                    self.NotificationService.error(error.data);\r\n                    d.resolve(true);\r\n                }\r\n            );\r\n\r\n            e.cancel = d.promise();\r\n    }\r\n\r\n    update(e) {\r\n        var data = e.oldData;\r\n        if (e.newData.name != null) data.name == e.newData.name;\r\n        if (e.newData.phone != null) data.phone == e.newData.phone;\r\n        if (e.newData.position != null) data.position == e.newData.position;\r\n        if (e.newData.email != null) data.email == e.newData.email;\r\n\r\n        let self = this;\r\n\r\n        var d = $.Deferred();\r\n        self.Representative.update({ clientId: self.client.id, id:data.id }, data,\r\n                (result) => {\r\n                    self.NotificationService.success(Messages('clients.representatives.message.updated'));\r\n                    d.resolve();\r\n                },\r\n                (error) => {\r\n                    self.NotificationService.error(error.data);\r\n                    d.resolve(true);\r\n                }\r\n            );\r\n\r\n            e.cancel = d.promise();\r\n    }\r\n\r\n    delete(e){\r\n        let self = this;\r\n        var d = $.Deferred();\r\n        self.Representative.delete({ clientId: self.client.id, id:e.data.id }, \r\n                (result) => {\r\n                    self.NotificationService.success(Messages('clients.representatives.message.deleted'));\r\n                    d.resolve();\r\n                },\r\n                (error) => {\r\n                    self.NotificationService.error(error.data);\r\n                    d.resolve(true);\r\n                }\r\n            );\r\n\r\n            e.cancel = d.promise();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/representatives/representatives.controller.js","module.exports = \"<form name=\\\"representativesForm\\\">\\r\\n    <div class=\\\"m-b-sm pull-right\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"add-entity-btn\\\" ng-click=\\\"$ctrl.addRow()\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n            <span>{{$ctrl.messages('clients.representatives.new')}}</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div dx-data-grid=\\\"$ctrl.gridSettings\\\" id=\\\"repsGridContainer\\\" class=\\\"gridContainer gridContainer-sm clear\\\"></div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/clients/representatives/representatives.template.html\n// module id = 815\n// module chunks = 0","export default class Representative {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/clients/:clientId/representatives/:id', { id: '@id', clientId: '@clientId' }, {\r\n        query: {\r\n            method: 'GET',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/clients/:clientId/representatives',\r\n            isArray: true\r\n        },\r\n        update: {\r\n            method: 'PUT'\r\n        },\r\n        create: {\r\n            method: 'POST',\r\n            url: ConfigurationService.getApiBaseUrl() + 'api/clients/:clientId/representatives',\r\n        },\r\n        delete: {\r\n            method: 'DELETE',\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Representative.instance = new Representative(ConfigurationService, $resource);\r\n    return Representative.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/clients/representatives/representatives.resource.js","import RegistrationController from './registration.controller';\r\nimport Registration from './registration.resource';\r\n\r\nvar module = angular.module('tower360.registration', [])\r\n  .controller('RegistrationController', RegistrationController)\r\n  .factory('Registration', Registration.activate);\r\n\r\nexport default module;\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.js","import ValidationEngine from 'devextreme/ui/validation_engine';\r\nimport Messages from '../messages';\r\n\r\nexport default class RegistrationController {\r\n    /*@ngInject*/\r\n    constructor($scope, $state, $stateParams, Registration, registrationObject, NotificationService, SecurityService) {\r\n        this.$scope = $scope;\r\n        this.$state = $state;\r\n        this.Registration = Registration;\r\n        this.registrationObject = registrationObject;\r\n        this.notificationService = NotificationService;\r\n        this.$stateParams = $stateParams;\r\n        this.securityService = SecurityService;\r\n\r\n        this.init();\r\n        this.initForm();\r\n\r\n        \r\n    }\r\n\r\n    init() {\r\n        let self = this;\r\n\r\n        self.validate = function(){\r\n            let validateGroup = ValidationEngine.getGroupConfig('settings');\r\n            let result = validateGroup.validate();\r\n            return result.isValid;\r\n        }\r\n\r\n        self.comprasionTarget = function() {\r\n            if (self.registrationObject.password)\r\n                return self.registrationObject.password;\r\n        }\r\n    }\r\n\r\n    initForm() {\r\n        let self = this;\r\n\r\n        self.errorHandler = {\r\n            requestFailed: function (response) {\r\n                this.NotificationService.error(response.data);\r\n            }\r\n        }\r\n\r\n        self.nameSettings = { bindingOptions: { value: '$ctrl.registrationObject.email' }, disabled: true };\r\n        self.nameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n            ],\r\n            validationGroup: 'settings'\r\n        }\r\n\r\n        self.passwordSettings = { bindingOptions: { value: '$ctrl.registrationObject.password' }, mode: 'password' };\r\n        self.passwordValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'stringLength', min:6, message :Messages('validation.shortPassword')}\r\n            ],\r\n            validationGroup: 'settings'\r\n        }\r\n\r\n        self.confirmPasswordSettings = { bindingOptions: { value: '$ctrl.registrationObject.confirmPassword' }, mode: 'password'};\r\n        self.confirmPasswordValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n                { type: 'compare',  comparisonTarget: self.comprasionTarget, message: Messages('validation.passwordsNotMatch') }\r\n            ],\r\n            validationGroup: 'settings'\r\n        }\r\n        self.displayNameSettings = { bindingOptions: { value: '$ctrl.registrationObject.displayName' } };\r\n        self.displayNameValidationRules = {\r\n            validationRules: [\r\n                { type: 'required', message: Messages('validation.required') },\r\n            ],\r\n            validationGroup: 'settings'\r\n        }\r\n\r\n        self.saveSettingsBtnConfig = {\r\n            text: Messages('registration.submit'),\r\n            type: 'default',\r\n            onClick: self.submit,\r\n            template: 'saveButtonWithLoadIndicator',\r\n            bindingOptions: {\r\n                disabled: '$ctrl.isSaveOperationDisabled || $ctrl.saveInProgress'\r\n            }\r\n        };\r\n\r\n        self.cancelSettingsBtnConfig = {\r\n            text: Messages('registration.cancel'),\r\n            type: 'normal',\r\n            onClick: function () {\r\n                self.$state.go('home');\r\n            }\r\n        };\r\n\r\n        self.$scope.$watch('$ctrl.registrationObject', function(newValue, oldValue) {\r\n            self.isSaveOperationDisabled = !self.validate();\r\n        }, true);\r\n\r\n    }\r\n\r\n    submit(){\r\n        let self = this.$ctrl;\r\n\r\n        let result = ValidationEngine.getGroupConfig('settings').validate();\r\n        if (result.isValid) {\r\n            self.saveInProgress = true;\r\n            //self.client.brokerId = self.currentUser.brokerId;\r\n\r\n            self.Registration.confirm({token: self.$stateParams.token}, self.registrationObject,\r\n                    (result) => {\r\n                        self.notificationService.success(Messages('clients.message.created'));\r\n                        self.saveInProgress = false;\r\n                        self.signIn(self.registrationObject.email, self.registrationObject.password);\r\n                    },\r\n                    (error) => {\r\n                        self.notificationService.error(error.data);\r\n                        self.saveInProgress = false;\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    signIn(login, password) {\r\n        let self = this.$ctrl;\r\n        \r\n        this.securityService.signIn(login, password)\r\n        .then(\r\n            (response) => {\r\n                this.securityService.reset(); \r\n                this.$state.go('home');\r\n            },\r\n            (err) => { this.error = err.data.error_description; }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.controller.js","export default class Registration {\r\n  /*@ngInject*/\r\n  constructor (ConfigurationService, $resource) {\r\n    return $resource(ConfigurationService.getApiBaseUrl() + 'api/account/registration/:token', { token: '@token' }, {\r\n        query: {\r\n            method: 'GET',\r\n        },\r\n        confirm: {\r\n            method: 'PUT'\r\n        },\r\n    });\r\n  }\r\n\r\n  /*@ngInject*/\r\n  static activate(ConfigurationService, $resource) {\r\n    Registration.instance = new Registration(ConfigurationService, $resource);\r\n    return Registration.instance;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.resource.js"],"sourceRoot":""}